diff --git a/src/tool/omniidl/cxx/cccp/cccp.c b/src/tool/omniidl/cxx/cccp/cccp.c
index 507c330..5651b3e 100644
--- a/src/tool/omniidl/cxx/cccp/cccp.c
+++ b/src/tool/omniidl/cxx/cccp/cccp.c
@@ -182,15 +182,24 @@ my_bzero (b, length)
 # endif
 #endif
 
-#if defined (__STDC__) && defined (OMNI_HAVE_VPRINTF)
+#if defined(_MSC_VER)
+#define OMNI_HAVE_VPRINTF
+#define __STDC__
+#endif
+
+#if (defined (__STDC__) && defined (OMNI_HAVE_VPRINTF))
 # include <stdarg.h>
-# define VA_START(va_list, var) va_start (va_list, var)
+# define VA_START(va_list, var) va_start(va_list, var)
 # define PRINTF_ALIST(msg) char *msg, ...
 # define PRINTF_DCL(msg)
 # define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))
 #else
+#ifdef _MSC_VER
+# include <stdarg.h>
+#else
 # include <varargs.h>
-# define VA_START(va_list, var) va_start (va_list)
+#endif
+# define VA_START(va_list, var) va_start(va_list)
 # define PRINTF_ALIST(msg) msg, va_alist
 # define PRINTF_DCL(msg) char *msg; va_dcl
 # define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))
@@ -8795,12 +8804,12 @@ my_strerror (errnum)
 /* error - print error message and increment count of errors.  */
 
 void
-error (PRINTF_ALIST (msg))
-     PRINTF_DCL (msg)
+error (PRINTF_ALIST(msg))
+     PRINTF_DCL(msg)
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   verror (msg, args);
   va_end (args);
 }
@@ -8856,12 +8865,12 @@ error_from_errno (name)
 /* Print error message but don't count it.  */
 
 void
-warning (PRINTF_ALIST (msg))
-     PRINTF_DCL (msg)
+warning (PRINTF_ALIST(msg))
+     PRINTF_DCL(msg)
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   vwarning (msg, args);
   va_end (args);
 }
@@ -8897,16 +8906,16 @@ vwarning (msg, args)
 
 static void
 #if defined (__STDC__) && defined (OMNI_HAVE_VPRINTF)
-error_with_line (int line, PRINTF_ALIST (msg))
+error_with_line (int line, PRINTF_ALIST(msg))
 #else
-error_with_line (line, PRINTF_ALIST (msg))
+error_with_line (line, PRINTF_ALIST(msg))
      int line;
-     PRINTF_DCL (msg)
+     PRINTF_DCL(msg)
 #endif
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   verror_with_line (line, msg, args);
   va_end (args);
 }
@@ -8937,16 +8946,16 @@ verror_with_line (line, msg, args)
 
 static void
 #if defined (__STDC__) && defined (OMNI_HAVE_VPRINTF)
-warning_with_line (int line, PRINTF_ALIST (msg))
+warning_with_line (int line, PRINTF_ALIST(msg))
 #else
-warning_with_line (line, PRINTF_ALIST (msg))
+warning_with_line (line, PRINTF_ALIST(msg))
      int line;
-     PRINTF_DCL (msg)
+     PRINTF_DCL(msg)
 #endif
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   vwarning_with_line (line, msg, args);
   va_end (args);
 }
@@ -8988,12 +8997,12 @@ vwarning_with_line (line, msg, args)
 /* Print an error message and maybe count it.  */
 
 void
-pedwarn (PRINTF_ALIST (msg))
-     PRINTF_DCL (msg)
+pedwarn (PRINTF_ALIST(msg))
+     PRINTF_DCL(msg)
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   if (pedantic_errors)
     verror (msg, args);
   else
@@ -9003,16 +9012,16 @@ pedwarn (PRINTF_ALIST (msg))
 
 void
 #if defined (__STDC__) && defined (OMNI_HAVE_VPRINTF)
-pedwarn_with_line (int line, PRINTF_ALIST (msg))
+pedwarn_with_line (int line, PRINTF_ALIST(msg))
 #else
-pedwarn_with_line (line, PRINTF_ALIST (msg))
+pedwarn_with_line (line, PRINTF_ALIST(msg))
      int line;
-     PRINTF_DCL (msg)
+     PRINTF_DCL(msg)
 #endif
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   if (pedantic_errors)
     verror_with_line (line, msg, args);
   else
@@ -9025,12 +9034,12 @@ pedwarn_with_line (line, PRINTF_ALIST (msg))
 
 static void
 #if defined (__STDC__) && defined (OMNI_HAVE_VPRINTF)
-pedwarn_with_file_and_line (char *file, int line, PRINTF_ALIST (msg))
+pedwarn_with_file_and_line (char *file, int line, PRINTF_ALIST(msg))
 #else
-pedwarn_with_file_and_line (file, line, PRINTF_ALIST (msg))
+pedwarn_with_file_and_line (file, line, PRINTF_ALIST(msg))
      char *file;
      int line;
-     PRINTF_DCL (msg)
+     PRINTF_DCL(msg)
 #endif
 {
   va_list args;
@@ -9043,7 +9052,7 @@ pedwarn_with_file_and_line (file, line, PRINTF_ALIST (msg))
     errors++;
   if (!pedantic_errors)
     fprintf (stderr, "warning: ");
-  VA_START (args, msg);
+  VA_START(args, msg);
   vfprintf (stderr, msg, args);
   va_end (args);
   fprintf (stderr, "\n");
@@ -9968,13 +9977,13 @@ deps_output (string, spacer)
 }
 
 static void
-fatal (PRINTF_ALIST (msg))
-     PRINTF_DCL (msg)
+fatal (PRINTF_ALIST(msg))
+     PRINTF_DCL(msg)
 {
   va_list args;
 
   fprintf (stderr, "%s: ", progname);
-  VA_START (args, msg);
+  VA_START(args, msg);
   vfprintf (stderr, msg, args);
   va_end (args);
   fprintf (stderr, "\n");
diff --git a/src/tool/omniidl/cxx/cccp/cexp.c b/src/tool/omniidl/cxx/cccp/cexp.c
index 4b4679c..b534fb3 100644
--- a/src/tool/omniidl/cxx/cccp/cexp.c
+++ b/src/tool/omniidl/cxx/cccp/cexp.c
@@ -152,15 +152,25 @@ struct arglist {
 # endif
 #endif
 
-#if defined (__STDC__) && defined (OMNI_HAVE_VPRINTF)
+#if defined(_MSC_VER)
+#define OMNI_HAVE_VPRINTF
+#define __STDC__
+#endif
+
+
+#if ( defined (__STDC__) && defined (OMNI_HAVE_VPRINTF))
 # include <stdarg.h>
-# define VA_START(va_list, var) va_start (va_list, var)
+# define VA_START(va_list, var) VA_START(va_list, var)
 # define PRINTF_ALIST(msg) char *msg, ...
 # define PRINTF_DCL(msg)
 # define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))
 #else
+#ifdef _MSC_VER
+# include <stdarg.h>
+#else
 # include <varargs.h>
-# define VA_START(va_list, var) va_start (va_list)
+#endif
+# define VA_START(va_list, var) VA_START(va_list)
 # define PRINTF_ALIST(msg) msg, va_alist
 # define PRINTF_DCL(msg) char *msg; va_dcl
 # define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))
@@ -2751,12 +2761,12 @@ initialize_random_junk ()
 }
 
 void
-error (PRINTF_ALIST (msg))
-     PRINTF_DCL (msg)
+error (PRINTF_ALIST(msg))
+     PRINTF_DCL(msg)
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   fprintf (stderr, "error: ");
   vfprintf (stderr, msg, args);
   fprintf (stderr, "\n");
@@ -2764,12 +2774,12 @@ error (PRINTF_ALIST (msg))
 }
 
 void
-pedwarn (PRINTF_ALIST (msg))
-     PRINTF_DCL (msg)
+pedwarn (PRINTF_ALIST(msg))
+     PRINTF_DCL(msg)
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   fprintf (stderr, "pedwarn: ");
   vfprintf (stderr, msg, args);
   fprintf (stderr, "\n");
@@ -2777,12 +2787,12 @@ pedwarn (PRINTF_ALIST (msg))
 }
 
 void
-warning (PRINTF_ALIST (msg))
-     PRINTF_DCL (msg)
+warning (PRINTF_ALIST(msg))
+     PRINTF_DCL(msg)
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   fprintf (stderr, "warning: ");
   vfprintf (stderr, msg, args);
   fprintf (stderr, "\n");
diff --git a/src/tool/omniidl/cxx/cccp/cexp.y.source b/src/tool/omniidl/cxx/cccp/cexp.y.source
index 6fc69f5..6f59873 100644
--- a/src/tool/omniidl/cxx/cccp/cexp.y.source
+++ b/src/tool/omniidl/cxx/cccp/cexp.y.source
@@ -111,15 +111,24 @@ struct arglist {
 # endif
 #endif
 
-#if defined (__STDC__) && defined (HAVE_VPRINTF)
+#if defined(_MSC_VER)
+#define OMNI_HAVE_VPRINTF
+#define __STDC__
+#endif
+
+#if ( defined (__STDC__) && defined (HAVE_VPRINTF) )
 # include <stdarg.h>
-# define VA_START(va_list, var) va_start (va_list, var)
+# define VA_START(va_list, var) VA_START(va_list, var)
 # define PRINTF_ALIST(msg) char *msg, ...
 # define PRINTF_DCL(msg)
 # define PRINTF_PROTO(ARGS, m, n) PROTO (ARGS) __attribute__ ((format (__printf__, m, n)))
 #else
+#ifdef _MSC_VER
+# include <stdarg.h>
+#else
 # include <varargs.h>
-# define VA_START(va_list, var) va_start (va_list)
+#endif
+# define VA_START(va_list, var) VA_START(va_list)
 # define PRINTF_ALIST(msg) msg, va_alist
 # define PRINTF_DCL(msg) char *msg; va_dcl
 # define PRINTF_PROTO(ARGS, m, n) () __attribute__ ((format (__printf__, m, n)))
@@ -1151,12 +1160,12 @@ initialize_random_junk ()
 }
 
 void
-error (PRINTF_ALIST (msg))
-     PRINTF_DCL (msg)
+error (PRINTF_ALIST(msg))
+     PRINTF_DCL(msg)
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   fprintf (stderr, "error: ");
   vfprintf (stderr, msg, args);
   fprintf (stderr, "\n");
@@ -1164,12 +1173,12 @@ error (PRINTF_ALIST (msg))
 }
 
 void
-pedwarn (PRINTF_ALIST (msg))
-     PRINTF_DCL (msg)
+pedwarn (PRINTF_ALIST(msg))
+     PRINTF_DCL(msg)
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   fprintf (stderr, "pedwarn: ");
   vfprintf (stderr, msg, args);
   fprintf (stderr, "\n");
@@ -1177,12 +1186,12 @@ pedwarn (PRINTF_ALIST (msg))
 }
 
 void
-warning (PRINTF_ALIST (msg))
-     PRINTF_DCL (msg)
+warning (PRINTF_ALIST(msg))
+     PRINTF_DCL(msg)
 {
   va_list args;
 
-  VA_START (args, msg);
+  VA_START(args, msg);
   fprintf (stderr, "warning: ");
   vfprintf (stderr, msg, args);
   fprintf (stderr, "\n");
