diff --git a/alphaplot/alphaplot.pro b/alphaplot/alphaplot.pro
index eb37c07db..8e9618223 100644
--- a/alphaplot/alphaplot.pro
+++ b/alphaplot/alphaplot.pro
@@ -8,13 +8,24 @@ QT += core gui widgets opengl network svg
 QT += script scripttools printsupport datavisualization
 
 # enable C++11 support
-CONFIG += c++11
+CONFIG += c++14
 CONFIG += qt warn_on exceptions opengl thread
 
-
+contains(CONFIG, debug) {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/debug/lib
+    LIBS += -lqcustomplotd -lopengl32
+    LIBS += -lQtSolutions_PropertyBrowserd
+} else {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/lib
+    LIBS += -lqcustomplot -lopengl32
+    LIBS += -lQtSolutions_PropertyBrowser
+}
+LIBS += -lmuparser
+INCLUDEPATH += $$[QT_INSTALL_PREFIX]/include
 INCLUDEPATH += alphaplot alphaplot/src ../data/translations
 
-include(muparser.pri)
+
+# include(muparser.pri)
 include(sourcefiles.pri)
 include(../config.pri)
 
@@ -29,7 +40,7 @@ DEFINES += Q_BUILD_32
 #############################################################################
 ###################### BASIC PROJECT PROPERTIES #############################
 #############################################################################
-
+CONFIG += console
 TARGET         = alphaplot
 TEMPLATE       = app
 
diff --git a/alphaplot/sourcefiles.pri b/alphaplot/sourcefiles.pri
index 39607535b..a1df2c9f4 100644
--- a/alphaplot/sourcefiles.pri
+++ b/alphaplot/sourcefiles.pri
@@ -311,28 +311,28 @@ SOURCES     += src/future/core/AbstractAspect.cpp \
 ####################### QCustomPlot ##########################
 ##############################################################
 
-HEADERS     += ../3rdparty/qcustomplot/qcustomplot.h
-SOURCES     += ../3rdparty/qcustomplot/qcustomplot.cpp
+# HEADERS     += ../3rdparty/qcustomplot/qcustomplot.h
+# SOURCES     += ../3rdparty/qcustomplot/qcustomplot.cpp
 
 ##############################################################
 ####################### PropertyBrowser ######################
 ##############################################################
 
-    SOURCES += ../3rdparty/propertybrowser/qtpropertybrowser.cpp \
-               ../3rdparty/propertybrowser/qtpropertymanager.cpp \
-               ../3rdparty/propertybrowser/qteditorfactory.cpp \
-               ../3rdparty/propertybrowser/qttreepropertybrowser.cpp \
-               ../3rdparty/propertybrowser/qtpropertybrowserutils.cpp \
-               ../3rdparty/propertybrowser/QtxDoubleSpinBox.cpp
+#    SOURCES += ../3rdparty/propertybrowser/qtpropertybrowser.cpp \
+#               ../3rdparty/propertybrowser/qtpropertymanager.cpp \
+#               ../3rdparty/propertybrowser/qteditorfactory.cpp \
+#               ../3rdparty/propertybrowser/qttreepropertybrowser.cpp \
+#               ../3rdparty/propertybrowser/qtpropertybrowserutils.cpp \
+#               ../3rdparty/propertybrowser/QtxDoubleSpinBox.cpp
 
-    HEADERS += ../3rdparty/propertybrowser/qtpropertybrowser.h \
-               ../3rdparty/propertybrowser/qtpropertymanager.h \
-               ../3rdparty/propertybrowser/qteditorfactory.h \
-               ../3rdparty/propertybrowser/qttreepropertybrowser.h \
-               ../3rdparty/propertybrowser/qtpropertybrowserutils_p.h \
-               ../3rdparty/propertybrowser/QtxDoubleSpinBox.h
+#    HEADERS += ../3rdparty/propertybrowser/qtpropertybrowser.h \
+#               ../3rdparty/propertybrowser/qtpropertymanager.h \
+#               ../3rdparty/propertybrowser/qteditorfactory.h \
+#               ../3rdparty/propertybrowser/qttreepropertybrowser.h \
+#               ../3rdparty/propertybrowser/qtpropertybrowserutils_p.h \
+#               ../3rdparty/propertybrowser/QtxDoubleSpinBox.h
 
-    RESOURCES += ../3rdparty/propertybrowser/qtpropertybrowser.qrc
+#    RESOURCES += ../3rdparty/propertybrowser/qtpropertybrowser.qrc
 
 ##############################################################
 ####################### PlotCommon ###########################
diff --git a/alphaplot/src/2Dplot/Axis2D.cpp b/alphaplot/src/2Dplot/Axis2D.cpp
index 5d36ca60e..3ff0db54e 100644
--- a/alphaplot/src/2Dplot/Axis2D.cpp
+++ b/alphaplot/src/2Dplot/Axis2D.cpp
@@ -865,7 +865,7 @@ void Axis2D::save(XmlStreamWriter *xmlwriter) {
 }
 
 bool Axis2D::load(XmlStreamReader *xmlreader) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "axis") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("axis"))) {
     bool ok;
     // visible property
     bool visible = xmlreader->readAttributeBool("visible", &ok);
@@ -966,9 +966,9 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
       xmlreader->raiseWarning(tr("Axis2D antialias property setting error"));
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
       // pen
-      if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
         QPen basep = xmlreader->readPen(&ok);
         if (ok)
           setBasePen(basep);
@@ -978,9 +978,9 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
     }
     // Loop through sub elements
     while (!xmlreader->atEnd()) {
-      if (xmlreader->isEndElement() && xmlreader->name() == "axis") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("axis"))) break;
       // ticker
-      if (xmlreader->isStartElement() && xmlreader->name() == "ticker") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("ticker"))) {
         // Tick step strategy
         QString tickss =
             xmlreader->readAttributeString("tickstepstrategy", &ok);
@@ -1084,10 +1084,10 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
           } break;
           case Axis2D::TickerType::Text:
             while (!xmlreader->atEnd()) {
-              if (xmlreader->isEndElement() && xmlreader->name() == "ticker")
+              if (xmlreader->isEndElement() && xmlreader->name().compare(QString("ticker")))
                 break;
 
-              if (xmlreader->isStartElement() && xmlreader->name() == "tick") {
+              if (xmlreader->isStartElement() && xmlreader->name().compare(QString("tick"))) {
                 QString tkrtext = xmlreader->readAttributeString("value", &ok);
                 (ok) ? tickertext_->append(tkrtext)
                      : xmlreader->raiseWarning(
@@ -1102,7 +1102,7 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
         }
       }
       // Label element
-      if (xmlreader->isStartElement() && xmlreader->name() == "label") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("label"))) {
         // Label text
         QString text = xmlreader->readAttributeString("text", &ok);
         if (ok)
@@ -1117,8 +1117,8 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
           xmlreader->raiseWarning(tr("Axis2D padding property setting error"));
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "label") break;
-          if (xmlreader->isStartElement() && xmlreader->name() == "font") {
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("label"))) break;
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("font"))) {
             QPair<QFont, QColor> fontpair = xmlreader->readFont(&ok);
             if (ok) {
               setlabelfont_axis(fontpair.first);
@@ -1130,7 +1130,7 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
         }
       }
       // Ticks element
-      if (xmlreader->isStartElement() && xmlreader->name() == "ticks") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("ticks"))) {
         // tick visible property
         bool tickvisible = xmlreader->readAttributeBool("visible", &ok);
         if (ok)
@@ -1164,8 +1164,8 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
               tr("Axis2D Tick Length out property setting error"));
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "ticks") break;
-          if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("ticks"))) break;
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
             QPen p = xmlreader->readPen(&ok);
             if (ok) {
               setTickPen(p);
@@ -1176,7 +1176,7 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
         }
       }
       // Sub Ticks element
-      if (xmlreader->isStartElement() && xmlreader->name() == "subticks") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("subticks"))) {
         // visible property
         bool subtickvisible = xmlreader->readAttributeBool("visible", &ok);
         if (ok)
@@ -1225,9 +1225,9 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
               tr("Axis2D subTick Length out property setting error"));
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "subticks")
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("subticks")))
             break;
-          if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
             QPen p = xmlreader->readPen(&ok);
             if (ok) {
               setSubTickPen(p);
@@ -1238,7 +1238,7 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
         }
       }
       // Tick label element
-      if (xmlreader->isStartElement() && xmlreader->name() == "ticklabels") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("ticklabels"))) {
         // visible property
         bool ticklabelvisible = xmlreader->readAttributeBool("visible", &ok);
         if (ok)
@@ -1310,9 +1310,9 @@ bool Axis2D::load(XmlStreamReader *xmlreader) {
               tr("Axis2D tick label precision property setting error"));
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "ticklabels")
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("ticklabels")))
             break;
-          if (xmlreader->isStartElement() && xmlreader->name() == "font") {
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("font"))) {
             QPair<QFont, QColor> fontpair = xmlreader->readFont(&ok);
             if (ok) {
               setticklabelfont_axis(fontpair.first);
diff --git a/alphaplot/src/2Dplot/Axis2D.h b/alphaplot/src/2Dplot/Axis2D.h
index b9ef8b975..5d55d206c 100644
--- a/alphaplot/src/2Dplot/Axis2D.h
+++ b/alphaplot/src/2Dplot/Axis2D.h
@@ -17,7 +17,7 @@
 #ifndef AXIS2D_H
 #define AXIS2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 #include "memory"
 
 class Column;
diff --git a/alphaplot/src/2Dplot/AxisRect2D.cpp b/alphaplot/src/2Dplot/AxisRect2D.cpp
index 1364cfc6f..aceff4d59 100644
--- a/alphaplot/src/2Dplot/AxisRect2D.cpp
+++ b/alphaplot/src/2Dplot/AxisRect2D.cpp
@@ -1932,13 +1932,13 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
   QPen scatterpen2;
   QBrush scatterbrush2;
   // linespecialchannel
-  if (xmlreader->isStartElement() && xmlreader->name() == "channel") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("channel"))) {
     xmlreader->readNextStartElement();
     while (!xmlreader->atEnd()) {
-      if (xmlreader->isEndElement() && xmlreader->name() == "linespecial") {
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("linespecial"))) {
         break;
       }
-      if (xmlreader->isStartElement() && xmlreader->name() == "linespecial") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("linespecial"))) {
         int xax = xmlreader->readAttributeInt("xaxis", &ok);
         if (ok) {
           xaxis1 = getXAxis(xax);
@@ -1996,7 +1996,7 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
 
         xmlreader->readNextStartElement();
         // line
-        if (xmlreader->isStartElement() && xmlreader->name() == "line") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("line"))) {
           // line style
           QString style = xmlreader->readAttributeString("style", &ok);
           if (ok) {
@@ -2032,9 +2032,9 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
           // line pen property
           while (!xmlreader->atEnd()) {
             xmlreader->readNext();
-            if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+            if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
             // pen
-            if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+            if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
               linepen1 = xmlreader->readPen(&ok);
               if (!ok)
                 xmlreader->raiseWarning(
@@ -2045,10 +2045,10 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
           // line brush property
           while (!xmlreader->atEnd()) {
             xmlreader->readNext();
-            if (xmlreader->isEndElement() && xmlreader->name() == "brush")
+            if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush")))
               break;
             // brush
-            if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+            if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
               linebrush1 = xmlreader->readBrush(&ok);
               if (!ok)
                 xmlreader->raiseWarning(tr(
@@ -2060,7 +2060,7 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
         xmlreader->readNext();
         xmlreader->readNext();
         // scatter
-        if (xmlreader->isStartElement() && xmlreader->name() == "scatter") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("scatter"))) {
           // scatter shape
           QString scattershape = xmlreader->readAttributeString("style", &ok);
           if (ok) {
@@ -2117,9 +2117,9 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
           // scatter pen property
           while (!xmlreader->atEnd()) {
             xmlreader->readNext();
-            if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+            if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
             // pen
-            if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+            if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
               scatterpen1 = xmlreader->readPen(&ok);
               if (!ok)
                 xmlreader->raiseWarning(tr(
@@ -2130,10 +2130,10 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
           // scatter brush property
           while (!xmlreader->atEnd()) {
             xmlreader->readNext();
-            if (xmlreader->isEndElement() && xmlreader->name() == "brush")
+            if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush")))
               break;
             // brush
-            if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+            if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
               scatterbrush1 = xmlreader->readBrush(&ok);
               if (!ok)
                 xmlreader->raiseWarning(
@@ -2148,9 +2148,9 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
 
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "linespecial")
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("linespecial")))
         break;
-      if (xmlreader->isStartElement() && xmlreader->name() == "linespecial") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("linespecial"))) {
         int xax = xmlreader->readAttributeInt("xaxis", &ok);
         if (ok) {
           xaxis2 = getXAxis(xax);
@@ -2208,7 +2208,7 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
 
         xmlreader->readNextStartElement();
         // line
-        if (xmlreader->isStartElement() && xmlreader->name() == "line") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("line"))) {
           // line style
           QString style = xmlreader->readAttributeString("style", &ok);
           if (ok) {
@@ -2244,9 +2244,9 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
           // line pen property
           while (!xmlreader->atEnd()) {
             xmlreader->readNext();
-            if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+            if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
             // pen
-            if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+            if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
               linepen2 = xmlreader->readPen(&ok);
               if (!ok)
                 xmlreader->raiseWarning(
@@ -2257,10 +2257,10 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
           // line brush property
           while (!xmlreader->atEnd()) {
             xmlreader->readNext();
-            if (xmlreader->isEndElement() && xmlreader->name() == "brush")
+            if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush")))
               break;
             // brush
-            if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+            if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
               linebrush2 = xmlreader->readBrush(&ok);
               if (!ok)
                 xmlreader->raiseWarning(tr(
@@ -2272,7 +2272,7 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
         xmlreader->readNext();
         xmlreader->readNext();
         // scatter
-        if (xmlreader->isStartElement() && xmlreader->name() == "scatter") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("scatter"))) {
           // scatter shape
           QString scattershape = xmlreader->readAttributeString("style", &ok);
           if (ok) {
@@ -2329,9 +2329,9 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
           // scatter pen property
           while (!xmlreader->atEnd()) {
             xmlreader->readNext();
-            if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+            if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
             // pen
-            if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+            if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
               scatterpen2 = xmlreader->readPen(&ok);
               if (!ok)
                 xmlreader->raiseWarning(tr(
@@ -2342,10 +2342,10 @@ bool AxisRect2D::loadLineSpecialChannel2D(XmlStreamReader *xmlreader,
           // scatter brush property
           while (!xmlreader->atEnd()) {
             xmlreader->readNext();
-            if (xmlreader->isEndElement() && xmlreader->name() == "brush")
+            if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush")))
               break;
             // brush
-            if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+            if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
               scatterbrush2 = xmlreader->readBrush(&ok);
               if (!ok)
                 xmlreader->raiseWarning(
@@ -2699,7 +2699,7 @@ void AxisRect2D::save(XmlStreamWriter *xmlwriter, const QPair<int, int> rowcol,
 
 bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                       QList<Matrix *> mats) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "layout") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("layout"))) {
     bool ok = false;
     // auto margins
     bool automar = xmlreader->readAttributeBool("automargin", &ok);
@@ -2731,9 +2731,9 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
 
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "brush") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush"))) break;
       // brush
-      if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
         QBrush b = xmlreader->readBrush(&ok);
         if (ok)
           setBackground(b);
@@ -2743,8 +2743,8 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
     }
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "layout") break;
-      if (xmlreader->isStartElement() && xmlreader->name() == "axis") {
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("layout"))) break;
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("axis"))) {
         Axis2D::AxisOreantation type = Axis2D::AxisOreantation::Left;
         Axis2D::TickerType tickertype = Axis2D::TickerType::Value;
         // Type property
@@ -2796,28 +2796,28 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
         axis->load(xmlreader);
       } else
         // xgrid
-        if (xmlreader->isStartElement() && xmlreader->name() == "xgrid") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("xgrid"))) {
           gridpair_.first.first->load(xmlreader, "xgrid");
         } else
           // ygrid
-          if (xmlreader->isStartElement() && xmlreader->name() == "ygrid") {
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("ygrid"))) {
             gridpair_.second.first->load(xmlreader, "ygrid");
           } else
             // textitem
             if (xmlreader->isStartElement() &&
-                xmlreader->name() == "textitem") {
+                xmlreader->name().compare(QString("textitem"))) {
               TextItem2D *textitem = addTextItem2D("Text");
               textitem->load(xmlreader);
             } else
               // lineitem
               if (xmlreader->isStartElement() &&
-                  xmlreader->name() == "lineitem") {
+                  xmlreader->name().compare(QString("lineitem"))) {
                 LineItem2D *lineitem = addLineItem2D();
                 lineitem->load(xmlreader);
               } else
                 // imageitem
                 if (xmlreader->isStartElement() &&
-                    xmlreader->name() == "imageitem") {
+                    xmlreader->name().compare(QString("imageitem"))) {
                   // source property
                   QString file = xmlreader->readAttributeString("file", &ok);
                   if (ok && QFile(file).exists()) {
@@ -2829,7 +2829,7 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                 } else
                   // curve
                   if (xmlreader->isStartElement() &&
-                      xmlreader->name() == "curve") {
+                      xmlreader->name().compare(QString("curve"))) {
                     Curve2D *curve = nullptr;
                     Axis2D *xaxis = nullptr;
                     Axis2D *yaxis = nullptr;
@@ -3022,11 +3022,11 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                       while (!xmlreader->atEnd()) {
                         xmlreader->readNext();
                         if (xmlreader->isEndElement() &&
-                            xmlreader->name() == "functiondata")
+                            xmlreader->name().compare(QString("functiondata")))
                           break;
                         // pen
                         if (xmlreader->isStartElement() &&
-                            xmlreader->name() == "data") {
+                            xmlreader->name().compare(QString("data"))) {
                           double xval =
                               xmlreader->readAttributeDouble("xdata", &ok);
                           bool xok = ok;
@@ -3065,13 +3065,13 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                     while (!xmlreader->atEnd()) {
                       xmlreader->readNextStartElement();
                       if (xmlreader->isStartElement() &&
-                          xmlreader->name() != "errorbar") {
+                          xmlreader->name().compare(QString("errorbar")) != 0) {
                         curve->load(xmlreader);
                         break;
                       }
 
                       if (xmlreader->isStartElement() &&
-                          xmlreader->name() == "errorbar") {
+                          xmlreader->name().compare(QString("errorbar"))) {
                         Table *table = nullptr;
                         Column *column = nullptr;
                         QString type =
@@ -3121,7 +3121,7 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
 
                     // linespecial
                     if (xmlreader->isStartElement() &&
-                        xmlreader->name() == "linespecial") {
+                        xmlreader->name().compare(QString("linespecial"))) {
                       LineSpecial2D *ls = nullptr;
                       Axis2D *xaxis = nullptr;
                       Axis2D *yaxis = nullptr;
@@ -3213,13 +3213,13 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                           while (!xmlreader->atEnd()) {
                             xmlreader->readNextStartElement();
                             if (xmlreader->isStartElement() &&
-                                xmlreader->name() != "errorbar") {
+                                xmlreader->name().compare(QString("errorbar")) != 0) {
                               ls->load(xmlreader);
                               break;
                             }
 
                             if (xmlreader->isStartElement() &&
-                                xmlreader->name() == "errorbar") {
+                                xmlreader->name().compare(QString("errorbar"))) {
                               Table *table = nullptr;
                               Column *column = nullptr;
                               QString type =
@@ -3270,13 +3270,13 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
 
                       // channel
                       if (xmlreader->isStartElement() &&
-                          xmlreader->name() == "channel") {
+                          xmlreader->name().compare(QString("channel"))) {
                         loadLineSpecialChannel2D(xmlreader, tabs);
                       } else
 
                         // bar
                         if (xmlreader->isStartElement() &&
-                            xmlreader->name() == "bar") {
+                            xmlreader->name().compare(QString("bar"))) {
                           Bar2D *bar = nullptr;
                           Axis2D *xaxis = nullptr;
                           Axis2D *yaxis = nullptr;
@@ -3479,12 +3479,12 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                           while (!xmlreader->atEnd()) {
                             xmlreader->readNextStartElement();
                             if (xmlreader->isStartElement() &&
-                                xmlreader->name() != "errorbar") {
+                                xmlreader->name().compare(QString("errorbar")) != 0) {
                               bar->load(xmlreader);
                               break;
                             }
                             if (xmlreader->isStartElement() &&
-                                xmlreader->name() == "errorbar") {
+                                xmlreader->name().compare(QString("errorbar"))) {
                               Table *table = nullptr;
                               Column *column = nullptr;
                               QString type =
@@ -3534,7 +3534,7 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
 
                           // vector
                           if (xmlreader->isStartElement() &&
-                              xmlreader->name() == "vector") {
+                              xmlreader->name().compare(QString("vector"))) {
                             Axis2D *xaxis = nullptr;
                             Axis2D *yaxis = nullptr;
                             Vector2D::VectorPlot type;
@@ -3632,7 +3632,7 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
 
                             // pie
                             if (xmlreader->isStartElement() &&
-                                xmlreader->name() == "pie") {
+                                xmlreader->name().compare(QString("pie"))) {
                               Table *table = nullptr;
                               Column *xcolumn = nullptr;
                               Column *ycolumn = nullptr;
@@ -3679,7 +3679,7 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                             }
 
       // statbox
-      if (xmlreader->isStartElement() && xmlreader->name() == "statbox") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("statbox"))) {
         Axis2D *xaxis = nullptr;
         Axis2D *yaxis = nullptr;
 
@@ -3727,7 +3727,7 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
       } else
 
         // colormap
-        if (xmlreader->isStartElement() && xmlreader->name() == "colormap") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("colormap"))) {
           Matrix *matrix = nullptr;
           QString matname = xmlreader->readAttributeString("matrix", &ok);
           if (ok) {
@@ -3741,7 +3741,7 @@ bool AxisRect2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
             colmap->load(xmlreader);
           }
         }
-      if (xmlreader->isStartElement() && xmlreader->name() == "legend") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("legend"))) {
         getLegend()->load(xmlreader);
       }
     }
diff --git a/alphaplot/src/2Dplot/AxisRect2D.h b/alphaplot/src/2Dplot/AxisRect2D.h
index 9c7f71b09..5d507740c 100644
--- a/alphaplot/src/2Dplot/AxisRect2D.h
+++ b/alphaplot/src/2Dplot/AxisRect2D.h
@@ -17,17 +17,21 @@
 #ifndef AXISRECT2D_H
 #define AXISRECT2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 #include "Axis2D.h"
 #include "Bar2D.h"
 #include "Graph2DCommon.h"
 #include "StatBox2D.h"
 #include "Vector2D.h"
+#include "LineSpecial2D.h"
+
+#include "Matrix.h"
+#include "Table.h"
 
 class Legend2D;
-class Table;
+//class Table;
 class Column;
-class Matrix;
+//class Matrix;
 class TextItem2D;
 class StatBox2D;
 class LineItem2D;
@@ -39,7 +45,7 @@ class Pie2D;
 class Plot2D;
 class Grid2D;
 class Curve2D;
-class LineSpecial2D;
+//class LineSpecial2D;
 class ErrorBar2D;
 class StatBox2D;
 class LayoutInset2D;
diff --git a/alphaplot/src/2Dplot/Bar2D.cpp b/alphaplot/src/2Dplot/Bar2D.cpp
index f4fd76afc..aa80a7b5d 100644
--- a/alphaplot/src/2Dplot/Bar2D.cpp
+++ b/alphaplot/src/2Dplot/Bar2D.cpp
@@ -314,9 +314,9 @@ void Bar2D::save(XmlStreamWriter *xmlwriter, int xaxis, int yaxis) {
 bool Bar2D::load(XmlStreamReader *xmlreader) {
   bool ok;
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "bar") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("bar"))) break;
 
-    if (xmlreader->isStartElement() && xmlreader->name() == "box") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("box"))) {
       // width
       double w = xmlreader->readAttributeDouble("width", &ok);
       (ok) ? setWidth(w)
@@ -337,9 +337,9 @@ bool Bar2D::load(XmlStreamReader *xmlreader) {
       // pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen strokep = xmlreader->readPen(&ok);
           if (ok) {
             setPen(strokep);
@@ -351,9 +351,9 @@ bool Bar2D::load(XmlStreamReader *xmlreader) {
       // brush property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "brush") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush"))) break;
         // brush
-        if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
           QBrush b = xmlreader->readBrush(&ok);
           if (ok) {
             setBrush(b);
diff --git a/alphaplot/src/2Dplot/Bar2D.h b/alphaplot/src/2Dplot/Bar2D.h
index 0a8a800b7..af918cff9 100644
--- a/alphaplot/src/2Dplot/Bar2D.h
+++ b/alphaplot/src/2Dplot/Bar2D.h
@@ -1,7 +1,7 @@
 #ifndef BAR2D_H
 #define BAR2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 #include "Axis2D.h"
 #include "Graph2DCommon.h"
 
diff --git a/alphaplot/src/2Dplot/ColorMap2D.cpp b/alphaplot/src/2Dplot/ColorMap2D.cpp
index 5734cd769..c7912f30a 100644
--- a/alphaplot/src/2Dplot/ColorMap2D.cpp
+++ b/alphaplot/src/2Dplot/ColorMap2D.cpp
@@ -464,9 +464,9 @@ bool ColorMap2D::load(XmlStreamReader *xmlreader) {
              tr("ColorMap2D gradient periodic property setting error"));
 
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "colormap") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("colormap"))) break;
 
-    if (xmlreader->isStartElement() && xmlreader->name() == "scale") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("scale"))) {
       // color map scale visible
       bool mapv = xmlreader->readAttributeBool("mapscalevisible", &ok);
       (ok) ? getcolormapscale_colormap()->setVisible(mapv)
@@ -523,9 +523,9 @@ bool ColorMap2D::load(XmlStreamReader *xmlreader) {
       // scale pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen strokep = xmlreader->readPen(&ok);
           if (ok) {
             getcolormapscale_colormap()->axis()->setBasePen(strokep);
@@ -537,7 +537,7 @@ bool ColorMap2D::load(XmlStreamReader *xmlreader) {
       // label property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "label") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("label"))) break;
         // label text
         QString lbltxt = xmlreader->readAttributeString("text", &ok);
         (ok) ? setname_colormap(lbltxt)
@@ -551,8 +551,8 @@ bool ColorMap2D::load(XmlStreamReader *xmlreader) {
         // label font
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "font") break;
-          if (xmlreader->isStartElement() && xmlreader->name() == "font") {
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("font"))) break;
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("font"))) {
             QPair<QFont, QColor> fontpair = xmlreader->readFont(&ok);
             if (ok) {
               getcolormapscale_colormap()->axis()->setLabelFont(fontpair.first);
@@ -566,7 +566,7 @@ bool ColorMap2D::load(XmlStreamReader *xmlreader) {
       }
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "ticks") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("ticks"))) break;
         // tick visible property
         bool tickvisible = xmlreader->readAttributeBool("visible", &ok);
         if (ok)
@@ -590,8 +590,8 @@ bool ColorMap2D::load(XmlStreamReader *xmlreader) {
               tr("ColorMap2D Tick Length out property setting error"));
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
-          if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
             QPen p = xmlreader->readPen(&ok);
             if (ok) {
               getcolormapscale_colormap()->axis()->setTickPen(p);
@@ -604,7 +604,7 @@ bool ColorMap2D::load(XmlStreamReader *xmlreader) {
       // Sub Ticks element
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "subticks") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("subticks"))) break;
         // visible property
         bool subtickvisible = xmlreader->readAttributeBool("visible", &ok);
         (ok) ? getcolormapscale_colormap()->axis()->setSubTicks(subtickvisible)
@@ -622,8 +622,8 @@ bool ColorMap2D::load(XmlStreamReader *xmlreader) {
                    tr("ColorMap2D subTick Length out property setting error"));
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
-          if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
             QPen p = xmlreader->readPen(&ok);
             (ok) ? getcolormapscale_colormap()->axis()->setSubTickPen(p)
                  : xmlreader->raiseWarning(
@@ -634,7 +634,7 @@ bool ColorMap2D::load(XmlStreamReader *xmlreader) {
       // Tick label element
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "ticklabels")
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("ticklabels")))
           break;
 
         // visible property
@@ -706,8 +706,8 @@ bool ColorMap2D::load(XmlStreamReader *xmlreader) {
                    "ColorMap2D tick label precision property setting error"));
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "font") break;
-          if (xmlreader->isStartElement() && xmlreader->name() == "font") {
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("font"))) break;
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("font"))) {
             QPair<QFont, QColor> fontpair = xmlreader->readFont(&ok);
             if (ok) {
               getcolormapscale_colormap()->axis()->setTickLabelFont(
diff --git a/alphaplot/src/2Dplot/ColorMap2D.h b/alphaplot/src/2Dplot/ColorMap2D.h
index 7ee43168c..bda2825d2 100644
--- a/alphaplot/src/2Dplot/ColorMap2D.h
+++ b/alphaplot/src/2Dplot/ColorMap2D.h
@@ -1,7 +1,7 @@
 #ifndef COLORMAP2D_H
 #define COLORMAP2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 #include "Axis2D.h"
 
 class Matrix;
diff --git a/alphaplot/src/2Dplot/Curve2D.cpp b/alphaplot/src/2Dplot/Curve2D.cpp
index 719f9cf6a..53070cba6 100644
--- a/alphaplot/src/2Dplot/Curve2D.cpp
+++ b/alphaplot/src/2Dplot/Curve2D.cpp
@@ -755,10 +755,10 @@ void Curve2D::save(XmlStreamWriter *xmlwriter, int xaxis, int yaxis) {
 bool Curve2D::load(XmlStreamReader *xmlreader) {
   bool ok;
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "curve") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("curve"))) break;
 
     // line
-    if (xmlreader->isStartElement() && xmlreader->name() == "line") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("line"))) {
       // line style
       QString style = xmlreader->readAttributeString("style", &ok);
       if (ok) {
@@ -786,9 +786,9 @@ bool Curve2D::load(XmlStreamReader *xmlreader) {
       // line pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen strokep = xmlreader->readPen(&ok);
           if (ok) {
             setlinestrokecolor_cplot(strokep.color());
@@ -803,9 +803,9 @@ bool Curve2D::load(XmlStreamReader *xmlreader) {
       // line brush property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "brush") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush"))) break;
         // brush
-        if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
           QBrush b = xmlreader->readBrush(&ok);
           if (ok) {
             setlinefillcolor_cplot(b.color());
@@ -818,7 +818,7 @@ bool Curve2D::load(XmlStreamReader *xmlreader) {
     }
 
     // scatter
-    if (xmlreader->isStartElement() && xmlreader->name() == "scatter") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("scatter"))) {
       // scatter shape
       QString scattershape = xmlreader->readAttributeString("style", &ok);
       if (ok) {
@@ -874,9 +874,9 @@ bool Curve2D::load(XmlStreamReader *xmlreader) {
       // scatter pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen strokep = xmlreader->readPen(&ok);
           if (ok) {
             setscatterstrokecolor_cplot(strokep.color());
@@ -891,9 +891,9 @@ bool Curve2D::load(XmlStreamReader *xmlreader) {
       // scatter brush property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "brush") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush"))) break;
         // brush
-        if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
           QBrush b = xmlreader->readBrush(&ok);
           if (ok) {
             setscatterfillcolor_cplot(b.color());
diff --git a/alphaplot/src/2Dplot/Curve2D.h b/alphaplot/src/2Dplot/Curve2D.h
index 646c5fd69..8bf693aab 100644
--- a/alphaplot/src/2Dplot/Curve2D.h
+++ b/alphaplot/src/2Dplot/Curve2D.h
@@ -1,7 +1,7 @@
 #ifndef CURVE2D_H
 #define CURVE2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 #include "Axis2D.h"
 #include "Graph2DCommon.h"
 
diff --git a/alphaplot/src/2Dplot/DataManager2D.h b/alphaplot/src/2Dplot/DataManager2D.h
index cadf9aabe..a8786e283 100644
--- a/alphaplot/src/2Dplot/DataManager2D.h
+++ b/alphaplot/src/2Dplot/DataManager2D.h
@@ -4,7 +4,7 @@
 #include <QList>
 #include <QVector>
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 #include "Graph2DCommon.h"
 
 class Table;
diff --git a/alphaplot/src/2Dplot/ErrorBar2D.cpp b/alphaplot/src/2Dplot/ErrorBar2D.cpp
index 8e3fd92a4..1fcd2cffc 100644
--- a/alphaplot/src/2Dplot/ErrorBar2D.cpp
+++ b/alphaplot/src/2Dplot/ErrorBar2D.cpp
@@ -128,7 +128,7 @@ void ErrorBar2D::save(XmlStreamWriter *xmlwriter) {
 }
 
 bool ErrorBar2D::load(XmlStreamReader *xmlreader) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "errorbar") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("errorbar"))) {
     bool ok;
 
     // whiskerwidth property
@@ -158,9 +158,9 @@ bool ErrorBar2D::load(XmlStreamReader *xmlreader) {
     // strokepen property
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
       // pen
-      if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
         QPen strokep = xmlreader->readPen(&ok);
         if (ok)
           setPen(strokep);
@@ -173,9 +173,9 @@ bool ErrorBar2D::load(XmlStreamReader *xmlreader) {
     // strokepen property
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "brush") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush"))) break;
       // pen
-      if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
         QBrush b = xmlreader->readBrush(&ok);
         if (ok)
           setBrush(b);
diff --git a/alphaplot/src/2Dplot/ErrorBar2D.h b/alphaplot/src/2Dplot/ErrorBar2D.h
index 587a81ff2..4b9d764c3 100644
--- a/alphaplot/src/2Dplot/ErrorBar2D.h
+++ b/alphaplot/src/2Dplot/ErrorBar2D.h
@@ -1,7 +1,7 @@
 #ifndef ERRORBAR2D_H
 #define ERRORBAR2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 
 class Table;
 class Column;
diff --git a/alphaplot/src/2Dplot/Grid2D.cpp b/alphaplot/src/2Dplot/Grid2D.cpp
index 21c95269a..954f0180a 100644
--- a/alphaplot/src/2Dplot/Grid2D.cpp
+++ b/alphaplot/src/2Dplot/Grid2D.cpp
@@ -167,9 +167,9 @@ bool Grid2D::load(XmlStreamReader *xmlreader, const QString tag) {
     // major
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "major") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("major"))) break;
       // visible
-      if (xmlreader->isStartElement() && xmlreader->name() == "major") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("major"))) {
         bool visible = xmlreader->readAttributeBool("visible", &ok);
         (ok) ? setMajorGridVisible(visible)
              : xmlreader->raiseWarning(
@@ -177,9 +177,9 @@ bool Grid2D::load(XmlStreamReader *xmlreader, const QString tag) {
         // strokepen property
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
           // pen
-          if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
             QPen strokep = xmlreader->readPen(&ok);
             if (ok) {
               setMajorGridColor(strokep.color());
@@ -195,9 +195,9 @@ bool Grid2D::load(XmlStreamReader *xmlreader, const QString tag) {
     // zeroth line
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "zero") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("zero"))) break;
       // visible
-      if (xmlreader->isStartElement() && xmlreader->name() == "zero") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("zero"))) {
         bool visible = xmlreader->readAttributeBool("visible", &ok);
         (ok) ? setZerothLineVisible(visible)
              : xmlreader->raiseWarning(
@@ -205,9 +205,9 @@ bool Grid2D::load(XmlStreamReader *xmlreader, const QString tag) {
         // strokepen property
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
           // pen
-          if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
             QPen strokep = xmlreader->readPen(&ok);
             if (ok) {
               setZerothLineColor(strokep.color());
@@ -223,9 +223,9 @@ bool Grid2D::load(XmlStreamReader *xmlreader, const QString tag) {
     // minor
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "minor") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("minor"))) break;
       // visible
-      if (xmlreader->isStartElement() && xmlreader->name() == "minor") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("minor"))) {
         bool visible = xmlreader->readAttributeBool("visible", &ok);
         (ok) ? setMinorGridVisible(visible)
              : xmlreader->raiseWarning(
@@ -233,9 +233,9 @@ bool Grid2D::load(XmlStreamReader *xmlreader, const QString tag) {
         // strokepen property
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
           // pen
-          if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
             QPen strokep = xmlreader->readPen(&ok);
             if (ok) {
               setMinorGridColor(strokep.color());
diff --git a/alphaplot/src/2Dplot/Grid2D.h b/alphaplot/src/2Dplot/Grid2D.h
index fc80a040e..ec8776700 100644
--- a/alphaplot/src/2Dplot/Grid2D.h
+++ b/alphaplot/src/2Dplot/Grid2D.h
@@ -17,7 +17,7 @@
 #ifndef GRID2D_H
 #define GRID2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 
 class Axis2D;
 class XmlStreamReader;
diff --git a/alphaplot/src/2Dplot/ImageItem2D.cpp b/alphaplot/src/2Dplot/ImageItem2D.cpp
index 44351e81b..5ca8e84c4 100644
--- a/alphaplot/src/2Dplot/ImageItem2D.cpp
+++ b/alphaplot/src/2Dplot/ImageItem2D.cpp
@@ -126,7 +126,7 @@ void ImageItem2D::save(XmlStreamWriter *xmlwriter) {
 }
 
 bool ImageItem2D::load(XmlStreamReader *xmlreader) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "imageitem") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("imageitem"))) {
     bool ok;
 
     double orix = xmlreader->readAttributeDouble("x", &ok);
@@ -162,9 +162,9 @@ bool ImageItem2D::load(XmlStreamReader *xmlreader) {
     // strokepen property
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
       // pen
-      if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
         QPen strokep = xmlreader->readPen(&ok);
         if (ok)
           setPen(strokep);
diff --git a/alphaplot/src/2Dplot/ImageItem2D.h b/alphaplot/src/2Dplot/ImageItem2D.h
index cb2293bd5..229d68c4f 100644
--- a/alphaplot/src/2Dplot/ImageItem2D.h
+++ b/alphaplot/src/2Dplot/ImageItem2D.h
@@ -1,7 +1,7 @@
 #ifndef IMAGEITEM2D_H
 #define IMAGEITEM2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 
 class AxisRect2D;
 class Plot2D;
diff --git a/alphaplot/src/2Dplot/Layout2D.cpp b/alphaplot/src/2Dplot/Layout2D.cpp
index 43b362af1..066256da3 100644
--- a/alphaplot/src/2Dplot/Layout2D.cpp
+++ b/alphaplot/src/2Dplot/Layout2D.cpp
@@ -54,7 +54,7 @@ Layout2D::Layout2D(const QString &label, QWidget *parent, const QString name,
   main_widget_->setContentsMargins(0, 0, 0, 0);
   if (name.isEmpty()) setObjectName("layout2d");
   QDateTime birthday = QDateTime::currentDateTime();
-  setBirthDate(birthday.toString(Qt::LocalDate));
+  setBirthDate(birthday.toString());
 
   layoutManagebuttonsBox_ = new QHBoxLayout();
   refreshPlotButton_ = new ToolButton();
@@ -130,7 +130,7 @@ Layout2D::Layout2D(const QString &label, QWidget *parent, const QString name,
   layout->addLayout(hbox);
   layout->addWidget(plot2dCanvas_, 1);
   setWidget(main_widget_);
-  layout->setMargin(0);
+  layout->setContentsMargins(0,0,0,0);
   layout->setSpacing(0);
   setGeometry(QRect(0, 0, defaultlayout2dwidth_, defaultlayout2dheight_));
   setMinimumSize(QSize(minimumlayout2dwidth_, minimumlayout2dheight_));
@@ -1527,7 +1527,7 @@ void Layout2D::save(XmlStreamWriter *xmlwriter, const bool saveastemplate) {
   xmlwriter->writeAttribute("y", QString::number(pos().y()));
   xmlwriter->writeAttribute("width", QString::number(width()));
   xmlwriter->writeAttribute("height", QString::number(height()));
-  QDateTime datetime = QDateTime::fromString(birthDate(), Qt::LocalDate);
+  QDateTime datetime = QDateTime::fromString(birthDate());
   xmlwriter->writeAttribute("creation_time",
                             datetime.toString("yyyy-dd-MM hh:mm:ss:zzz"));
   xmlwriter->writeAttribute("caption_spec", QString::number(captionPolicy()));
@@ -1557,7 +1557,7 @@ void Layout2D::save(XmlStreamWriter *xmlwriter, const bool saveastemplate) {
 
 bool Layout2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                     QList<Matrix *> mats, bool setname) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "plot2d") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("plot2d"))) {
     bool ok = false;
 
     // read caption spec
@@ -1581,11 +1581,11 @@ bool Layout2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
     QDateTime creation_time =
         QDateTime::fromString(time, "yyyy-dd-MM hh:mm:ss:zzz");
     if (!time.isEmpty() && creation_time.isValid() && ok) {
-      setBirthDate(creation_time.toString(Qt::LocalDate));
+      setBirthDate(creation_time.toString());
     } else {
       xmlreader->raiseWarning(
           tr("Invalid creation time. Using current time insted."));
-      setBirthDate(QDateTime::currentDateTime().toString(Qt::LocalDate));
+      setBirthDate(QDateTime::currentDateTime().toString());
     }
     // read caption spec
     int captionspec = xmlreader->readAttributeInt("caption_spec", &ok);
@@ -1611,8 +1611,8 @@ bool Layout2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
 
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "canvas") break;
-      if (xmlreader->isStartElement() && xmlreader->name() == "canvas") {
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("canvas"))) break;
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("canvas"))) {
         double dpr = xmlreader->readAttributeDouble("devicepixelratio", &ok);
         if (ok)
           plot2dCanvas_->setBufferDevicePixelRatio(dpr);
@@ -1656,8 +1656,8 @@ bool Layout2D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
     }
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "plot2d") break;
-      if (xmlreader->isStartElement() && xmlreader->name() == "layout") {
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("plot2d"))) break;
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("layout"))) {
         // read index
         int index = xmlreader->readAttributeInt("index", &ok);
         if (!ok) {
@@ -1760,7 +1760,7 @@ void Layout2D::copy(Layout2D *layout, QList<Table *> tables,
   }
   std::unique_ptr<XmlStreamWriter> xmlwriter =
       std::unique_ptr<XmlStreamWriter>(new XmlStreamWriter(file.get()));
-  xmlwriter->setCodec("UTF-8");
+  //xmlwriter->setCodec("UTF-8");
   xmlwriter->setAutoFormatting(false);
   layout->save(xmlwriter.get());
   file->close();
@@ -1775,7 +1775,7 @@ void Layout2D::copy(Layout2D *layout, QList<Table *> tables,
   while (!xmlreader->atEnd()) {
     token = xmlreader->readNext();
     if (token == QXmlStreamReader::StartElement &&
-        xmlreader->name() == "plot2d") {
+        xmlreader->name().compare(QString("plot2d"))) {
       load(xmlreader.get(), tables, matrixs, false);
     }
   }
diff --git a/alphaplot/src/2Dplot/LayoutGrid2D.h b/alphaplot/src/2Dplot/LayoutGrid2D.h
index 40526bf14..4d13dd6fe 100644
--- a/alphaplot/src/2Dplot/LayoutGrid2D.h
+++ b/alphaplot/src/2Dplot/LayoutGrid2D.h
@@ -1,7 +1,7 @@
 #ifndef LAYOUTGRID2D_H
 #define LAYOUTGRID2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 
 class LayoutGrid2D : public QCPLayoutGrid {
   Q_OBJECT
diff --git a/alphaplot/src/2Dplot/LayoutInset2D.h b/alphaplot/src/2Dplot/LayoutInset2D.h
index 14358d27a..c4f38e4b0 100644
--- a/alphaplot/src/2Dplot/LayoutInset2D.h
+++ b/alphaplot/src/2Dplot/LayoutInset2D.h
@@ -1,7 +1,7 @@
 #ifndef LAYOUTINSET2D_H
 #define LAYOUTINSET2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 
 class AxisRect2D;
 
diff --git a/alphaplot/src/2Dplot/Legend2D.cpp b/alphaplot/src/2Dplot/Legend2D.cpp
index 6e5896889..1bf0c87c7 100644
--- a/alphaplot/src/2Dplot/Legend2D.cpp
+++ b/alphaplot/src/2Dplot/Legend2D.cpp
@@ -199,7 +199,7 @@ void Legend2D::save(XmlStreamWriter *xmlwriter) {
 }
 
 bool Legend2D::load(XmlStreamReader *xmlreader) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "legend") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("legend"))) {
     bool ok;
     double orix = xmlreader->readAttributeDouble("x", &ok);
     if (ok) {
@@ -282,9 +282,9 @@ bool Legend2D::load(XmlStreamReader *xmlreader) {
     // font
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "font") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("font"))) break;
       // font
-      if (xmlreader->isStartElement() && xmlreader->name() == "font") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("font"))) {
         QPair<QFont, QColor> fontpair = xmlreader->readFont(&ok);
         if (ok) {
           setFont(fontpair.first);
@@ -297,9 +297,9 @@ bool Legend2D::load(XmlStreamReader *xmlreader) {
     // pen
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
       // pen
-      if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
         QPen basep = xmlreader->readPen(&ok);
         if (ok)
           setBorderPen(basep);
@@ -312,8 +312,8 @@ bool Legend2D::load(XmlStreamReader *xmlreader) {
     // brush
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "brush") break;
-      if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush"))) break;
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
         QBrush brush = xmlreader->readBrush(&ok);
         if (ok)
           setBrush(brush);
@@ -326,9 +326,9 @@ bool Legend2D::load(XmlStreamReader *xmlreader) {
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
       if (xmlreader->isEndElement() &&
-          (xmlreader->name() == "title" || xmlreader->name() == "legend"))
+          (xmlreader->name().compare(QString("title")) || xmlreader->name().compare(QString("legend"))))
         break;
-      if (xmlreader->isStartElement() && xmlreader->name() == "title") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("title"))) {
         // title visible
         bool titlevisible = xmlreader->readAttributeBool("visible", &ok);
         (ok) ? (titlevisible) ? addtitle_legend() : removetitle_legend()
@@ -340,9 +340,9 @@ bool Legend2D::load(XmlStreamReader *xmlreader) {
                    tr("no Legend2D title text property element found"));
         while (!xmlreader->atEnd()) {
           xmlreader->readNext();
-          if (xmlreader->isEndElement() && xmlreader->name() == "font") break;
+          if (xmlreader->isEndElement() && xmlreader->name().compare(QString("font"))) break;
           // font
-          if (xmlreader->isStartElement() && xmlreader->name() == "font") {
+          if (xmlreader->isStartElement() && xmlreader->name().compare(QString("font"))) {
             QPair<QFont, QColor> fontpair = xmlreader->readFont(&ok);
             if (ok) {
               settitlefont_legend(fontpair.first);
diff --git a/alphaplot/src/2Dplot/Legend2D.h b/alphaplot/src/2Dplot/Legend2D.h
index fb5f21192..1bdaad0ce 100644
--- a/alphaplot/src/2Dplot/Legend2D.h
+++ b/alphaplot/src/2Dplot/Legend2D.h
@@ -1,7 +1,7 @@
 #ifndef LEGEND2D_H
 #define LEGEND2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 
 class AxisRect2D;
 class Curve2D;
diff --git a/alphaplot/src/2Dplot/LineItem2D.cpp b/alphaplot/src/2Dplot/LineItem2D.cpp
index 5db62e38c..a47604e60 100644
--- a/alphaplot/src/2Dplot/LineItem2D.cpp
+++ b/alphaplot/src/2Dplot/LineItem2D.cpp
@@ -230,7 +230,7 @@ void LineItem2D::save(XmlStreamWriter *xmlwriter) {
 }
 
 bool LineItem2D::load(XmlStreamReader *xmlreader) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "lineitem") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("lineitem"))) {
     bool ok;
 
     // position
@@ -298,9 +298,9 @@ bool LineItem2D::load(XmlStreamReader *xmlreader) {
     // strokepen property
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
       // pen
-      if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
         QPen strokep = xmlreader->readPen(&ok);
         if (ok)
           setPen(strokep);
diff --git a/alphaplot/src/2Dplot/LineItem2D.h b/alphaplot/src/2Dplot/LineItem2D.h
index c03a74fb7..87796e520 100644
--- a/alphaplot/src/2Dplot/LineItem2D.h
+++ b/alphaplot/src/2Dplot/LineItem2D.h
@@ -1,7 +1,7 @@
 #ifndef LINEITEM2D_H
 #define LINEITEM2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 
 class AxisRect2D;
 class Plot2D;
diff --git a/alphaplot/src/2Dplot/LineSpecial2D.cpp b/alphaplot/src/2Dplot/LineSpecial2D.cpp
index e8f16fb9a..6c302e901 100644
--- a/alphaplot/src/2Dplot/LineSpecial2D.cpp
+++ b/alphaplot/src/2Dplot/LineSpecial2D.cpp
@@ -550,10 +550,10 @@ void LineSpecial2D::save(XmlStreamWriter *xmlwriter, int xaxis, int yaxis) {
 bool LineSpecial2D::load(XmlStreamReader *xmlreader) {
   bool ok;
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "linespecial") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("linespecial"))) break;
 
     // line
-    if (xmlreader->isStartElement() && xmlreader->name() == "line") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("line"))) {
       // line style
       QString style = xmlreader->readAttributeString("style", &ok);
       if (ok) {
@@ -587,9 +587,9 @@ bool LineSpecial2D::load(XmlStreamReader *xmlreader) {
       // line pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen strokep = xmlreader->readPen(&ok);
           if (ok) {
             setlinestrokecolor_lsplot(strokep.color());
@@ -604,9 +604,9 @@ bool LineSpecial2D::load(XmlStreamReader *xmlreader) {
       // line brush property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "brush") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush"))) break;
         // brush
-        if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
           QBrush b = xmlreader->readBrush(&ok);
           if (ok) {
             setlinefillcolor_lsplot(b.color());
@@ -619,7 +619,7 @@ bool LineSpecial2D::load(XmlStreamReader *xmlreader) {
     }
 
     // scatter
-    if (xmlreader->isStartElement() && xmlreader->name() == "scatter") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("scatter"))) {
       // scatter shape
       QString scattershape = xmlreader->readAttributeString("style", &ok);
       if (ok) {
@@ -675,9 +675,9 @@ bool LineSpecial2D::load(XmlStreamReader *xmlreader) {
       // scatter pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen strokep = xmlreader->readPen(&ok);
           if (ok) {
             setscatterstrokecolor_lsplot(strokep.color());
@@ -692,9 +692,9 @@ bool LineSpecial2D::load(XmlStreamReader *xmlreader) {
       // scatter brush property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "brush") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush"))) break;
         // brush
-        if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
           QBrush b = xmlreader->readBrush(&ok);
           if (ok) {
             setscatterfillcolor_lsplot(b.color());
diff --git a/alphaplot/src/2Dplot/LineSpecial2D.h b/alphaplot/src/2Dplot/LineSpecial2D.h
index 8864e1232..18a8da777 100644
--- a/alphaplot/src/2Dplot/LineSpecial2D.h
+++ b/alphaplot/src/2Dplot/LineSpecial2D.h
@@ -1,7 +1,7 @@
 #ifndef LINESCATTER2D_H
 #define LINESCATTER2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 #include "Graph2DCommon.h"
 
 class Axis2D;
diff --git a/alphaplot/src/2Dplot/Pie2D.cpp b/alphaplot/src/2Dplot/Pie2D.cpp
index 4852d19ee..983a966bd 100644
--- a/alphaplot/src/2Dplot/Pie2D.cpp
+++ b/alphaplot/src/2Dplot/Pie2D.cpp
@@ -244,7 +244,7 @@ void Pie2D::save(XmlStreamWriter *xmlwriter) {
 }
 
 bool Pie2D::load(XmlStreamReader *xmlreader) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "pie") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pie"))) {
     bool ok;
 
     // style property
@@ -269,9 +269,9 @@ bool Pie2D::load(XmlStreamReader *xmlreader) {
     // strokepen property
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
       // pen
-      if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
         QPen strokep = xmlreader->readPen(&ok);
         if (ok)
           setstrokepen_pieplot(strokep);
diff --git a/alphaplot/src/2Dplot/Pie2D.h b/alphaplot/src/2Dplot/Pie2D.h
index 4dc19cb4d..c96c8d857 100644
--- a/alphaplot/src/2Dplot/Pie2D.h
+++ b/alphaplot/src/2Dplot/Pie2D.h
@@ -19,7 +19,7 @@
 
 #include <QObject>
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 #include "Graph2DCommon.h"
 
 class AxisRect2D;
diff --git a/alphaplot/src/2Dplot/Plot2D.h b/alphaplot/src/2Dplot/Plot2D.h
index d0b033b7f..a0262c84a 100644
--- a/alphaplot/src/2Dplot/Plot2D.h
+++ b/alphaplot/src/2Dplot/Plot2D.h
@@ -17,7 +17,7 @@
 #ifndef PLOT2D_H
 #define PLOT2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 
 class Plot2D : public QCustomPlot {
   Q_OBJECT
diff --git a/alphaplot/src/2Dplot/StatBox2D.cpp b/alphaplot/src/2Dplot/StatBox2D.cpp
index b7c9f3030..d4065d415 100644
--- a/alphaplot/src/2Dplot/StatBox2D.cpp
+++ b/alphaplot/src/2Dplot/StatBox2D.cpp
@@ -761,10 +761,10 @@ void StatBox2D::save(XmlStreamWriter *xmlwriter, int xaxis, int yaxis) {
 bool StatBox2D::load(XmlStreamReader *xmlreader) {
   bool ok;
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "statbox") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("statbox"))) break;
 
     // box
-    if (xmlreader->isStartElement() && xmlreader->name() == "box") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("box"))) {
       // box fill status
       bool fill = xmlreader->readAttributeBool("fill", &ok);
       (ok) ? setfillstatus_statbox(fill)
@@ -819,9 +819,9 @@ bool StatBox2D::load(XmlStreamReader *xmlreader) {
       // box pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen boxpen = xmlreader->readPen(&ok);
           (ok) ? setPen(boxpen)
                : xmlreader->raiseWarning(
@@ -832,9 +832,9 @@ bool StatBox2D::load(XmlStreamReader *xmlreader) {
       // box brush property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "brush") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush"))) break;
         // brush
-        if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
           QBrush boxbrush = xmlreader->readBrush(&ok);
           (ok) ? setBrush(boxbrush)
                : xmlreader->raiseWarning(
@@ -844,13 +844,13 @@ bool StatBox2D::load(XmlStreamReader *xmlreader) {
     }
 
     // median
-    if (xmlreader->isStartElement() && xmlreader->name() == "median") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("median"))) {
       // box pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen mpen = xmlreader->readPen(&ok);
           (ok) ? setMedianPen(mpen)
                : xmlreader->raiseWarning(
@@ -860,7 +860,7 @@ bool StatBox2D::load(XmlStreamReader *xmlreader) {
     }
 
     // whisker
-    if (xmlreader->isStartElement() && xmlreader->name() == "whisker") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("whisker"))) {
       // whisker antialias
       bool boxantialias = xmlreader->readAttributeBool("antialias", &ok);
       (ok) ? setWhiskerAntialiased(boxantialias)
@@ -876,9 +876,9 @@ bool StatBox2D::load(XmlStreamReader *xmlreader) {
       // pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen wpen = xmlreader->readPen(&ok);
           (ok) ? setWhiskerPen(wpen)
                : xmlreader->raiseWarning(
@@ -888,7 +888,7 @@ bool StatBox2D::load(XmlStreamReader *xmlreader) {
     }
 
     // whiskerbar
-    if (xmlreader->isStartElement() && xmlreader->name() == "whiskerbar") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("whiskerbar"))) {
       // box style
       QString wstyle = xmlreader->readAttributeString("whiskerstyle", &ok);
       if (ok) {
@@ -917,9 +917,9 @@ bool StatBox2D::load(XmlStreamReader *xmlreader) {
       // pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen wbpen = xmlreader->readPen(&ok);
           (ok) ? setWhiskerBarPen(wbpen)
                : xmlreader->raiseWarning(
@@ -930,7 +930,7 @@ bool StatBox2D::load(XmlStreamReader *xmlreader) {
 
     // scatter
     // scatter show
-    if (xmlreader->isStartElement() && xmlreader->name() == "scatter") {
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("scatter"))) {
       QString scattershow = xmlreader->readAttributeString("show", &ok);
       if (ok) {
         (scattershow == "all")       ? setOutlierScatter(Scatter::All)
@@ -998,9 +998,9 @@ bool StatBox2D::load(XmlStreamReader *xmlreader) {
       // scatter pen property
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
         // pen
-        if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
           QPen strokep = xmlreader->readPen(&ok);
           if (ok) {
             setscatterstrokecolor_statbox(strokep.color());
diff --git a/alphaplot/src/2Dplot/StatBox2D.h b/alphaplot/src/2Dplot/StatBox2D.h
index 8d2c3c48b..fe9480a22 100644
--- a/alphaplot/src/2Dplot/StatBox2D.h
+++ b/alphaplot/src/2Dplot/StatBox2D.h
@@ -1,7 +1,7 @@
 #ifndef STATBOX2D_H
 #define STATBOX2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 #include "Graph2DCommon.h"
 
 class Axis2D;
diff --git a/alphaplot/src/2Dplot/TextItem2D.cpp b/alphaplot/src/2Dplot/TextItem2D.cpp
index 3204b8520..4354fca6d 100644
--- a/alphaplot/src/2Dplot/TextItem2D.cpp
+++ b/alphaplot/src/2Dplot/TextItem2D.cpp
@@ -158,7 +158,7 @@ void TextItem2D::save(XmlStreamWriter *xmlwriter) {
 }
 
 bool TextItem2D::load(XmlStreamReader *xmlreader) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "textitem") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("textitem"))) {
     bool ok;
     QPointF itemposition;
     // item X position property
@@ -233,9 +233,9 @@ bool TextItem2D::load(XmlStreamReader *xmlreader) {
     // margin property
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "margin") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("margin"))) break;
       // brush
-      if (xmlreader->isStartElement() && xmlreader->name() == "margin") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("margin"))) {
         int left = xmlreader->readAttributeInt("left", &ok);
         if (ok) {
           int top = xmlreader->readAttributeInt("top", &ok);
@@ -263,8 +263,8 @@ bool TextItem2D::load(XmlStreamReader *xmlreader) {
     // font and color
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "font") break;
-      if (xmlreader->isStartElement() && xmlreader->name() == "font") {
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("font"))) break;
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("font"))) {
         QPair<QFont, QColor> fontpair = xmlreader->readFont(&ok);
         if (ok) {
           setFont(fontpair.first);
@@ -278,9 +278,9 @@ bool TextItem2D::load(XmlStreamReader *xmlreader) {
     // strokepen property
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
       // pen
-      if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
         QPen strokep = xmlreader->readPen(&ok);
         if (ok)
           setPen(strokep);
@@ -293,9 +293,9 @@ bool TextItem2D::load(XmlStreamReader *xmlreader) {
     // brush property
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "brush") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("brush"))) break;
       // brush
-      if (xmlreader->isStartElement() && xmlreader->name() == "brush") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("brush"))) {
         QBrush b = xmlreader->readBrush(&ok);
         (ok) ? setBrush(b)
              : xmlreader->raiseWarning(
@@ -305,7 +305,7 @@ bool TextItem2D::load(XmlStreamReader *xmlreader) {
 
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "textitem") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("textitem"))) break;
     }
   } else  // no element
     xmlreader->raiseError(tr("no text item element found"));
diff --git a/alphaplot/src/2Dplot/TextItem2D.h b/alphaplot/src/2Dplot/TextItem2D.h
index 1b12480f3..1106d35e7 100644
--- a/alphaplot/src/2Dplot/TextItem2D.h
+++ b/alphaplot/src/2Dplot/TextItem2D.h
@@ -1,7 +1,7 @@
 #ifndef TEXTITEM2D_H
 #define TEXTITEM2D_H
 
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 
 class AxisRect2D;
 class Plot2D;
diff --git a/alphaplot/src/2Dplot/Vector2D.cpp b/alphaplot/src/2Dplot/Vector2D.cpp
index 161070700..81f0cda2d 100644
--- a/alphaplot/src/2Dplot/Vector2D.cpp
+++ b/alphaplot/src/2Dplot/Vector2D.cpp
@@ -534,7 +534,7 @@ void Vector2D::save(XmlStreamWriter *xmlwriter, int xaxis, int yaxis) {
 }
 
 bool Vector2D::load(XmlStreamReader *xmlreader) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "vector") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("vector"))) {
     bool ok;
 
     // legend text
@@ -598,9 +598,9 @@ bool Vector2D::load(XmlStreamReader *xmlreader) {
     // strokepen property
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
-      if (xmlreader->isEndElement() && xmlreader->name() == "pen") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("pen"))) break;
       // pen
-      if (xmlreader->isStartElement() && xmlreader->name() == "pen") {
+      if (xmlreader->isStartElement() && xmlreader->name().compare(QString("pen"))) {
         QPen strokep = xmlreader->readPen(&ok);
         if (ok) {
           setlinestrokecolor_vecplot(strokep.color());
diff --git a/alphaplot/src/2Dplot/Vector2D.h b/alphaplot/src/2Dplot/Vector2D.h
index 0427d1c42..0030484dd 100644
--- a/alphaplot/src/2Dplot/Vector2D.h
+++ b/alphaplot/src/2Dplot/Vector2D.h
@@ -1,6 +1,6 @@
 #ifndef VECTOR2D_H
 #define VECTOR2D_H
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 
 class Axis2D;
 class Column;
diff --git a/alphaplot/src/2Dplot/widgets/Function2DDialog.cpp b/alphaplot/src/2Dplot/widgets/Function2DDialog.cpp
index 2af25bf29..9fe4acfcd 100644
--- a/alphaplot/src/2Dplot/widgets/Function2DDialog.cpp
+++ b/alphaplot/src/2Dplot/widgets/Function2DDialog.cpp
@@ -98,21 +98,21 @@ bool Function2DDialog::acceptFunction() {
   double start, end;
   try {
     MyParser parser;
-    parser.SetExpr(from.toUtf8().constData());
+    parser.SetExpr(from.toStdWString().data());
     start = parser.Eval();
   } catch (mu::ParserError &error) {
     QMessageBox::critical(nullptr, tr("Start limit error"),
-                          QString::fromStdString(error.GetMsg()));
+                          QString::fromStdWString(error.GetMsg()));
     ui_->normfromxLineEdit->setFocus();
     return false;
   }
   try {
     MyParser parser;
-    parser.SetExpr(to.toUtf8().constData());
+    parser.SetExpr(to.toStdWString().data());
     end = parser.Eval();
   } catch (mu::ParserError &error) {
     QMessageBox::critical(nullptr, tr("End limit error"),
-                          QString::fromStdString(error.GetMsg()));
+                          QString::fromStdWString(error.GetMsg()));
     ui_->normtoxLineEdit->setFocus();
     return false;
   }
@@ -170,22 +170,22 @@ bool Function2DDialog::acceptParametric() {
   double start, end;
   try {
     MyParser parser;
-    parser.SetExpr(from.toUtf8().constData());
+    parser.SetExpr(from.toStdWString().data());
     start = parser.Eval();
   } catch (mu::ParserError &error) {
     QMessageBox::critical(nullptr, tr("Start limit error"),
-                          QString::fromStdString(error.GetMsg()));
+                          QString::fromStdWString(error.GetMsg()));
     ui_->paramfromLineEdit->setFocus();
     return false;
   }
 
   try {
     MyParser parser;
-    parser.SetExpr(to.toUtf8().constData());
+    parser.SetExpr(to.toStdWString().data());
     end = parser.Eval();
   } catch (mu::ParserError &error) {
     QMessageBox::critical(nullptr, tr("End limit error"),
-                          QString::fromStdString(error.GetMsg()));
+                          QString::fromStdWString(error.GetMsg()));
     ui_->paramtoLineEdit->setFocus();
     return false;
   }
diff --git a/alphaplot/src/3Dplot/Bar3D.cpp b/alphaplot/src/3Dplot/Bar3D.cpp
index cb95ad20b..7d2e643ba 100644
--- a/alphaplot/src/3Dplot/Bar3D.cpp
+++ b/alphaplot/src/3Dplot/Bar3D.cpp
@@ -185,10 +185,10 @@ void Bar3D::save(XmlStreamWriter *xmlwriter, const bool saveastemplate) {
 void Bar3D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                  QList<Matrix *> mats) {
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "bar") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("bar"))) break;
     xmlreader->readNext();
-    if (xmlreader->isEndElement() && xmlreader->name() == "bar") break;
-    if (xmlreader->isStartElement() && xmlreader->name() == "bar") {
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("bar"))) break;
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("bar"))) {
       bool ok = false;
       bool xrstatus = false;
       bool yrstatus = false;
@@ -308,9 +308,9 @@ void Bar3D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
 void Bar3D::loadplot(XmlStreamReader *xmlreader, QList<Table *> tabs,
                      QList<Matrix *> mats) {
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "plot") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("plot"))) break;
     xmlreader->readNext();
-    if (xmlreader->isEndElement() && xmlreader->name() == "plot") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("plot"))) break;
     bool ok = false;
     // data
     QString data = xmlreader->readAttributeString("data", &ok);
@@ -448,7 +448,7 @@ void Bar3D::loadplot(XmlStreamReader *xmlreader, QList<Table *> tabs,
     }
   }
   xmlreader->readNext();
-  if (xmlreader->isStartElement() && xmlreader->name() == "plot") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("plot"))) {
     loadplot(xmlreader, tabs, mats);
     counter_++;
   }
diff --git a/alphaplot/src/3Dplot/Bar3D.h b/alphaplot/src/3Dplot/Bar3D.h
index 82f8cb602..72d7daf70 100644
--- a/alphaplot/src/3Dplot/Bar3D.h
+++ b/alphaplot/src/3Dplot/Bar3D.h
@@ -13,8 +13,6 @@ class DataBlockBar3D;
 class XmlStreamWriter;
 class XmlStreamReader;
 
-using namespace QtDataVisualization;
-
 class Bar3D : public QObject {
   Q_OBJECT
  public:
diff --git a/alphaplot/src/3Dplot/Custom3DInteractions.h b/alphaplot/src/3Dplot/Custom3DInteractions.h
index 7b6e67ec1..fb0c34335 100644
--- a/alphaplot/src/3Dplot/Custom3DInteractions.h
+++ b/alphaplot/src/3Dplot/Custom3DInteractions.h
@@ -3,8 +3,6 @@
 
 #include <QtDataVisualization/QAbstract3DInputHandler>
 
-using namespace QtDataVisualization;
-
 class Custom3DInteractions : public QAbstract3DInputHandler {
   Q_OBJECT
  public:
diff --git a/alphaplot/src/3Dplot/DataManager3D.cpp b/alphaplot/src/3Dplot/DataManager3D.cpp
index f5a506de8..eb85f41be 100644
--- a/alphaplot/src/3Dplot/DataManager3D.cpp
+++ b/alphaplot/src/3Dplot/DataManager3D.cpp
@@ -14,8 +14,6 @@
 #include "Table.h"
 #include "future/core/column/Column.h"
 
-using namespace QtDataVisualization;
-
 void DataBlockAbstract3D::setgradient(QAbstract3DSeries *series,
                                       const Graph3DCommon::Gradient &gradient) {
   gradient_ = gradient;
diff --git a/alphaplot/src/3Dplot/DataManager3D.h b/alphaplot/src/3Dplot/DataManager3D.h
index 8e8874968..bd89600f8 100644
--- a/alphaplot/src/3Dplot/DataManager3D.h
+++ b/alphaplot/src/3Dplot/DataManager3D.h
@@ -12,7 +12,6 @@ class Matrix;
 class Table;
 class Column;
 
-namespace QtDataVisualization {
 class QSurfaceDataProxy;
 class QSurface3DSeries;
 class QItemModelSurfaceDataProxy;
@@ -23,7 +22,6 @@ class QScatterDataProxy;
 class QScatter3DSeries;
 class QItemModelScatterDataProxy;
 class QAbstract3DSeries;
-}  // namespace QtDataVisualization
 
 class DataBlockAbstract3D {
  public:
@@ -41,7 +39,7 @@ class DataBlockAbstract3D {
   void setxcolumn(Column *column) { xcolumn_ = column; }
   void setycolumn(Column *column) { ycolumn_ = column; }
   void setzcolumns(Column *column) { zcolumn_ = column; }
-  void setgradient(QtDataVisualization::QAbstract3DSeries *series,
+  void setgradient(QAbstract3DSeries *series,
                    const Graph3DCommon::Gradient &gradient);
 
  protected:
@@ -74,14 +72,14 @@ class DataBlockSurface3D : public DataBlockAbstract3D {
       QList<QPair<QPair<double, double>, double>> *data);
 
   // getters
-  QtDataVisualization::QSurfaceDataArray *getvaluedataarray() {
+  QSurfaceDataArray *getvaluedataarray() {
     return valueDataArray_;
   }
-  QtDataVisualization::QSurfaceDataProxy *getvaluedataproxy() {
+  QSurfaceDataProxy *getvaluedataproxy() {
     return valueDataProxy_;
   }
-  QtDataVisualization::QSurface3DSeries *getdataseries() { return dataSeries_; }
-  QtDataVisualization::QItemModelSurfaceDataProxy *getmodeldataproxy() {
+  QSurface3DSeries *getdataseries() { return dataSeries_; }
+  QItemModelSurfaceDataProxy *getmodeldataproxy() {
     return modelDataProxy_;
   }
   bool ismatrix();
@@ -98,10 +96,10 @@ class DataBlockSurface3D : public DataBlockAbstract3D {
 
  private:
   Graph3DCommon::Function3DData funcData_;
-  QtDataVisualization::QSurfaceDataArray *valueDataArray_;
-  QtDataVisualization::QSurfaceDataProxy *valueDataProxy_;
-  QtDataVisualization::QSurface3DSeries *dataSeries_;
-  QtDataVisualization::QItemModelSurfaceDataProxy *modelDataProxy_;
+  QSurfaceDataArray *valueDataArray_;
+  QSurfaceDataProxy *valueDataProxy_;
+  QSurface3DSeries *dataSeries_;
+  QItemModelSurfaceDataProxy *modelDataProxy_;
 };
 
 class DataBlockBar3D : public DataBlockAbstract3D {
@@ -115,23 +113,23 @@ class DataBlockBar3D : public DataBlockAbstract3D {
   void regenerateDataBlockXYZValue();
 
   // getters
-  QtDataVisualization::QBarDataArray *getvaluedataarray() {
+  QBarDataArray *getvaluedataarray() {
     return valueDataArray_;
   }
-  QtDataVisualization::QBarDataProxy *getvaluedataproxy() {
+  QBarDataProxy *getvaluedataproxy() {
     return valueDataProxy_;
   }
-  QtDataVisualization::QBar3DSeries *getdataseries() { return dataSeries_; }
-  QtDataVisualization::QItemModelBarDataProxy *getmodeldataproxy() {
+  QBar3DSeries *getdataseries() { return dataSeries_; }
+  QItemModelBarDataProxy *getmodeldataproxy() {
     return modelDataProxy_;
   }
   bool ismatrix();
 
  private:
-  QtDataVisualization::QBarDataArray *valueDataArray_;
-  QtDataVisualization::QBarDataProxy *valueDataProxy_;
-  QtDataVisualization::QBar3DSeries *dataSeries_;
-  QtDataVisualization::QItemModelBarDataProxy *modelDataProxy_;
+  QBarDataArray *valueDataArray_;
+  QBarDataProxy *valueDataProxy_;
+  QBar3DSeries *dataSeries_;
+  QItemModelBarDataProxy *modelDataProxy_;
 };
 
 class DataBlockScatter3D : public DataBlockAbstract3D {
@@ -145,19 +143,19 @@ class DataBlockScatter3D : public DataBlockAbstract3D {
   void regenerateDataBlockXYZValue();
 
   // getters
-  QtDataVisualization::QScatterDataArray *getvaluedataarray() {
+  QScatterDataArray *getvaluedataarray() {
     return valueDataArray_;
   }
-  QtDataVisualization::QScatterDataProxy *getvaluedataproxy() {
+  QScatterDataProxy *getvaluedataproxy() {
     return valueDataProxy_;
   }
-  QtDataVisualization::QScatter3DSeries *getdataseries() { return dataSeries_; }
+  QScatter3DSeries *getdataseries() { return dataSeries_; }
   bool ismatrix();
 
  private:
-  QtDataVisualization::QScatterDataArray *valueDataArray_;
-  QtDataVisualization::QScatterDataProxy *valueDataProxy_;
-  QtDataVisualization::QScatter3DSeries *dataSeries_;
+  QScatterDataArray *valueDataArray_;
+  QScatterDataProxy *valueDataProxy_;
+  QScatter3DSeries *dataSeries_;
 };
 
 #endif  // DATAMANAGER3D_H
diff --git a/alphaplot/src/3Dplot/Layout3D.cpp b/alphaplot/src/3Dplot/Layout3D.cpp
index c5bf79f00..b54e8d1b0 100644
--- a/alphaplot/src/3Dplot/Layout3D.cpp
+++ b/alphaplot/src/3Dplot/Layout3D.cpp
@@ -75,7 +75,7 @@ Layout3D::Layout3D(const Graph3DCommon::Plot3DType &plottype,
   QWidget *widget = new QWidget(this);
   widget->setContentsMargins(0, 0, 0, 0);
   QHBoxLayout *hLayout = new QHBoxLayout(widget);
-  hLayout->setMargin(0);
+  hLayout->setContentsMargins(0,0,0,0);
   hLayout->addWidget(main_widget_, 1);
   hLayout->setAlignment(Qt::AlignTop);
   widget->setLayout(hLayout);
@@ -87,7 +87,7 @@ Layout3D::Layout3D(const Graph3DCommon::Plot3DType &plottype,
 
   if (name.isEmpty()) setObjectName("layout3d");
   QDateTime birthday = QDateTime::currentDateTime();
-  setBirthDate(birthday.toString(Qt::LocalDate));
+  setBirthDate(birthday.toString());
   setFocusPolicy(Qt::TabFocus);
 
   setGeometry(QRect(0, 0, defaultlayout2dwidth_, defaultlayout2dheight_));
@@ -315,7 +315,7 @@ Graph3DCommon::Plot3DType Layout3D::getPlotType() const { return plottype_; }
 void Layout3D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                     QList<Matrix *> mats, ApplicationWindow *app,
                     bool setname) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "plot3d") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("plot3d"))) {
     bool ok = false;
 
     // read caption spec
@@ -339,11 +339,11 @@ void Layout3D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
     QDateTime creation_time =
         QDateTime::fromString(time, "yyyy-dd-MM hh:mm:ss:zzz");
     if (!time.isEmpty() && creation_time.isValid() && ok) {
-      setBirthDate(creation_time.toString(Qt::LocalDate));
+      setBirthDate(creation_time.toString());
     } else {
       xmlreader->raiseWarning(
           tr("Invalid creation time. Using current time insted."));
-      setBirthDate(QDateTime::currentDateTime().toString(Qt::LocalDate));
+      setBirthDate(QDateTime::currentDateTime().toString());
     }
 
     // read caption spec
@@ -397,8 +397,8 @@ void Layout3D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
 void Layout3D::loadCanvas(XmlStreamReader *xmlreader) {
   while (!xmlreader->atEnd()) {
     xmlreader->readNext();
-    if (xmlreader->isEndElement() && xmlreader->name() == "canvas") break;
-    if (xmlreader->isStartElement() && xmlreader->name() == "canvas") {
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("canvas"))) break;
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("canvas"))) {
       bool ok = false;
       Q3DTheme::Theme theme = Q3DTheme::Theme::ThemeQt;
       QString themename = xmlreader->readAttributeString("themename", &ok);
@@ -433,8 +433,8 @@ void Layout3D::loadCanvas(XmlStreamReader *xmlreader) {
 void Layout3D::loadTheme(XmlStreamReader *xmlreader) {
   while (!xmlreader->atEnd()) {
     xmlreader->readNext();
-    if (xmlreader->isEndElement() && xmlreader->name() == "theme") break;
-    if (xmlreader->isStartElement() && xmlreader->name() == "theme") {
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("theme"))) break;
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("theme"))) {
       bool ok = false;
       Q3DTheme *theme = graph_->activeTheme();
 
@@ -448,9 +448,9 @@ void Layout3D::loadTheme(XmlStreamReader *xmlreader) {
       // background
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "background")
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("background")))
           break;
-        if (xmlreader->isStartElement() && xmlreader->name() == "background") {
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("background"))) {
           bool ok = false;
 
           // background visible
@@ -474,8 +474,8 @@ void Layout3D::loadTheme(XmlStreamReader *xmlreader) {
       // light
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "light") break;
-        if (xmlreader->isStartElement() && xmlreader->name() == "light") {
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("light"))) break;
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("light"))) {
           bool ok = false;
 
           // light color
@@ -507,8 +507,8 @@ void Layout3D::loadTheme(XmlStreamReader *xmlreader) {
       // grid
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "grid") break;
-        if (xmlreader->isStartElement() && xmlreader->name() == "grid") {
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("grid"))) break;
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("grid"))) {
           bool ok = false;
 
           // grid visible
@@ -532,8 +532,8 @@ void Layout3D::loadTheme(XmlStreamReader *xmlreader) {
       // label
       while (!xmlreader->atEnd()) {
         xmlreader->readNext();
-        if (xmlreader->isEndElement() && xmlreader->name() == "label") break;
-        if (xmlreader->isStartElement() && xmlreader->name() == "label") {
+        if (xmlreader->isEndElement() && xmlreader->name().compare(QString("label"))) break;
+        if (xmlreader->isStartElement() && xmlreader->name().compare(QString("label"))) {
           bool ok = false;
 
           // label background visible
@@ -564,8 +564,8 @@ void Layout3D::loadTheme(XmlStreamReader *xmlreader) {
           // label font
           while (!xmlreader->atEnd()) {
             xmlreader->readNext();
-            if (xmlreader->isEndElement() && xmlreader->name() == "font") break;
-            if (xmlreader->isStartElement() && xmlreader->name() == "font") {
+            if (xmlreader->isEndElement() && xmlreader->name().compare(QString("font"))) break;
+            if (xmlreader->isStartElement() && xmlreader->name().compare(QString("font"))) {
               QPair<QFont, QColor> fontpair = xmlreader->readFont(&ok);
               if (ok) {
                 theme->setFont(fontpair.first);
@@ -584,8 +584,8 @@ void Layout3D::loadTheme(XmlStreamReader *xmlreader) {
 void Layout3D::loadValueAxis(XmlStreamReader *xmlreader) {
   while (!xmlreader->atEnd()) {
     xmlreader->readNext();
-    if (xmlreader->isEndElement() && xmlreader->name() == "axis") break;
-    if (xmlreader->isStartElement() && xmlreader->name() == "axis") {
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("axis"))) break;
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("axis"))) {
       bool ok = false;
 
       // axis type
@@ -693,8 +693,8 @@ void Layout3D::loadValueAxis(XmlStreamReader *xmlreader) {
 void Layout3D::loadCategoryAxis(XmlStreamReader *xmlreader) {
   while (!xmlreader->atEnd()) {
     xmlreader->readNext();
-    if (xmlreader->isEndElement() && xmlreader->name() == "axis") break;
-    if (xmlreader->isStartElement() && xmlreader->name() == "axis") {
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("axis"))) break;
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("axis"))) {
       bool ok = false;
 
       // axis type
@@ -785,7 +785,7 @@ void Layout3D::save(XmlStreamWriter *xmlwriter, const bool saveastemplate) {
   xmlwriter->writeAttribute("y", QString::number(pos().y()));
   xmlwriter->writeAttribute("width", QString::number(width()));
   xmlwriter->writeAttribute("height", QString::number(height()));
-  QDateTime datetime = QDateTime::fromString(birthDate(), Qt::LocalDate);
+  QDateTime datetime = QDateTime::fromString(birthDate());
   xmlwriter->writeAttribute("creation_time",
                             datetime.toString("yyyy-dd-MM hh:mm:ss:zzz"));
   xmlwriter->writeAttribute("caption_spec", QString::number(captionPolicy()));
@@ -1013,7 +1013,7 @@ void Layout3D::copy(Layout3D *layout, QList<Table *> tables,
   }
   std::unique_ptr<XmlStreamWriter> xmlwriter =
       std::unique_ptr<XmlStreamWriter>(new XmlStreamWriter(file.get()));
-  xmlwriter->setCodec("UTF-8");
+  //xmlwriter->setCodec("UTF-8");
   xmlwriter->setAutoFormatting(false);
   layout->save(xmlwriter.get());
   file->close();
@@ -1028,7 +1028,7 @@ void Layout3D::copy(Layout3D *layout, QList<Table *> tables,
   while (!xmlreader->atEnd()) {
     token = xmlreader->readNext();
     if (token == QXmlStreamReader::StartElement &&
-        xmlreader->name() == "plot3d") {
+        xmlreader->name().compare(QString("plot3d"))) {
       load(xmlreader.get(), tables, matrixs, app, false);
     }
   }
diff --git a/alphaplot/src/3Dplot/Layout3D.h b/alphaplot/src/3Dplot/Layout3D.h
index 9fbf835e4..13bee4eb9 100644
--- a/alphaplot/src/3Dplot/Layout3D.h
+++ b/alphaplot/src/3Dplot/Layout3D.h
@@ -16,7 +16,7 @@ class XmlStreamReader;
 class XmlStreamWriter;
 class Custom3DInteractions;
 class ApplicationWindow;
-using namespace QtDataVisualization;
+
 
 class Layout3D : public MyWidget {
   Q_OBJECT
diff --git a/alphaplot/src/3Dplot/Scatter3D.cpp b/alphaplot/src/3Dplot/Scatter3D.cpp
index cd6894584..95b3ad3d7 100644
--- a/alphaplot/src/3Dplot/Scatter3D.cpp
+++ b/alphaplot/src/3Dplot/Scatter3D.cpp
@@ -176,10 +176,10 @@ void Scatter3D::save(XmlStreamWriter *xmlwriter, const bool saveastemplate) {
 void Scatter3D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                      QList<Matrix *> mats) {
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "scatter") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("scatter"))) break;
     xmlreader->readNext();
-    if (xmlreader->isEndElement() && xmlreader->name() == "scatter") break;
-    if (xmlreader->isStartElement() && xmlreader->name() == "scatter") {
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("scatter"))) break;
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("scatter"))) {
       bool ok = false;
       bool xrstatus = false;
       bool yrstatus = false;
@@ -274,9 +274,9 @@ void Scatter3D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
 void Scatter3D::loadplot(XmlStreamReader *xmlreader, QList<Table *> tabs,
                          QList<Matrix *> mats) {
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "plot") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("plot"))) break;
     xmlreader->readNext();
-    if (xmlreader->isEndElement() && xmlreader->name() == "plot") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("plot"))) break;
     bool ok = false;
     // data
     QString data = xmlreader->readAttributeString("data", &ok);
@@ -420,7 +420,7 @@ void Scatter3D::loadplot(XmlStreamReader *xmlreader, QList<Table *> tabs,
     }
   }
   xmlreader->readNext();
-  if (xmlreader->isStartElement() && xmlreader->name() == "plot") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("plot"))) {
     loadplot(xmlreader, tabs, mats);
     counter_++;
   }
diff --git a/alphaplot/src/3Dplot/Scatter3D.h b/alphaplot/src/3Dplot/Scatter3D.h
index b627158d1..ea49301dc 100644
--- a/alphaplot/src/3Dplot/Scatter3D.h
+++ b/alphaplot/src/3Dplot/Scatter3D.h
@@ -13,7 +13,6 @@ class Column;
 class DataBlockScatter3D;
 class XmlStreamWriter;
 class XmlStreamReader;
-using namespace QtDataVisualization;
 
 class Scatter3D : public QObject {
   Q_OBJECT
diff --git a/alphaplot/src/3Dplot/Surface3D.cpp b/alphaplot/src/3Dplot/Surface3D.cpp
index 928367008..a54a6ee64 100644
--- a/alphaplot/src/3Dplot/Surface3D.cpp
+++ b/alphaplot/src/3Dplot/Surface3D.cpp
@@ -12,8 +12,6 @@
 #include "scripting/Script.h"
 #include "scripting/ScriptingEnv.h"
 
-using namespace QtDataVisualization;
-
 Surface3D::Surface3D(Q3DSurface *surface)
     : graph_(surface),
       plotType_(QSurface3DSeries::DrawFlag::DrawSurfaceAndWireframe),
@@ -214,10 +212,10 @@ void Surface3D::save(XmlStreamWriter *xmlwriter, const bool saveastemplate) {
 void Surface3D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
                      QList<Matrix *> mats, ApplicationWindow *app) {
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "surface") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("surface"))) break;
     xmlreader->readNext();
-    if (xmlreader->isEndElement() && xmlreader->name() == "surface") break;
-    if (xmlreader->isStartElement() && xmlreader->name() == "surface") {
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("surface"))) break;
+    if (xmlreader->isStartElement() && xmlreader->name().compare(QString("surface"))) {
       bool ok = false;
       bool xrstatus = false;
       bool yrstatus = false;
@@ -320,9 +318,9 @@ void Surface3D::load(XmlStreamReader *xmlreader, QList<Table *> tabs,
 void Surface3D::loadplot(XmlStreamReader *xmlreader, QList<Table *> tabs,
                          QList<Matrix *> mats, ApplicationWindow *app) {
   while (!xmlreader->atEnd()) {
-    if (xmlreader->isEndElement() && xmlreader->name() == "plot") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("plot"))) break;
     xmlreader->readNext();
-    if (xmlreader->isEndElement() && xmlreader->name() == "plot") break;
+    if (xmlreader->isEndElement() && xmlreader->name().compare(QString("plot"))) break;
     bool ok = false;
     // data
     QString data = xmlreader->readAttributeString("data", &ok);
@@ -568,7 +566,7 @@ void Surface3D::loadplot(XmlStreamReader *xmlreader, QList<Table *> tabs,
     }
   }
   xmlreader->readNext();
-  if (xmlreader->isStartElement() && xmlreader->name() == "plot") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("plot"))) {
     loadplot(xmlreader, tabs, mats, app);
     counter_++;
   }
@@ -603,7 +601,7 @@ void Surface3D::setSurfaceMeshType(const QSurface3DSeries::DrawFlag &type,
   series->setDrawMode(type);
 }
 
-QtDataVisualization::QSurface3DSeries::DrawFlag Surface3D::getSurfaceMeshType(
+QSurface3DSeries::DrawFlag Surface3D::getSurfaceMeshType(
     QSurface3DSeries *series) const {
   if (series->drawMode().testFlag(QSurface3DSeries::DrawFlag::DrawSurface))
     return QSurface3DSeries::DrawFlag::DrawSurface;
diff --git a/alphaplot/src/3Dplot/Surface3D.h b/alphaplot/src/3Dplot/Surface3D.h
index f469bb840..ea8a803cd 100644
--- a/alphaplot/src/3Dplot/Surface3D.h
+++ b/alphaplot/src/3Dplot/Surface3D.h
@@ -14,7 +14,6 @@ class DataBlockSurface3D;
 class XmlStreamWriter;
 class XmlStreamReader;
 class ApplicationWindow;
-using namespace QtDataVisualization;
 
 class Surface3D : public QObject {
   Q_OBJECT
@@ -26,7 +25,7 @@ class Surface3D : public QObject {
   void setSurfaceMeshType(const QSurface3DSeries::DrawFlag &type,
                           QSurface3DSeries *series);
 
-  QtDataVisualization::QSurface3DSeries::DrawFlag getSurfaceMeshType(
+  QSurface3DSeries::DrawFlag getSurfaceMeshType(
       QSurface3DSeries *series) const;
 
   void setfunctiondata(QList<QPair<QPair<double, double>, double>> *data,
diff --git a/alphaplot/src/3Dplot/SurfaceDialog.cpp b/alphaplot/src/3Dplot/SurfaceDialog.cpp
index 6e4de2a96..d2f99d2d0 100644
--- a/alphaplot/src/3Dplot/SurfaceDialog.cpp
+++ b/alphaplot/src/3Dplot/SurfaceDialog.cpp
@@ -156,62 +156,62 @@ void SurfaceDialog::accept() {
   double fromX, toX, fromY, toY, fromZ, toZ;
   try {
     MyParser parser;
-    parser.SetExpr(Xfrom.toUtf8().constData());
+    parser.SetExpr(Xfrom.toStdWString().data());
     fromX = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(nullptr, tr("X Start limit error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxXFrom->setFocus();
     return;
   }
   try {
     MyParser parser;
-    parser.SetExpr(Xto.toUtf8().constData());
+    parser.SetExpr(Xto.toStdWString().data());
     toX = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(nullptr, tr("X End limit error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxXTo->setFocus();
     return;
   }
 
   try {
     MyParser parser;
-    parser.SetExpr(Yfrom.toUtf8().constData());
+    parser.SetExpr(Yfrom.toStdWString().data());
     fromY = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(nullptr, tr("Y Start limit error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxYFrom->setFocus();
     return;
   }
   try {
     MyParser parser;
-    parser.SetExpr(Yto.toUtf8().constData());
+    parser.SetExpr(Yto.toStdWString().data());
     toY = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(nullptr, tr("Y End limit error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxYTo->setFocus();
     return;
   }
   try {
     MyParser parser;
-    parser.SetExpr(Zfrom.toUtf8().constData());
+    parser.SetExpr(Zfrom.toStdWString().data());
     fromZ = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(nullptr, tr("Z Start limit error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxZFrom->setFocus();
     return;
   }
   try {
     MyParser parser;
-    parser.SetExpr(Zto.toUtf8().constData());
+    parser.SetExpr(Zto.toStdWString().data());
     toZ = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(nullptr, tr("Z End limit error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxZTo->setFocus();
     return;
   }
@@ -228,9 +228,9 @@ void SurfaceDialog::accept() {
   bool error = false;
   try {
     MyParser parser;
-    parser.DefineVar("x", &x);
-    parser.DefineVar("y", &y);
-    parser.SetExpr(formula.toUtf8().constData());
+    parser.DefineVar(L"x", &x);
+    parser.DefineVar(L"y", &y);
+    parser.SetExpr(formula.toStdWString().data());
 
     x = fromX;
     y = fromY;
@@ -240,7 +240,7 @@ void SurfaceDialog::accept() {
     parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(nullptr, tr("Input function error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxFunction->setFocus();
     error = true;
   }
diff --git a/alphaplot/src/ApplicationWindow.cpp b/alphaplot/src/ApplicationWindow.cpp
index 61ecc4851..fec1cfbb3 100644
--- a/alphaplot/src/ApplicationWindow.cpp
+++ b/alphaplot/src/ApplicationWindow.cpp
@@ -119,6 +119,7 @@
 #include <QUrl>
 #include <QVarLengthArray>
 #include <QtDebug>
+#include <QRegularExpression>
 #include <iostream>
 
 #include "2Dplot/Graph2DCommon.h"
@@ -514,7 +515,7 @@ ApplicationWindow::ApplicationWindow()
   connect(ui_->actionRestartScripting, SIGNAL(triggered()), this,
           SLOT(restartScriptingEnv()));
   // Plot menu
-  connect(d_plot_mapper, SIGNAL(mapped(int)), this, SLOT(selectPlotType(int)));
+  connect(d_plot_mapper, SIGNAL(mappedInt(int)), this, SLOT(selectPlotType(int)));
   connect(ui_->actionPlot2DLine, SIGNAL(triggered()), d_plot_mapper,
           SLOT(map()));
   d_plot_mapper->setMapping(ui_->actionPlot2DLine,
@@ -2300,7 +2301,7 @@ void ApplicationWindow::matrixDeterminant() {
   if (!matrix) return;
 
   QDateTime dt = QDateTime::currentDateTime();
-  QString info = dt.toString(Qt::LocalDate);
+  QString info = dt.toString();
   info += "\n" + tr("Determinant of ") + QString(matrix->name()) + ":\t";
   info += "det = " + QString::number(matrix->determinant()) + "\n";
   info += "-------------------------------------------------------------\n";
@@ -3344,10 +3345,10 @@ void ApplicationWindow::loadSettings() {
 // Follows an ugly hack to fix Qt4 porting issues (only needed on Windows)
 #ifdef Q_OS_WIN
   if (!recentProjects.isEmpty() && recentProjects[0].contains("^e"))
-    recentProjects = recentProjects[0].split("^e", QString::SkipEmptyParts);
+    recentProjects = recentProjects[0].split("^e", Qt::SkipEmptyParts);
   else if (recentProjects.count() == 1) {
     QString s = recentProjects[0];
-    if (s.remove(QRegExp("\\s")).isEmpty()) recentProjects = QStringList();
+    if (s.remove(QRegularExpression("\\s")).isEmpty()) recentProjects = QStringList();
   }
 #endif
 
@@ -3659,7 +3660,7 @@ void ApplicationWindow::loadSettings() {
   strip_spaces = settings.value("StripSpaces", false).toBool();
   simplify_spaces = settings.value("SimplifySpaces", false).toBool();
   d_ASCII_file_filter = settings.value("AsciiFileTypeFilter", "*").toString();
-  d_ASCII_import_locale = settings.value("AsciiImportLocale", "C").toString();
+  d_ASCII_import_locale = QLocale(QString(settings.value("AsciiImportLocale", "C").toString()));
   d_convert_to_numeric = settings.value("ConvertToNumeric", true).toBool();
   settings.endGroup();  // Import ASCII
 
@@ -3671,10 +3672,10 @@ void ApplicationWindow::loadSettings() {
   d_export_resolution = settings.value("Resolution", 72).toInt();
   d_export_color = settings.value("ExportColor", true).toBool();
   d_export_vector_size =
-      settings.value("ExportPageSize", QPrinter::Custom).toInt();
+      settings.value("ExportPageSize", QPageSize::Custom).toInt();
   d_keep_plot_aspect = settings.value("KeepAspect", true).toBool();
   d_export_orientation =
-      settings.value("Orientation", QPrinter::Landscape).toInt();
+      settings.value("Orientation", QPageLayout::Landscape).toInt();
   settings.endGroup();  // ExportImage
 }
 
@@ -4288,7 +4289,7 @@ bool ApplicationWindow::renameWindow(MyWidget *w, const QString &text) {
   if (newName.isEmpty()) {
     QMessageBox::critical(this, tr("Error"), tr("Please enter a valid name!"));
     return false;
-  } else if (!newName.contains(QRegExp("^[a-zA-Z0-9-]*$"))) {
+  } else if (!newName.contains(QRegularExpression("^[a-zA-Z0-9-]*$"))) {
     QMessageBox::critical(this, tr("Error"),
                           tr("The name you chose is not valid: only letters, "
                              "digits and hyphen are allowed!") +
@@ -5278,7 +5279,7 @@ void ApplicationWindow::addTimeStamp() {
     return;
   }
 
-  QString date = QDateTime::currentDateTime().toString(Qt::LocalDate);
+  QString date = QDateTime::currentDateTime().toString();
   axisrect->addTextItem2D(date);
 }
 
@@ -6888,7 +6889,7 @@ void ApplicationWindow::setAppColors() {
     QPalette palet = qApp->palette();
     palet.setColor(QPalette::Text, panelsTextColor);
     palet.setColor(QPalette::WindowText, panelsTextColor);
-    palet.setColor(QPalette::Foreground, panelsTextColor);
+    //palet.setColor(QPalette::Foreground, panelsTextColor);
     palet.setColor(QPalette::ToolTipText, panelsTextColor);
     palet.setColor(QPalette::PlaceholderText, panelsTextColor);
     palet.setColor(QPalette::ButtonText, panelsTextColor);
@@ -8123,8 +8124,8 @@ void ApplicationWindow::folderProperties() {
       (saved) ? properties.status = tr("Saved")
               : properties.status = tr("Not Saved");
       properties.size = QString::number(fileInfo.size());
-      properties.created = fileInfo.birthTime().toString(Qt::LocalDate);
-      properties.modified = fileInfo.lastModified().toString(Qt::LocalDate);
+      properties.created = fileInfo.birthTime().toString();
+      properties.modified = fileInfo.lastModified().toString();
       properties.label = "";
     } else {
       properties.path = projectname;
@@ -8634,7 +8635,7 @@ void ApplicationWindow::receivedVersionFile(QNetworkReply *reply) {
     while (!xmlreader->atEnd()) {
       token = xmlreader->readNext();
       if (token == QXmlStreamReader::StartElement &&
-          xmlreader->name() == "update") {
+          xmlreader->name().compare(QString("update"))) {
         QXmlStreamAttributes attributes = xmlreader->attributes();
         if (attributes.hasAttribute("application") &&
             attributes.hasAttribute("version") &&
@@ -8866,7 +8867,7 @@ void ApplicationWindow::showWindowMenu(MyWidget *widget) {
 #if QT_VERSION >= QT_VERSION_CHECK(5, 14, 0)
         QStringList tl = formula.split("_", Qt::SkipEmptyParts);
 #else
-        QStringList tl = formula.split("_", QString::SkipEmptyParts);
+        QStringList tl = formula.split("_", Qt::SkipEmptyParts);
 #endif
         depend_menu.addAction(tl.at(0), this,
                               SLOT(setActiveWindowFromAction()));
diff --git a/alphaplot/src/ApplicationWindow.h b/alphaplot/src/ApplicationWindow.h
index 3db46a3a9..de74bb1b0 100644
--- a/alphaplot/src/ApplicationWindow.h
+++ b/alphaplot/src/ApplicationWindow.h
@@ -33,7 +33,7 @@
 #include "Table.h"
 
 // Scripting
-#include "../3rdparty/qcustomplot/qcustomplot.h"
+#include <qcustomplot.h>
 #include "2Dplot/Graph2DCommon.h"
 #include "3Dplot/Graph3DCommon.h"
 #include "scripting/Script.h"
diff --git a/alphaplot/src/AssociationsDialog.cpp b/alphaplot/src/AssociationsDialog.cpp
index f3e395301..1a8de3dfd 100644
--- a/alphaplot/src/AssociationsDialog.cpp
+++ b/alphaplot/src/AssociationsDialog.cpp
@@ -116,7 +116,7 @@ void AssociationsDialog::changePlotAssociation(int curve, const QString &text) {
 
    if (c->plotAssociation() == text) return;
 
-   QStringList lst = text.split(",", QString::SkipEmptyParts);
+   QStringList lst = text.split(",", Qt::SkipEmptyParts);
    if (lst.count() == 2) {
      c->setXColumnName(lst[0].remove("(X)"));
      c->setTitle(lst[1].remove("(Y)"));
@@ -135,8 +135,8 @@ void AssociationsDialog::changePlotAssociation(int curve, const QString &text) {
 
 QString AssociationsDialog::plotAssociation(const QString &text) {
   QString s = text;
-  QStringList lst = s.split(": ", QString::SkipEmptyParts);
-  QStringList cols = lst[1].split(",", QString::SkipEmptyParts);
+  QStringList lst = s.split(": ", Qt::SkipEmptyParts);
+  QStringList cols = lst[1].split(",", Qt::SkipEmptyParts);
 
   QString tableName = lst[0];
   s = tableName + "_" + cols[0];
@@ -157,7 +157,7 @@ void AssociationsDialog::initTablesList(QList<QMdiSubWindow *> *lst,
 
 Table *AssociationsDialog::findTable(int index) {
   QString text = associations->item(index)->text();
-  QStringList lst = text.split(":", QString::SkipEmptyParts);
+  QStringList lst = text.split(":", Qt::SkipEmptyParts);
   for (int i = 0; i < (int)tables->count(); i++) {
     if (tables->at(i)->objectName() == lst[0]) return (Table *)tables->at(i);
   }
@@ -199,8 +199,8 @@ void AssociationsDialog::updateTable(int index) {
 
 void AssociationsDialog::updateColumnTypes() {
   QString text = associations->currentItem()->text();
-  QStringList lst = text.split(": ", QString::SkipEmptyParts);
-  QStringList cols = lst[1].split(",", QString::SkipEmptyParts);
+  QStringList lst = text.split(": ", Qt::SkipEmptyParts);
+  QStringList cols = lst[1].split(",", Qt::SkipEmptyParts);
 
   QString xColName = cols[0].remove("(X)");
   QString yColName = cols[1].remove("(Y)");
@@ -315,8 +315,8 @@ void AssociationsDialog::setAxisRect(AxisRect2D *axisrect) {
 void AssociationsDialog::updatePlotAssociation(int row, int col) {
   int index = associations->currentRow();
   QString text = associations->currentItem()->text();
-  QStringList lst = text.split(": ", QString::SkipEmptyParts);
-  QStringList cols = lst[1].split(",", QString::SkipEmptyParts);
+  QStringList lst = text.split(": ", Qt::SkipEmptyParts);
+  QStringList cols = lst[1].split(",", Qt::SkipEmptyParts);
 
   if (col == 1) {
     cols[0] = table->item(row, 0)->text() + "(X)";
@@ -356,7 +356,7 @@ void AssociationsDialog::updatePlotAssociation(int row, int col) {
     QString as = plotAssociationsList[i];
     if (as.contains(old_as) &&
         (as.contains("(xErr)") || as.contains("(yErr)"))) {
-      QStringList ls = as.split(",", QString::SkipEmptyParts);
+      QStringList ls = as.split(",", Qt::SkipEmptyParts);
       as = text + "," + ls[2];
       plotAssociationsList[i] = as;
     }
diff --git a/alphaplot/src/AssociationsDialog.h b/alphaplot/src/AssociationsDialog.h
index 712307f2c..bee337ffa 100644
--- a/alphaplot/src/AssociationsDialog.h
+++ b/alphaplot/src/AssociationsDialog.h
@@ -30,12 +30,12 @@
 #define ASSOCIATIONSDIALOG_H
 
 #include <QDialog>
+#include <QStringList>
 
 class QLabel;
 class QListWidget;
 class QPushButton;
 class QTableWidget;
-class QStringList;
 class Table;
 class QMdiSubWindow;
 class AxisRect2D;
diff --git a/alphaplot/src/ColorButton.cpp b/alphaplot/src/ColorButton.cpp
index d01f47333..49d2eb8c6 100644
--- a/alphaplot/src/ColorButton.cpp
+++ b/alphaplot/src/ColorButton.cpp
@@ -50,7 +50,7 @@ void ColorButton::init() {
   setColor(QColor(Qt::white));
 
   QHBoxLayout *l = new QHBoxLayout(this);
-  l->setMargin(0);
+  l->setContentsMargins(0,0,0,0);
   l->addWidget(display);
   l->addWidget(selectButton);
 
diff --git a/alphaplot/src/ConfigDialog.cpp b/alphaplot/src/ConfigDialog.cpp
index 970479e61..690d1b3b1 100644
--- a/alphaplot/src/ConfigDialog.cpp
+++ b/alphaplot/src/ConfigDialog.cpp
@@ -50,7 +50,7 @@
 #include <QPixmap>
 #include <QPushButton>
 #include <QRadioButton>
-#include <QRegExp>
+#include <QRegularExpression>
 #include <QSpinBox>
 #include <QStackedWidget>
 #include <QStyleFactory>
@@ -106,7 +106,7 @@ ConfigDialog::ConfigDialog(QWidget *parent, Qt::WindowFlags fl)
 
   QHBoxLayout *topLayout = new QHBoxLayout();
   topLayout->setSpacing(5);
-  topLayout->setMargin(5);
+  topLayout->setContentsMargins(5,5,5,5);
   topLayout->addWidget(itemsList);
   topLayout->addLayout(rightLayout);
 
@@ -804,8 +804,8 @@ void ConfigDialog::languageChange() {
   QFontMetrics fm(itemsList->font());
   int width = 32, i;
   for (i = 0; i < itemsList->count(); i++)
-    if (fm.width(itemsList->item(i)->text()) > width)
-      width = fm.width(itemsList->item(i)->text());
+    if (fm.horizontalAdvance(itemsList->item(i)->text()) > width)
+      width = fm.horizontalAdvance(itemsList->item(i)->text());
   itemsList->setMaximumWidth(itemsList->iconSize().width() + width + 50);
   // resize the list to the maximum width
   itemsList->resize(itemsList->maximumWidth(), itemsList->height());
@@ -1039,7 +1039,7 @@ void ConfigDialog::apply() {
   sep.replace(tr("SPACE"), " ");
   sep.replace("\\s", " ");
 
-  if (sep.contains(QRegExp("[0-9.eE+-]")) != 0) {
+  if (sep.contains(QRegularExpression("[0-9.eE+-]")) != 0) {
     QMessageBox::warning(app_, tr("Import options error"),
                          tr("The separator must not contain the following "
                             "characters: 0-9eE.+-"));
@@ -1163,8 +1163,8 @@ void ConfigDialog::apply() {
   QFontMetrics fm(itemsList->font());
   int width = 32, i;
   for (i = 0; i < itemsList->count(); i++)
-    if (fm.width(itemsList->item(i)->text()) > width)
-      width = fm.width(itemsList->item(i)->text());
+    if (fm.horizontalAdvance(itemsList->item(i)->text()) > width)
+      width = fm.horizontalAdvance(itemsList->item(i)->text());
   itemsList->setMaximumWidth(itemsList->iconSize().width() + width + 50);
   // resize the list to the maximum width
   itemsList->resize(itemsList->maximumWidth(), itemsList->height());
diff --git a/alphaplot/src/FindDialog.cpp b/alphaplot/src/FindDialog.cpp
index f951e527b..a6025c38c 100644
--- a/alphaplot/src/FindDialog.cpp
+++ b/alphaplot/src/FindDialog.cpp
@@ -37,7 +37,7 @@
 #include <QGroupBox>
 #include <QLabel>
 #include <QPushButton>
-#include <QRegExp>
+#include <QRegularExpression>
 #include <QVBoxLayout>
 
 FindDialog::FindDialog(QWidget *parent, Qt::WindowFlags fl)
diff --git a/alphaplot/src/Folder.cpp b/alphaplot/src/Folder.cpp
index e3639375b..55ba73808 100644
--- a/alphaplot/src/Folder.cpp
+++ b/alphaplot/src/Folder.cpp
@@ -39,7 +39,7 @@ QStringList Folder::currentFolderNames = {};
 Folder::Folder(Folder *parent, const QString &name)
     : QObject(parent), d_active_window(nullptr) {
   QObject::setObjectName(name);
-  birthdate = QDateTime::currentDateTime().toString(Qt::LocalDate);
+  birthdate = QDateTime::currentDateTime().toString();
 }
 
 QList<Folder *> Folder::folders() const {
diff --git a/alphaplot/src/ImageExportDlg.cpp b/alphaplot/src/ImageExportDlg.cpp
index 5f8dcb63c..3d7eb62de 100644
--- a/alphaplot/src/ImageExportDlg.cpp
+++ b/alphaplot/src/ImageExportDlg.cpp
@@ -93,57 +93,57 @@ void ImageExportDlg::initAdvancedOptions() {
   vector_layout->addWidget(d_standard_page, 3, 0, 1, 2);
 
   d_box_page_size = new QComboBox();
-  d_box_page_size->addItem(tr("A0 - 841 x 1189 mm"), QVariant(QPrinter::A0));
-  d_box_page_size->addItem(tr("A1 - 594 x 841 mm"), QVariant(QPrinter::A1));
-  d_box_page_size->addItem(tr("A2 - 420 x 594 mm"), QVariant(QPrinter::A2));
-  d_box_page_size->addItem(tr("A3 - 297 x 420 mm"), QVariant(QPrinter::A3));
-  d_box_page_size->addItem(tr("A4 - 210 x 297 mm"), QVariant(QPrinter::A4));
-  d_box_page_size->addItem(tr("A5 - 148 x 210 mm"), QVariant(QPrinter::A5));
-  d_box_page_size->addItem(tr("A6 - 105 x 148 mm"), QVariant(QPrinter::A6));
-  d_box_page_size->addItem(tr("A7 - 74 x 105 mm"), QVariant(QPrinter::A7));
-  d_box_page_size->addItem(tr("A8 - 52 x 74 mm"), QVariant(QPrinter::A8));
-  d_box_page_size->addItem(tr("A9 - 37 x 52 mm"), QVariant(QPrinter::A9));
-  d_box_page_size->addItem(tr("B0 - 1030 x 1456 mm"), QVariant(QPrinter::B0));
-  d_box_page_size->addItem(tr("B1 - 728 x 1030 mm"), QVariant(QPrinter::B1));
-  d_box_page_size->addItem(tr("B2 - 515 x 728 mm"), QVariant(QPrinter::B2));
-  d_box_page_size->addItem(tr("B3 - 364 x 515 mm"), QVariant(QPrinter::B3));
-  d_box_page_size->addItem(tr("B4 - 257 x 364 mm"), QVariant(QPrinter::B4));
-  d_box_page_size->addItem(tr("B5 - 182 x 257 mm"), QVariant(QPrinter::B5));
-  d_box_page_size->addItem(tr("B6 - 128 x 182 mm"), QVariant(QPrinter::B6));
-  d_box_page_size->addItem(tr("B7 - 91 x 128 mm"), QVariant(QPrinter::B7));
-  d_box_page_size->addItem(tr("B8 - 64 x 91 mm"), QVariant(QPrinter::B8));
-  d_box_page_size->addItem(tr("B9 - 45 x 64 mm"), QVariant(QPrinter::B9));
-  d_box_page_size->addItem(tr("B10 - 32 x 45 mm"), QVariant(QPrinter::B10));
-  d_box_page_size->addItem(tr("C5E - 163 x 226 mm"), QVariant(QPrinter::C5E));
+  d_box_page_size->addItem(tr("A0 - 841 x 1189 mm"), QVariant(QPageSize::A0));
+  d_box_page_size->addItem(tr("A1 - 594 x 841 mm"), QVariant(QPageSize::A1));
+  d_box_page_size->addItem(tr("A2 - 420 x 594 mm"), QVariant(QPageSize::A2));
+  d_box_page_size->addItem(tr("A3 - 297 x 420 mm"), QVariant(QPageSize::A3));
+  d_box_page_size->addItem(tr("A4 - 210 x 297 mm"), QVariant(QPageSize::A4));
+  d_box_page_size->addItem(tr("A5 - 148 x 210 mm"), QVariant(QPageSize::A5));
+  d_box_page_size->addItem(tr("A6 - 105 x 148 mm"), QVariant(QPageSize::A6));
+  d_box_page_size->addItem(tr("A7 - 74 x 105 mm"), QVariant(QPageSize::A7));
+  d_box_page_size->addItem(tr("A8 - 52 x 74 mm"), QVariant(QPageSize::A8));
+  d_box_page_size->addItem(tr("A9 - 37 x 52 mm"), QVariant(QPageSize::A9));
+  d_box_page_size->addItem(tr("B0 - 1030 x 1456 mm"), QVariant(QPageSize::B0));
+  d_box_page_size->addItem(tr("B1 - 728 x 1030 mm"), QVariant(QPageSize::B1));
+  d_box_page_size->addItem(tr("B2 - 515 x 728 mm"), QVariant(QPageSize::B2));
+  d_box_page_size->addItem(tr("B3 - 364 x 515 mm"), QVariant(QPageSize::B3));
+  d_box_page_size->addItem(tr("B4 - 257 x 364 mm"), QVariant(QPageSize::B4));
+  d_box_page_size->addItem(tr("B5 - 182 x 257 mm"), QVariant(QPageSize::B5));
+  d_box_page_size->addItem(tr("B6 - 128 x 182 mm"), QVariant(QPageSize::B6));
+  d_box_page_size->addItem(tr("B7 - 91 x 128 mm"), QVariant(QPageSize::B7));
+  d_box_page_size->addItem(tr("B8 - 64 x 91 mm"), QVariant(QPageSize::B8));
+  d_box_page_size->addItem(tr("B9 - 45 x 64 mm"), QVariant(QPageSize::B9));
+  d_box_page_size->addItem(tr("B10 - 32 x 45 mm"), QVariant(QPageSize::B10));
+  d_box_page_size->addItem(tr("C5E - 163 x 226 mm"), QVariant(QPageSize::C5E));
   d_box_page_size->addItem(tr("Comm10E - 105 x 241 mm"),
-                           QVariant(QPrinter::Comm10E));
-  d_box_page_size->addItem(tr("DLE - 110 x 220 mm"), QVariant(QPrinter::DLE));
+                           QVariant(QPageSize::Comm10E));
+  d_box_page_size->addItem(tr("DLE - 110 x 220 mm"), QVariant(QPageSize::DLE));
   d_box_page_size->addItem(tr("Executive - 191 x 254 mm"),
-                           QVariant(QPrinter::Executive));
-  d_box_page_size->addItem(tr("Folio 210 x 330 mm"), QVariant(QPrinter::Folio));
+                           QVariant(QPageSize::Executive));
+  d_box_page_size->addItem(tr("Folio 210 x 330 mm"), QVariant(QPageSize::Folio));
   d_box_page_size->addItem(tr("Ledger 432 x 279 mm"),
-                           QVariant(QPrinter::Ledger));
-  d_box_page_size->addItem(tr("Legal 216 x 356 mm"), QVariant(QPrinter::Legal));
+                           QVariant(QPageSize::Ledger));
+  d_box_page_size->addItem(tr("Legal 216 x 356 mm"), QVariant(QPageSize::Legal));
   d_box_page_size->addItem(tr("Letter 216 x 279 mm"),
-                           QVariant(QPrinter::Letter));
+                           QVariant(QPageSize::Letter));
   d_box_page_size->addItem(tr("Tabloid 279 x 432 mm"),
-                           QVariant(QPrinter::Tabloid));
+                           QVariant(QPageSize::Tabloid));
 
   vector_layout->addWidget(new QLabel(tr("Page size")), 4, 0);
-  setPageSize((QPrinter::PageSize)app->d_export_vector_size);
-  d_standard_page->setChecked(app->d_export_vector_size != QPrinter::Custom);
-  d_box_page_size->setEnabled(app->d_export_vector_size != QPrinter::Custom);
+  setPageSize((QPageSize::PageSizeId)app->d_export_vector_size);
+  d_standard_page->setChecked(app->d_export_vector_size != QPageSize::Custom);
+  d_box_page_size->setEnabled(app->d_export_vector_size != QPageSize::Custom);
   vector_layout->addWidget(d_box_page_size, 4, 1, 1, 2);
 
   vector_layout->addWidget(new QLabel(tr("Orientation")), 5, 0);
   d_box_page_orientation = new QComboBox();
   d_box_page_orientation->addItem(tr("Portrait", "page orientation"),
-                                  QVariant(QPrinter::Portrait));
+                                  QVariant(QPageLayout::Portrait));
   d_box_page_orientation->addItem(tr("Landscape", "page orientation"),
-                                  QVariant(QPrinter::Landscape));
+                                  QVariant(QPageLayout::Landscape));
   d_box_page_orientation->setCurrentIndex(app->d_export_orientation);
   d_box_page_orientation->setEnabled(app->d_export_vector_size !=
-                                     QPrinter::Custom);
+                                     QPageSize::Custom);
   vector_layout->addWidget(d_box_page_orientation, 5, 1, 1, 2);
 
   connect(d_standard_page, SIGNAL(toggled(bool)), d_box_page_size,
@@ -199,16 +199,16 @@ void ImageExportDlg::closeEvent(QCloseEvent *e) {
   e->accept();
 }
 
-QPrinter::PageSize ImageExportDlg::pageSize() const {
-  if (!d_standard_page->isChecked()) return QPrinter::Custom;
+QPageSize::PageSizeId ImageExportDlg::pageSize() const {
+  if (!d_standard_page->isChecked()) return QPageSize::Custom;
 
-  QPrinter::PageSize size;
+  QPageSize::PageSizeId size;
   switch (d_box_page_size->currentIndex()) {
     case -1:
-      size = QPrinter::A4;
+      size = QPageSize::A4;
       break;
     default:
-      size = (QPrinter::PageSize)
+      size = (QPageSize::PageSizeId)
                  d_box_page_size->itemData(d_box_page_size->currentIndex())
                      .toInt();
       break;
@@ -216,14 +216,14 @@ QPrinter::PageSize ImageExportDlg::pageSize() const {
   return size;
 }
 
-QPrinter::Orientation ImageExportDlg::pageOrientation() const {
-  QPrinter::Orientation orientation;
+QPageLayout::Orientation ImageExportDlg::pageOrientation() const {
+  QPageLayout::Orientation orientation;
   switch (d_box_page_orientation->currentIndex()) {
     case -1:
-      orientation = QPrinter::Portrait;
+      orientation = QPageLayout::Portrait;
       break;
     default:
-      orientation = (QPrinter::Orientation)d_box_page_orientation
+      orientation = (QPageLayout::Orientation)d_box_page_orientation
                         ->itemData(d_box_page_orientation->currentIndex())
                         .toInt();
       break;
@@ -231,20 +231,20 @@ QPrinter::Orientation ImageExportDlg::pageOrientation() const {
   return orientation;
 }
 
-void ImageExportDlg::setPageSize(QPrinter::PageSize size) {
-  if (size == QPrinter::Custom) return;
+void ImageExportDlg::setPageSize(QPageSize::PageSizeId size) {
+  if (size == QPageSize::Custom) return;
 
   int index = d_box_page_size->findData(QVariant(size));
   if (index != -1)
     d_box_page_size->setCurrentIndex(index);
   else {
-    index = d_box_page_size->findData(QVariant(QPrinter::A4));
+    index = d_box_page_size->findData(QVariant(QPageSize::A4));
     Q_ASSERT(index != -1);
     d_box_page_size->setCurrentIndex(index);
   }
 }
 
-void ImageExportDlg::setOrientation(QPrinter::Orientation orientation) {
+void ImageExportDlg::setOrientation(QPageLayout::Orientation orientation) {
   int index = d_box_page_orientation->findData(QVariant(orientation));
   if (index != -1)
     d_box_page_orientation->setCurrentIndex(index);
diff --git a/alphaplot/src/ImageExportDlg.h b/alphaplot/src/ImageExportDlg.h
index 972fef9b9..9e051ff3e 100644
--- a/alphaplot/src/ImageExportDlg.h
+++ b/alphaplot/src/ImageExportDlg.h
@@ -87,10 +87,10 @@ class ImageExportDlg : public ExtensibleFileDialog {
   bool keepAspect() const { return d_keep_aspect->isChecked(); }
   //! For vector formats: returns a standard output page size (default:
   //! QPrinter::Custom).
-  QPrinter::PageSize pageSize() const;
-  void setPageSize(QPrinter::PageSize size);
-  QPrinter::Orientation pageOrientation() const;
-  void setOrientation(QPrinter::Orientation orientation);
+  QPageSize::PageSizeId pageSize() const;
+  void setPageSize(QPageSize::PageSizeId size);
+  QPageLayout::Orientation pageOrientation() const;
+  void setOrientation(QPageLayout::Orientation orientation);
   //! Return the quality (in percent) the user selected for export to raster
   //! formats.
   int quality() const { return d_quality->value(); }
diff --git a/alphaplot/src/ImportASCIIDialog.cpp b/alphaplot/src/ImportASCIIDialog.cpp
index 2af4704ce..836442364 100644
--- a/alphaplot/src/ImportASCIIDialog.cpp
+++ b/alphaplot/src/ImportASCIIDialog.cpp
@@ -37,7 +37,7 @@
 #include <QHBoxLayout>
 #include <QGroupBox>
 #include <QPushButton>
-#include <QRegExp>
+#include <QRegularExpression>
 #include <QMessageBox>
 
 ImportASCIIDialog::ImportASCIIDialog(bool import_mode_enabled, QWidget *parent,
@@ -239,7 +239,7 @@ const QString ImportASCIIDialog::columnSeparator() const {
   sep.replace("\\t", "\t");
 
   /* TODO
-  if (sep.contains(QRegExp("[0-9.eE+-]")))
+  if (sep.contains(QRegularExpression("[0-9.eE+-]")))
           QMessageBox::warning(this, tr("Import options error"),
                           tr("The separator must not contain the following
   characters: 0-9eE.+-"));
diff --git a/alphaplot/src/Matrix.cpp b/alphaplot/src/Matrix.cpp
index 90c07a451..3317646ae 100644
--- a/alphaplot/src/Matrix.cpp
+++ b/alphaplot/src/Matrix.cpp
@@ -86,7 +86,7 @@ void Matrix::init(int rows, int cols) {
   d_future_matrix->setCoordinates(1.0, 10.0, 1.0, 10.0);
   dMatrix = nullptr;
 
-  birthdate = d_future_matrix->creationTime().toString(Qt::LocalDate);
+  birthdate = d_future_matrix->creationTime().toString();
 
   // this is not very nice but works for the moment
   ui._2->removeWidget(ui.formula_box);
diff --git a/alphaplot/src/Matrix.h b/alphaplot/src/Matrix.h
index 9e4ff60b6..682a7b566 100644
--- a/alphaplot/src/Matrix.h
+++ b/alphaplot/src/Matrix.h
@@ -282,7 +282,7 @@ class Matrix : public MatrixView, public scripted {
 
   //! Return the creation date
   virtual QString birthDate() {
-    return d_future_matrix->creationTime().toString(Qt::LocalDate);
+    return d_future_matrix->creationTime().toString();
   }
 
  signals:
diff --git a/alphaplot/src/Note.cpp b/alphaplot/src/Note.cpp
index 3d843b98f..6a04eecd5 100644
--- a/alphaplot/src/Note.cpp
+++ b/alphaplot/src/Note.cpp
@@ -55,7 +55,7 @@ Note::~Note() {}
 void Note::init(ScriptingEnv* env) {
   autoExec = false;
   QDateTime dt = QDateTime::currentDateTime();
-  setBirthDate(dt.toString(Qt::LocalDate));
+  setBirthDate(dt.toString());
 
   textedit_ = new ScriptEdit(env, this, name());
   textedit_->setContext(this);
@@ -71,7 +71,7 @@ void Note::modifiedNote() { emit modifiedWindow(this); }
 
 void Note::save(QXmlStreamWriter* xmlwriter) {
   xmlwriter->writeStartElement("note");
-  QDateTime datetime = QDateTime::fromString(birthDate(), Qt::LocalDate);
+  QDateTime datetime = QDateTime::fromString(birthDate());
   xmlwriter->writeAttribute("creation_time",
                             datetime.toString("yyyy-dd-MM hh:mm:ss:zzz"));
   xmlwriter->writeAttribute("caption_spec", QString::number(captionPolicy()));
@@ -91,7 +91,7 @@ void Note::save(QXmlStreamWriter* xmlwriter) {
 }
 
 bool Note::load(XmlStreamReader* xmlreader) {
-  if (xmlreader->isStartElement() && xmlreader->name() == "note") {
+  if (xmlreader->isStartElement() && xmlreader->name().compare(QString("note"))) {
     QString prefix(tr("XML read error: ", "prefix for XML error messages"));
     QString postfix(tr(" (non-critical)", "postfix for XML error messages"));
 
@@ -116,9 +116,9 @@ bool Note::load(XmlStreamReader* xmlreader) {
       xmlreader->raiseWarning(
           tr("Invalid creation time for '%1'. Using current time.")
               .arg(name()));
-      setBirthDate(QDateTime::currentDateTime().toString(Qt::LocalDate));
+      setBirthDate(QDateTime::currentDateTime().toString());
     } else
-      setBirthDate(creation_time.toString(Qt::LocalDate));
+      setBirthDate(creation_time.toString());
     // read caption spec
     basicattr =
         attribs.value(xmlreader->namespaceUri().toString(), "caption_spec")
@@ -132,10 +132,10 @@ bool Note::load(XmlStreamReader* xmlreader) {
     while (!xmlreader->atEnd()) {
       xmlreader->readNext();
 
-      if (xmlreader->isEndElement() && xmlreader->name() == "note") break;
+      if (xmlreader->isEndElement() && xmlreader->name().compare(QString("note"))) break;
 
       if (xmlreader->isStartElement()) {
-        if (xmlreader->name() == "content") {
+        if (xmlreader->name().compare(QString("content"))) {
           QXmlStreamAttributes attribs = xmlreader->attributes();
           QString value =
               attribs.value(xmlreader->namespaceUri().toString(), "value")
@@ -148,7 +148,7 @@ bool Note::load(XmlStreamReader* xmlreader) {
           if (!xmlreader->skipToEndElement()) return false;
         }
       } else if (xmlreader->isStartElement()) {
-        if (xmlreader->name() == "geometry") {
+        if (xmlreader->name().compare(QString("geometry"))) {
           QXmlStreamAttributes attribs = xmlreader->attributes();
           QString valuex1 =
               attribs.value(xmlreader->namespaceUri().toString(), "x1")
diff --git a/alphaplot/src/PlotWizard.cpp b/alphaplot/src/PlotWizard.cpp
index 2544e9a80..f9779e845 100644
--- a/alphaplot/src/PlotWizard.cpp
+++ b/alphaplot/src/PlotWizard.cpp
@@ -151,7 +151,7 @@ void PlotWizard::accept() {
       else if (!text.contains("(Y)") && !ribbons.contains(text))
         ribbons << text;
     } else if (text.contains("(xErr)") || text.contains("(yErr)")) {
-      QStringList lst = text.split(",", QString::SkipEmptyParts);
+      QStringList lst = text.split(",", Qt::SkipEmptyParts);
       lst.pop_back();
       QString master_curve = lst.join(",");
 
diff --git a/alphaplot/src/Table.cpp b/alphaplot/src/Table.cpp
index ccaada8a8..6c55c3676 100644
--- a/alphaplot/src/Table.cpp
+++ b/alphaplot/src/Table.cpp
@@ -95,7 +95,7 @@ void Table::init() {
   TableView::setTable(d_future_table);
   setMinimumSize(QSize(400, 300));
 
-  birthdate = d_future_table->creationTime().toString(Qt::LocalDate);
+  birthdate = d_future_table->creationTime().toString();
   ui.formula_tab_layout->removeWidget(ui.formula_box);
   delete ui.formula_box;
   ui.formula_box = new ScriptEdit(scriptEnv, ui.formula_tab);
@@ -196,7 +196,7 @@ void Table::setTableBackgroundColor(const QColor &col) {
   QPalette palette = d_view_widget->palette();
   palette.setColor(QPalette::Base, col);
   palette.setColor(QPalette::Window, col);
-  palette.setColor(QPalette::Background, col);
+  //palette.setColor(QPalette::Background, col);
   d_view_widget->setPalette(palette);
 }
 
@@ -734,7 +734,7 @@ bool Table::exportASCII(const QString &fname, const QString &separator,
 
   if (withLabels) {
     QStringList header = colNames();
-    QStringList ls = header.filter(QRegExp("\\D"));
+    QStringList ls = header.filter(QRegularExpression("\\D"));
     if (exportSelection) {
       for (i = 1; i < selectedCols; i++) {
         if (ls.count() > 0)
diff --git a/alphaplot/src/TextFormatButtons.cpp b/alphaplot/src/TextFormatButtons.cpp
index cf157fd45..d598f1ba7 100644
--- a/alphaplot/src/TextFormatButtons.cpp
+++ b/alphaplot/src/TextFormatButtons.cpp
@@ -39,7 +39,7 @@ TextFormatButtons::TextFormatButtons(QTextEdit *textEdit, QWidget *parent)
   connectedTextEdit = textEdit;
 
   QHBoxLayout *layout = new QHBoxLayout(this);
-  layout->setMargin(0);
+  layout->setContentsMargins(0,0,0,0);
   layout->setSpacing(0);
   layout->addStretch();
 
diff --git a/alphaplot/src/analysis/FFTDialog.cpp b/alphaplot/src/analysis/FFTDialog.cpp
index 0afd87cbf..fda57fab2 100644
--- a/alphaplot/src/analysis/FFTDialog.cpp
+++ b/alphaplot/src/analysis/FFTDialog.cpp
@@ -128,11 +128,11 @@ void FFTDialog::accept() {
   double sampling;
   try {
     MyParser parser;
-    parser.SetExpr(boxSampling->text().toUtf8().constData());
+    parser.SetExpr(boxSampling->text().toStdWString().data());
     sampling = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(this, tr("Sampling value error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxSampling->setFocus();
     return;
   }
diff --git a/alphaplot/src/analysis/FilterDialog.cpp b/alphaplot/src/analysis/FilterDialog.cpp
index 9761b2bb5..9f05247b1 100644
--- a/alphaplot/src/analysis/FilterDialog.cpp
+++ b/alphaplot/src/analysis/FilterDialog.cpp
@@ -110,11 +110,11 @@ void FilterDialog::filter() {
   double from = 0.0, to = 0.0;
   try {
     MyParser parser;
-    parser.SetExpr(boxStart->text().replace(",", ".").toUtf8().constData());
+    parser.SetExpr(boxStart->text().replace(",", ".").toStdWString().data());
     from = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(this, tr("Frequency input error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxStart->setFocus();
     return;
   }
@@ -129,11 +129,11 @@ void FilterDialog::filter() {
   if (filter_type >= FFTFilter::BandPass) {
     try {
       MyParser parser;
-      parser.SetExpr(boxEnd->text().replace(",", ".").toStdString());
+      parser.SetExpr(boxEnd->text().replace(",", ".").toStdWString());
       to = parser.Eval();
     } catch (mu::ParserError &e) {
       QMessageBox::critical(this, tr("High Frequency input error"),
-                            QString::fromStdString(e.GetMsg()));
+                            QString::fromStdWString(e.GetMsg()));
       boxEnd->setFocus();
       return;
     }
diff --git a/alphaplot/src/analysis/Fit.cpp b/alphaplot/src/analysis/Fit.cpp
index adbf73f33..8f93880c7 100644
--- a/alphaplot/src/analysis/Fit.cpp
+++ b/alphaplot/src/analysis/Fit.cpp
@@ -204,7 +204,7 @@ void Fit::setDataCurve(PlotData::AssociatedData *associateddata, double start,
   Filter::setDataCurve(associateddata, start, end);
 
   d_y_errors.resize(d_n);
-  // if (!setYErrorSource(AssociatedErrors, QString::null, true))
+  // if (!setYErrorSource(AssociatedErrors, QString(), true))
   setYErrorSource(UnknownErrors);
 }
 
@@ -221,7 +221,7 @@ void Fit::generateFunction(bool yes, int points) {
 QString Fit::logFitInfo(const std::vector<double> &par, int iterations,
                         int status, const QString &plotName) {
   QDateTime dt = QDateTime::currentDateTime();
-  QString info = "[" + dt.toString(Qt::LocalDate) + "\t" + tr("Plot") + ": ''" +
+  QString info = "[" + dt.toString() + "\t" + tr("Plot") + ": ''" +
                  plotName + "'']\n";
   info += d_explanation + " " + tr("fit of dataset") + ": " +
           associateddata_->table->name() + "_" + associateddata_->xcol->name() +
diff --git a/alphaplot/src/analysis/FitDialog.cpp b/alphaplot/src/analysis/FitDialog.cpp
index 930d47e7e..5816946c0 100644
--- a/alphaplot/src/analysis/FitDialog.cpp
+++ b/alphaplot/src/analysis/FitDialog.cpp
@@ -28,7 +28,7 @@
  ***************************************************************************/
 #include "FitDialog.h"
 
-#include <../3rdparty/muparser/muParserError.h>
+#include <muParserError.h>
 #include <stdio.h>
 
 #include <QCheckBox>
@@ -50,6 +50,7 @@
 #include <QTableWidget>
 #include <QWidget>
 #include <QWidgetList>
+#include <QRegularExpression>
 
 #include "2Dplot/AxisRect2D.h"
 #include "2Dplot/Plotcolumns.h"
@@ -554,7 +555,7 @@ void FitDialog::saveUserFunction() {
                           tr("Please enter a function name!"));
     boxName->setFocus();
     return;
-  } else if (boxParam->text().remove(QRegExp("[,;\\s]")).isEmpty()) {
+  } else if (boxParam->text().remove(QRegularExpression("[,;\\s]")).isEmpty()) {
     QMessageBox::critical(this, tr("Input function error"),
                           tr("Please enter at least one parameter name!"));
     boxParam->setFocus();
@@ -638,7 +639,7 @@ void FitDialog::showFitPage() {
 
   QString par = boxParam->text().simplified();
   QStringList paramList =
-      par.split(QRegExp("[,;]+[\\s]*"), QString::SkipEmptyParts);
+      par.split(QRegularExpression("[,;]+[\\s]*"), Qt::SkipEmptyParts);
   int parameters = paramList.count();
   boxParams->setRowCount(parameters);
   boxParams->hideColumn(2);
@@ -1017,22 +1018,22 @@ void FitDialog::accept() {
   double start, end, eps;
   try {
     MyParser parser;
-    parser.SetExpr(CONFS(from).toUtf8().constData());
+    parser.SetExpr(CONFS(from).toStdWString().data());
     start = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(this, tr("Start limit error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxFrom->setFocus();
     return;
   }
 
   try {
     MyParser parser;
-    parser.SetExpr(CONFS(to).toUtf8().constData());
+    parser.SetExpr(CONFS(to).toStdWString().data());
     end = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(this, tr("End limit error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxTo->setFocus();
     return;
   }
@@ -1047,11 +1048,11 @@ void FitDialog::accept() {
 
   try {
     MyParser parser;
-    parser.SetExpr(CONFS(tolerance).toUtf8().constData());
+    parser.SetExpr(CONFS(tolerance).toStdWString().data());
     eps = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(0, tr("Tolerance input error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxTolerance->setFocus();
     return;
   }
@@ -1237,11 +1238,11 @@ bool FitDialog::validInitialValues() {
 
     try {
       MyParser parser;
-      parser.SetExpr(CONFS(boxParams->item(i, 1)->text()).toUtf8().constData());
+      parser.SetExpr(CONFS(boxParams->item(i, 1)->text()).toStdWString().data());
       parser.Eval();
     } catch (mu::ParserError &e) {
       QMessageBox::critical(app_, tr("Start limit error"),
-                            QString::fromStdString(e.GetMsg()));
+                            QString::fromStdWString(e.GetMsg()));
       boxParams->setCurrentCell(i, 1);
       return false;
     }
@@ -1269,7 +1270,7 @@ void FitDialog::setSrcTables(QList<QMdiSubWindow *> *tables) {
     tableNamesBox->addItem(i->objectName());
 
   tableNamesBox->setCurrentIndex(tableNamesBox->findText(
-      boxCurve->currentText().split("_", QString::SkipEmptyParts)[0]));
+      boxCurve->currentText().split("_", Qt::SkipEmptyParts)[0]));
   selectSrcTable(tableNamesBox->currentIndex());
 }
 
diff --git a/alphaplot/src/analysis/IntDialog.cpp b/alphaplot/src/analysis/IntDialog.cpp
index 4c563c9ce..fb31a4621 100644
--- a/alphaplot/src/analysis/IntDialog.cpp
+++ b/alphaplot/src/analysis/IntDialog.cpp
@@ -128,7 +128,7 @@ void IntDialog::accept() {
   } else {
     try {
       MyParser parser;
-      parser.SetExpr((boxStart->text()).toUtf8().constData());
+      parser.SetExpr((boxStart->text()).toStdWString().data());
       start = parser.Eval();
       start = boxStart->text().toDouble();
 
@@ -154,7 +154,7 @@ void IntDialog::accept() {
       }
     } catch (mu::ParserError &e) {
       QMessageBox::critical(app_, tr("Start limit error"),
-                            QString::fromStdString(e.GetMsg()));
+                            QString::fromStdWString(e.GetMsg()));
       boxStart->clear();
       boxStart->setFocus();
       return;
@@ -172,7 +172,7 @@ void IntDialog::accept() {
   } else {
     try {
       MyParser parser;
-      parser.SetExpr((boxEnd->text()).toUtf8().constData());
+      parser.SetExpr((boxEnd->text()).toStdWString().data());
       stop = parser.Eval();
       stop = boxEnd->text().toDouble();
       if (stop > maxx) {
@@ -200,7 +200,7 @@ void IntDialog::accept() {
       }
     } catch (mu::ParserError &e) {
       QMessageBox::critical(app_, tr("End limit error"),
-                            QString::fromStdString(e.GetMsg()));
+                            QString::fromStdWString(e.GetMsg()));
       boxEnd->clear();
       boxEnd->setFocus();
       return;
diff --git a/alphaplot/src/analysis/Integration.cpp b/alphaplot/src/analysis/Integration.cpp
index 012a57baa..61a501347 100644
--- a/alphaplot/src/analysis/Integration.cpp
+++ b/alphaplot/src/analysis/Integration.cpp
@@ -132,7 +132,7 @@ QString Integration::logInfo() {
   QString curvename = associateddata_->table->name() + "_" +
                       associateddata_->xcol->name() + "_" +
                       associateddata_->ycol->name();
-  QString logInfo = "[" + QDateTime::currentDateTime().toString(Qt::LocalDate) +
+  QString logInfo = "[" + QDateTime::currentDateTime().toString() +
                     "\t" + tr("Plot") + ": ''" + curvename + "'']\n";
   logInfo += "\n" + tr("Numerical integration of") + ": " + curvename +
              tr(" using ") + method_name + tr("Interpolation") + "\n";
diff --git a/alphaplot/src/analysis/InterpolationDialog.cpp b/alphaplot/src/analysis/InterpolationDialog.cpp
index 5ee907dbd..cba5fd3ed 100644
--- a/alphaplot/src/analysis/InterpolationDialog.cpp
+++ b/alphaplot/src/analysis/InterpolationDialog.cpp
@@ -132,22 +132,22 @@ void InterpolationDialog::interpolate() {
   double from, to;
   try {
     MyParser parser;
-    parser.SetExpr(boxStart->text().replace(",", ".").toUtf8().constData());
+    parser.SetExpr(boxStart->text().replace(",", ".").toStdWString().data());
     from = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(this, tr("Start limit error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxStart->setFocus();
     return;
   }
 
   try {
     MyParser parser;
-    parser.SetExpr(boxEnd->text().replace(",", ".").toUtf8().constData());
+    parser.SetExpr(boxEnd->text().replace(",", ".").toStdWString().data());
     to = parser.Eval();
   } catch (mu::ParserError &e) {
     QMessageBox::critical(this, tr("End limit error"),
-                          QString::fromStdString(e.GetMsg()));
+                          QString::fromStdWString(e.GetMsg()));
     boxEnd->setFocus();
     return;
   }
diff --git a/alphaplot/src/analysis/PluginFit.cpp b/alphaplot/src/analysis/PluginFit.cpp
index 9dbde6c66..e53232937 100644
--- a/alphaplot/src/analysis/PluginFit.cpp
+++ b/alphaplot/src/analysis/PluginFit.cpp
@@ -107,7 +107,7 @@ bool PluginFit::load(const QString &pluginName) {
   typedef char *(*fitFunc)();
   fitFunc fitFunction = (fitFunc)lib.resolve("parameters");
   if (fitFunction) {
-    d_param_names = QString(fitFunction()).split(",", QString::SkipEmptyParts);
+    d_param_names = QString(fitFunction()).split(",", Qt::SkipEmptyParts);
     d_p = d_param_names.count();
     d_min_points = d_p;
     d_param_init = gsl_vector_alloc(static_cast<size_t>(d_p));
@@ -119,7 +119,7 @@ bool PluginFit::load(const QString &pluginName) {
 
   fitFunc fitExplain = (fitFunc)lib.resolve("explanations");
   if (fitExplain)
-    d_param_explain = QString(fitExplain()).split(",", QString::SkipEmptyParts);
+    d_param_explain = QString(fitExplain()).split(",", Qt::SkipEmptyParts);
   else
     for (int i = 0; i < d_p; i++) d_param_explain << "";
 
diff --git a/alphaplot/src/analysis/PolynomialFit.cpp b/alphaplot/src/analysis/PolynomialFit.cpp
index dc863c29f..0052a31b3 100644
--- a/alphaplot/src/analysis/PolynomialFit.cpp
+++ b/alphaplot/src/analysis/PolynomialFit.cpp
@@ -173,7 +173,7 @@ QString PolynomialFit::legendInfo() {
     if (cj > 0 && !legend.isEmpty()) legend += "+";
 
     QString s;
-    s.sprintf("%.5f", cj);
+    s.asprintf("%.5f", cj);
     if (s != "1.00000") legend += QLocale().toString(cj, 'g', d_prec);
 
     legend += "X";
diff --git a/alphaplot/src/analysis/SmoothFilter.cpp b/alphaplot/src/analysis/SmoothFilter.cpp
index 005b0e531..5aa687cbd 100644
--- a/alphaplot/src/analysis/SmoothFilter.cpp
+++ b/alphaplot/src/analysis/SmoothFilter.cpp
@@ -30,6 +30,8 @@
  ***************************************************************************/
 #include "SmoothFilter.h"
 
+#include <algorithm>
+
 #include <QApplication>
 #include <QMessageBox>
 
@@ -345,7 +347,7 @@ void SmoothFilter::smoothSavGol(double *, double *y_inout) {
   gsl_matrix_free(h);
 
   // write result into *y_inout
-  qCopy(result.begin(), result.end(), y_inout);
+  std::copy(result.begin(), result.end(), y_inout);
 }
 
 /**
@@ -436,7 +438,7 @@ void SmoothFilter::smoothModifiedSavGol(double *x_in, double *y_inout) {
   gsl_matrix_free(vandermonde);
 
   // write result into *y_inout
-  qCopy(result.begin(), result.end(), y_inout);
+  std::copy(result.begin(), result.end(), y_inout);
 }
 
 void SmoothFilter::setSmoothPoints(int points, int left_points) {
diff --git a/alphaplot/src/core/AprojHandler.cpp b/alphaplot/src/core/AprojHandler.cpp
index ab2f526d6..9423f9651 100644
--- a/alphaplot/src/core/AprojHandler.cpp
+++ b/alphaplot/src/core/AprojHandler.cpp
@@ -206,23 +206,23 @@ QStringList AprojHandler::checkbeforeappendproject(const QString &filename) {
   while (!xmlreader->atEnd()) {
     token = xmlreader->readNext();
     if (token == QXmlStreamReader::StartElement &&
-        xmlreader->name() == "table") {
+        xmlreader->name().compare(QString("table"))) {
       QString name = xmlreader->readAttributeString("name", &ok);
       if (ok) windowlist << name;
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "matrix") {
+               xmlreader->name().compare(QString("matrix"))) {
       QString name = xmlreader->readAttributeString("name", &ok);
       if (ok) windowlist << name;
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "note") {
+               xmlreader->name().compare(QString("note"))) {
       QString name = xmlreader->readAttributeString("name", &ok);
       if (ok) windowlist << name;
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "plot2d") {
+               xmlreader->name().compare(QString("plot2d"))) {
       QString name = xmlreader->readAttributeString("name", &ok);
       if (ok) windowlist << name;
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "plot3d") {
+               xmlreader->name().compare(QString("plot3d"))) {
       QString name = xmlreader->readAttributeString("name", &ok);
       if (ok) windowlist << name;
     }
@@ -256,22 +256,22 @@ MyWidget *AprojHandler::opentemplate(const QString &filename) {
   while (!xmlreader->atEnd()) {
     token = xmlreader->readNext();
     if (token == QXmlStreamReader::StartElement &&
-        (xmlreader->name() == "amt" || xmlreader->name() == "apt" ||
-         xmlreader->name() == "att" || xmlreader->name() == "ast")) {
+        (xmlreader->name().compare(QString("amt")) || xmlreader->name().compare(QString("apt")) ||
+         xmlreader->name().compare(QString("att")) || xmlreader->name().compare(QString("ast")))) {
       QXmlStreamAttributes attributes = xmlreader->attributes();
       istemplate = true;
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "table" && istemplate) {
+               xmlreader->name().compare(QString("table")) && istemplate) {
       Table *table = app_->newTable("table", 1, 1);
       table->d_future_table->load(xmlreader.get());
       mywidget = table;
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "matrix" && istemplate) {
+               xmlreader->name().compare(QString("matrix")) && istemplate) {
       Matrix *matrix = app_->newMatrix("matrix", 1, 1);
       matrix->d_future_matrix->load(xmlreader.get());
       mywidget = matrix;
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "plot2d" && istemplate) {
+               xmlreader->name().compare(QString("plot2d")) && istemplate) {
       Layout2D *plot2d = app_->newGraph2D();
       plot2d->load(xmlreader.get(), tables(app_), matrixs(app_));
       // (hack) for some unknown reason this connection need to be manually set
@@ -281,7 +281,7 @@ MyWidget *AprojHandler::opentemplate(const QString &filename) {
       }
       mywidget = plot2d;
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "plot3d" && istemplate) {
+               xmlreader->name().compare(QString("plot3d")) && istemplate) {
       bool ok = false;
       Layout3D *plot = nullptr;
       QString ptype = xmlreader->readAttributeString("type", &ok);
@@ -330,7 +330,7 @@ Folder *AprojHandler::readxmlstream(ApplicationWindow *app, QFile *file,
   while (!xmlreader->atEnd()) {
     token = xmlreader->readNext();
     if (token == QXmlStreamReader::StartElement &&
-        xmlreader->name() == "aproj") {
+        xmlreader->name().compare(QString("aproj"))) {
       QXmlStreamAttributes attributes = xmlreader->attributes();
       if (attributes.hasAttribute("scripting")) {
         if (!app->setScriptingLang(attributes.value("scripting").toString(),
@@ -346,7 +346,7 @@ Folder *AprojHandler::readxmlstream(ApplicationWindow *app, QFile *file,
       rootitem->setText(0, fileinfo.baseName());
       rootitem->folder()->setName(fileinfo.baseName());
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "folder") {
+               xmlreader->name().compare(QString("folder"))) {
       recursivecount_++;
       QXmlStreamAttributes attr = xmlreader->attributes();
       QString name = xmlreader->attributes().value("name").toString();
@@ -365,7 +365,7 @@ Folder *AprojHandler::readxmlstream(ApplicationWindow *app, QFile *file,
       app->current_folder = folder;
       if (current.trimmed() == "true") cfolder = folder;
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "table") {
+               xmlreader->name().compare(QString("table"))) {
       bool ok;
       QString time = xmlreader->readAttributeString("creation_time", &ok);
       Table *table = app->newTable("table", 1, 1);
@@ -375,23 +375,23 @@ Folder *AprojHandler::readxmlstream(ApplicationWindow *app, QFile *file,
       if (ok) {
         table->setBirthDate(
             QDateTime::fromString(time, "yyyy-dd-MM hh:mm:ss:zzz")
-                .toString(Qt::LocalDate));
+                .toString());
       } else {
         table->setBirthDate(
-            QDateTime::currentDateTime().toString(Qt::LocalDate));
+            QDateTime::currentDateTime().toString());
         xmlreader->raiseWarning(
             tr("Invalid creation time. Using current time insted."));
       }
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "matrix") {
+               xmlreader->name().compare(QString("matrix"))) {
       Matrix *matrix = app->newMatrix("matrix", 1, 1);
       matrix->d_future_matrix->load(xmlreader.get());
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "note") {
+               xmlreader->name().compare(QString("note"))) {
       Note *note = app->newNote("caption");
       note->load(xmlreader.get());
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "plot2d") {
+               xmlreader->name().compare(QString("plot2d"))) {
       Layout2D *plot2d = app->newGraph2D();
       plot2d->load(xmlreader.get(), tables(app), matrixs(app));
       // (hack) for some unknown reason this connection need to be manually set
@@ -400,7 +400,7 @@ Folder *AprojHandler::readxmlstream(ApplicationWindow *app, QFile *file,
         app->propertyeditor->axisrectConnections(axisrect);
       }
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "plot3d") {
+               xmlreader->name().compare(QString("plot3d"))) {
       bool ok = false;
       Layout3D *plot = nullptr;
       QString ptype = xmlreader->readAttributeString("type", &ok);
@@ -420,7 +420,7 @@ Folder *AprojHandler::readxmlstream(ApplicationWindow *app, QFile *file,
       else
         return nullptr;
     } else if (token == QXmlStreamReader::StartElement &&
-               xmlreader->name() == "log") {
+               xmlreader->name().compare(QString("log"))) {
       QXmlStreamAttributes attributes = xmlreader->attributes();
       if (attributes.hasAttribute("value")) {
         QString loginfo = attributes.value("value").toString();
@@ -430,7 +430,7 @@ Folder *AprojHandler::readxmlstream(ApplicationWindow *app, QFile *file,
                                    "skipping the attribute now.")
                                     .arg("value"));
     } else if (token == QXmlStreamReader::EndElement &&
-               xmlreader->name() == "folder") {
+               xmlreader->name().compare(QString("folder"))) {
       while (recursivecount_ > 0) {
         Folder *fl = static_cast<Folder *>(app->current_folder->parent());
         if (fl) {
@@ -492,7 +492,7 @@ bool AprojHandler::saveproject(const QString &filename, Folder *folder) {
         std::unique_ptr<XmlStreamWriter>(new XmlStreamWriter(bytearray.get()));
   }
 
-  xmlwriter->setCodec("UTF-8");
+  //xmlwriter->setCodec("UTF-8");
 
   xmlwriter->setAutoFormatting(false);
   Folder *root = folder;
@@ -587,7 +587,7 @@ bool AprojHandler::saveTemplate(const QString &filename, MyWidget *mywidget) {
   }
   std::unique_ptr<XmlStreamWriter> xmlwriter =
       std::unique_ptr<XmlStreamWriter>(new XmlStreamWriter(file.get()));
-  xmlwriter->setCodec("UTF-8");
+  //xmlwriter->setCodec("UTF-8");
   xmlwriter->setAutoFormatting(false);
 
   xmlwriter->writeStartDocument();
diff --git a/alphaplot/src/core/Utilities.cpp b/alphaplot/src/core/Utilities.cpp
index 92be8dc00..f3659eb0d 100644
--- a/alphaplot/src/core/Utilities.cpp
+++ b/alphaplot/src/core/Utilities.cpp
@@ -44,72 +44,7 @@ int Utilities::getWordSizeApp() {
 }
 
 QString Utilities::getOperatingSystem() {
-#if defined(Q_OS_WIN32)
-  switch (QSysInfo::windowsVersion()) {
-    case QSysInfo::WV_NT:
-      return QString("Windows NT");
-    case QSysInfo::WV_2000:
-      return QString("Windows 2000");
-    case QSysInfo::WV_XP:
-      return QString("Windows XP");
-    case QSysInfo::WV_2003:
-      return QString("Windows Server 2003");
-    case QSysInfo::WV_VISTA:
-      return QString("Windows Vista");
-    case QSysInfo::WV_WINDOWS7:
-      return QString("Windows 7");
-    case QSysInfo::WV_WINDOWS8:
-      return QString("Windows 8");
-    case QSysInfo::WV_WINDOWS8_1:
-      return QString("Windows 8.1");
-    case QSysInfo::WV_WINDOWS10:
-      return QString("Windows 10");
-    default:
-      return QString("Windows");
-  }
-#elif defined(Q_OS_MAC)
-  switch (QSysInfo::MacVersion()) {
-    case QSysInfo::MV_10_3:
-      return QString("Mac OS X 10.3");
-    case QSysInfo::MV_10_4:
-      return QString("Mac OS X 10.4");
-    case QSysInfo::MV_10_5:
-      return QString("Mac OS X 10.5");
-    case QSysInfo::MV_10_6:
-      return QString("Mac OS X 10.6");
-    case QSysInfo::MV_10_7:
-      return QString("Mac OS X 10.7");
-    case QSysInfo::MV_10_8:
-      return QString("Mac OS X 10.8");
-    case QSysInfo::MV_10_9:
-      return QString("Mac OS X 10.9");
-    case QSysInfo::MV_10_10:
-      return QString("Mac OS X 10.10");
-    // case QSysInfo::MV_10_11: (mot available in qt4)
-    // return QString("Mac OS X 10.11");
-    default:
-      return QString("Mac OS X");
-  }
-#elif defined(Q_OS_LINUX)
-  QString exe("lsb_release");
-  QStringList args;
-  args << "-ds";
-  QProcess proc;
-  proc.setEnvironment(QProcess::systemEnvironment());
-  proc.start(exe, args);
-  if (proc.waitForStarted() && proc.waitForFinished()) {
-    QByteArray info = proc.readAll();
-    info.replace('\n', "");
-    info.replace("\"", "");
-    return QString(info);
-  }
-
-  return QString("Linux");
-#elif defined(Q_OS_UNIX)
-  return QString("UNIX");
-#else
-  return QString("Unknown");
-#endif
+    return QSysInfo::prettyProductName();
 }
 
 int Utilities::getWordSizeOfOS() {
diff --git a/alphaplot/src/core/Utilities.h b/alphaplot/src/core/Utilities.h
index 7150f2599..d8e552fb4 100644
--- a/alphaplot/src/core/Utilities.h
+++ b/alphaplot/src/core/Utilities.h
@@ -19,6 +19,7 @@
 #include <QColor>
 #include <QImage>
 #include <QString>
+#include <QDateTime>
 
 class Utilities {
  public:
diff --git a/alphaplot/src/core/widgets/propertyeditor.cpp b/alphaplot/src/core/widgets/propertyeditor.cpp
index a4382a4cc..c49c09d62 100644
--- a/alphaplot/src/core/widgets/propertyeditor.cpp
+++ b/alphaplot/src/core/widgets/propertyeditor.cpp
@@ -20,14 +20,15 @@
 #include <QSplitter>
 #include <QTreeWidget>
 #include <QTreeWidgetItem>
-#include <QtDataVisualization/QBar3DSeries>
-#include <QtDataVisualization/QScatter3DSeries>
-#include <QtDataVisualization/QSurface3DSeries>
+#include <QAbstract3DSeries>
+#include <QBar3DSeries>
+#include <QScatter3DSeries>
+#include <QSurface3DSeries>
 #include <limits>
 
-#include "../3rdparty/propertybrowser/qteditorfactory.h"
-#include "../3rdparty/propertybrowser/qtpropertymanager.h"
-#include "../3rdparty/propertybrowser/qttreepropertybrowser.h"
+#include <qtpropertybrowser/qteditorfactory.h>
+#include <qtpropertybrowser/qtpropertymanager.h>
+#include <qtpropertybrowser/qttreepropertybrowser.h>
 #include "2Dplot/Bar2D.h"
 #include "2Dplot/ColorMap2D.h"
 #include "2Dplot/Curve2D.h"
@@ -57,8 +58,6 @@
 #include "future/core/column/Column.h"
 #include "ui_propertyeditor.h"
 
-using namespace QtDataVisualization;
-
 PropertyEditor::PropertyEditor(QWidget *parent, ApplicationWindow *app)
     : QDockWidget(parent),
       app_(app),
@@ -183,7 +182,7 @@ PropertyEditor::PropertyEditor(QWidget *parent, ApplicationWindow *app)
   mywidgetwindownameitem_ = stringManager_->addProperty(tr("Name"));
   mywidgetwindowlabelitem_ = stringManager_->addProperty(tr("Label"));
   stringManager_->setRegExp(mywidgetwindownameitem_,
-                            QRegExp("^[a-zA-Z0-9-]*$"));
+                            QRegularExpression("^[a-zA-Z0-9-]*$"));
 
   // Plot Canvas properties
   canvaspropertycoloritem_ = colorManager_->addProperty(tr("Background Color"));
@@ -5882,7 +5881,7 @@ void PropertyEditor::Surface3DSeriesPropertyBlock(DataBlockSurface3D *block) {
     boolManager_->setValue(plot3dsurfaceseriesflatshadingstatusitem_,
                            block->getdataseries()->isFlatShadingEnabled());
   enumManager_->setValue(plot3dsurfaceseriesdrawitem_,
-                         block->getdataseries()->drawMode() - 1);
+                         (int)(block->getdataseries()->drawMode()) - 1);
   boolManager_->setValue(plot3dsurfaceseriesmeshsmoothitem_,
                          block->getdataseries()->isMeshSmooth());
   enumManager_->setValue(plot3dsurfaceseriescolorstyleitem_,
diff --git a/alphaplot/src/core/widgets/propertyeditor.h b/alphaplot/src/core/widgets/propertyeditor.h
index ad117b15a..06dc4ab8a 100644
--- a/alphaplot/src/core/widgets/propertyeditor.h
+++ b/alphaplot/src/core/widgets/propertyeditor.h
@@ -66,13 +66,10 @@ class QtColorEditorFactory;
 class QtFontEditorFactory;
 class QtDateTimeEditFactory;
 
-namespace QtDataVisualization {
-class QAbstract3DGraph;
-class Q3DTheme;
-class QValue3DAxis;
-class QValue3DAxis;
-class QCategory3DAxis;
-}  // namespace QtDataVisualization
+#include <QAbstract3DGraph>
+#include <Q3DTheme>
+#include <QValue3DAxis>
+#include <QCategory3DAxis>
 
 class PropertyEditor : public QDockWidget {
   Q_OBJECT
@@ -123,10 +120,10 @@ class PropertyEditor : public QDockWidget {
   void ColorMap2DPropertyBlock(ColorMap2D *colormap, AxisRect2D *axisrect);
   void ErrorBar2DPropertyBlock(ErrorBar2D *errorbar, AxisRect2D *axisrect);
   // 3dplot
-  void Canvas3DPropertyBlock(QtDataVisualization::QAbstract3DGraph *graph);
-  void Theme3DPropertyBlock(QtDataVisualization::Q3DTheme *theme);
-  void Axis3DValuePropertyBlock(QtDataVisualization::QValue3DAxis *axis);
-  void Axis3DCatagoryPropertyBlock(QtDataVisualization::QCategory3DAxis *axis);
+  void Canvas3DPropertyBlock(QAbstract3DGraph *graph);
+  void Theme3DPropertyBlock(Q3DTheme *theme);
+  void Axis3DValuePropertyBlock(QValue3DAxis *axis);
+  void Axis3DCatagoryPropertyBlock(QCategory3DAxis *axis);
   void Surface3DPropertyBlock(Surface3D *surface);
   void Bar3DPropertyBlock(Bar3D *bar);
   void Scatter3DPropertyBlock(Scatter3D *scatter);
diff --git a/alphaplot/src/future/core/AbstractAspect.cpp b/alphaplot/src/future/core/AbstractAspect.cpp
index 6b4f70d5f..54b7bf278 100644
--- a/alphaplot/src/future/core/AbstractAspect.cpp
+++ b/alphaplot/src/future/core/AbstractAspect.cpp
@@ -53,7 +53,7 @@ void AbstractAspect::writeCommentElement(QXmlStreamWriter *writer) const {
 }
 
 bool AbstractAspect::readCommentElement(XmlStreamReader *reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "comment");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("comment")));
   QString temp = reader->readElementText();
   temp.replace("\\n", "\n");
   setComment(temp);
diff --git a/alphaplot/src/future/core/AbstractAspect.h b/alphaplot/src/future/core/AbstractAspect.h
index 592d8d7eb..ba6f51819 100644
--- a/alphaplot/src/future/core/AbstractAspect.h
+++ b/alphaplot/src/future/core/AbstractAspect.h
@@ -282,7 +282,7 @@ class AbstractAspect : public QObject {
 
  public:
   void importV0x0001XXCreationTime(const QString &str) {
-    setCreationTime(QDateTime::fromString(str, Qt::LocalDate));
+    setCreationTime(QDateTime::fromString(str));
   }
 
  signals:
diff --git a/alphaplot/src/future/core/AbstractColumn.h b/alphaplot/src/future/core/AbstractColumn.h
index c3f8d720c..da0c3d21c 100644
--- a/alphaplot/src/future/core/AbstractColumn.h
+++ b/alphaplot/src/future/core/AbstractColumn.h
@@ -35,14 +35,13 @@
 #include <QList>
 #include <QString>
 #include <QTime>
+#include <QStringList>
 
 #include "core/AbstractAspect.h"
 #include "globals.h"
 #include "lib/Interval.h"
 
-class Column;
 class AbstractSimpleFilter;
-class QStringList;
 
 //! Interface definition for data with column logic
 /**
diff --git a/alphaplot/src/future/core/AbstractSimpleFilter.cpp b/alphaplot/src/future/core/AbstractSimpleFilter.cpp
index 80134556e..23a9e396c 100644
--- a/alphaplot/src/future/core/AbstractSimpleFilter.cpp
+++ b/alphaplot/src/future/core/AbstractSimpleFilter.cpp
@@ -131,7 +131,7 @@ void AbstractSimpleFilter::save(QXmlStreamWriter *writer) const {
 }
 
 bool AbstractSimpleFilter::load(XmlStreamReader *reader) {
-  if (reader->isStartElement() && reader->name() == "simple_filter") {
+  if (reader->isStartElement() && reader->name().compare(QString("simple_filter"))) {
     if (!readBasicAttributes(reader)) return false;
 
     QXmlStreamAttributes attribs = reader->attributes();
@@ -150,7 +150,7 @@ bool AbstractSimpleFilter::load(XmlStreamReader *reader) {
       if (reader->isEndElement()) break;
 
       if (reader->isStartElement()) {
-        if (reader->name() == "comment") {
+        if (reader->name().compare(QString("comment"))) {
           if (!readCommentElement(reader)) return false;
         } else  // unknown element
         {
diff --git a/alphaplot/src/future/core/AspectPrivate.cpp b/alphaplot/src/future/core/AspectPrivate.cpp
index cea5ab88d..21d21fa83 100644
--- a/alphaplot/src/future/core/AspectPrivate.cpp
+++ b/alphaplot/src/future/core/AspectPrivate.cpp
@@ -28,7 +28,7 @@
  ***************************************************************************/
 #include "AbstractAspect.h"
 #include "AspectPrivate.h"
-#include <QRegExp>
+#include <QRegularExpression>
 #include <QStringList>
 
 QSettings *AbstractAspect::Private::g_settings = new QSettings();
@@ -143,12 +143,13 @@ int AbstractAspect::Private::indexOfMatchingBrace(const QString &str,
 
 QString AbstractAspect::Private::caption() const {
   QString result = d_caption_spec;
-  QRegExp magic("%(.)");
-  for (int pos = magic.indexIn(result, 0); pos >= 0;
-       pos = magic.indexIn(result, pos)) {
+  QRegularExpression magic("%(.)");
+  auto match = magic.match(result, 0);
+  for (int pos = match.capturedStart(); pos >= 0;
+       pos = match.capturedStart()) {
     QString replacement;
     int length;
-    switch (magic.cap(1).at(0).toLatin1()) {
+    switch (match.capturedTexts().at(1).at(0).toLatin1()) {
       case '%':
         replacement = "%";
         length = 2;
@@ -173,6 +174,7 @@ QString AbstractAspect::Private::caption() const {
     }
     result.replace(pos, length, replacement);
     pos += replacement.size();
+    match = magic.match(result, pos);
   }
   return result;
 }
diff --git a/alphaplot/src/future/core/Project.cpp b/alphaplot/src/future/core/Project.cpp
index cfaa93b86..c81a1ad4e 100644
--- a/alphaplot/src/future/core/Project.cpp
+++ b/alphaplot/src/future/core/Project.cpp
@@ -155,7 +155,7 @@ bool Project::load(XmlStreamReader *reader) {
   if (!(reader->atEnd())) {
     if (!reader->skipToNextTag()) return false;
 
-    if (reader->name() == "AlphaPlot_project") {
+    if (reader->name().compare(QString("AlphaPlot_project"))) {
       bool ok = true;
       // int version = reader->readAttributeInt("version", &ok);
       if (!ok) {
@@ -171,12 +171,12 @@ bool Project::load(XmlStreamReader *reader) {
         if (reader->isEndElement()) break;
 
         if (reader->isStartElement()) {
-          if (reader->name() == "project_root") {
+          if (reader->name().compare(QString("project_root"))) {
             if (!reader->skipToNextTag()) return false;
             if (!future::Folder::load(reader)) return false;
             if (!reader->skipToNextTag()) return false;
             Q_ASSERT(reader->isEndElement() &&
-                     reader->name() == "project_root");
+                     reader->name().compare(QString("project_root")));
           } else  // unknown element
           {
             reader->raiseWarning(
diff --git a/alphaplot/src/future/core/column/Column.cpp b/alphaplot/src/future/core/column/Column.cpp
index 5e161976c..b4037052d 100644
--- a/alphaplot/src/future/core/column/Column.cpp
+++ b/alphaplot/src/future/core/column/Column.cpp
@@ -352,7 +352,7 @@ void Column::save(QXmlStreamWriter* writer, const bool saveastemplate) const {
 }
 
 bool Column::load(XmlStreamReader* reader) {
-  if (reader->isStartElement() && reader->name() == "column") {
+  if (reader->isStartElement() && reader->name().compare(QString("column"))) {
     if (!readBasicAttributes(reader)) return false;
 
     QXmlStreamAttributes attribs = reader->attributes();
@@ -410,19 +410,19 @@ bool Column::load(XmlStreamReader* reader) {
 
       if (reader->isStartElement()) {
         bool ret_val = true;
-        if (reader->name() == "comment")
+        if (reader->name().compare(QString("comment")))
           ret_val = readCommentElement(reader);
-        else if (reader->name() == "numericDateTimeFilter")
+        else if (reader->name().compare(QString("numericDateTimeFilter")))
           ret_val = XmlReadNumericDateTimeFilter(reader);
-        else if (reader->name() == "input_filter")
+        else if (reader->name().compare(QString("input_filter")))
           ret_val = XmlReadInputFilter(reader);
-        else if (reader->name() == "output_filter")
+        else if (reader->name().compare(QString("output_filter")))
           ret_val = XmlReadOutputFilter(reader);
-        else if (reader->name() == "mask")
+        else if (reader->name().compare(QString("mask")))
           ret_val = XmlReadMask(reader);
-        else if (reader->name() == "formula")
+        else if (reader->name().compare(QString("formula")))
           ret_val = XmlReadFormula(reader);
-        else if (reader->name() == "row")
+        else if (reader->name().compare(QString("row")))
           ret_val = XmlReadRow(reader);
         else  // unknown element
         {
@@ -441,34 +441,34 @@ bool Column::load(XmlStreamReader* reader) {
 
 bool Column::XmlReadNumericDateTimeFilter(XmlStreamReader* reader) {
   Q_ASSERT(reader->isStartElement() &&
-           reader->name() == "numericDateTimeFilter");
+           reader->name().compare(QString("numericDateTimeFilter")));
   if (!reader->skipToNextTag()) return false;
   if (!d_column_private->getNumericDateTimeFilter()->load(reader)) return false;
   if (!reader->skipToNextTag()) return false;
-  Q_ASSERT(reader->isEndElement() && reader->name() == "numericDateTimeFilter");
+  Q_ASSERT(reader->isEndElement() && reader->name().compare(QString("numericDateTimeFilter")));
   return true;
 }
 
 bool Column::XmlReadInputFilter(XmlStreamReader* reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "input_filter");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("input_filter")));
   if (!reader->skipToNextTag()) return false;
   if (!d_column_private->inputFilter()->load(reader)) return false;
   if (!reader->skipToNextTag()) return false;
-  Q_ASSERT(reader->isEndElement() && reader->name() == "input_filter");
+  Q_ASSERT(reader->isEndElement() && reader->name().compare(QString("input_filter")));
   return true;
 }
 
 bool Column::XmlReadOutputFilter(XmlStreamReader* reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "output_filter");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("output_filter")));
   if (!reader->skipToNextTag()) return false;
   if (!outputFilter()->load(reader)) return false;
   if (!reader->skipToNextTag()) return false;
-  Q_ASSERT(reader->isEndElement() && reader->name() == "output_filter");
+  Q_ASSERT(reader->isEndElement() && reader->name().compare(QString("output_filter")));
   return true;
 }
 
 bool Column::XmlReadMask(XmlStreamReader* reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "mask");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("mask")));
 
   bool ok1, ok2;
   int start, end;
@@ -485,7 +485,7 @@ bool Column::XmlReadMask(XmlStreamReader* reader) {
 }
 
 bool Column::XmlReadFormula(XmlStreamReader* reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "formula");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("formula")));
 
   bool ok1, ok2;
   int start, end;
@@ -501,7 +501,7 @@ bool Column::XmlReadFormula(XmlStreamReader* reader) {
 }
 
 bool Column::XmlReadRow(XmlStreamReader* reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "row");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("row")));
 
   QString str;
   int type_code;
diff --git a/alphaplot/src/future/core/column/Column.h b/alphaplot/src/future/core/column/Column.h
index 97af6d541..c3c659e1a 100644
--- a/alphaplot/src/future/core/column/Column.h
+++ b/alphaplot/src/future/core/column/Column.h
@@ -32,14 +32,15 @@
 
 #include <memory>
 
+#include "core/AbstractColumn.h"
 #include "core/AbstractAspect.h"
+#include "core/AbstractFilter.h"
 #include "core/AbstractSimpleFilter.h"
 #include "core/datatypes/NumericDateTimeBaseFilter.h"
 #include "lib/IntervalAttribute.h"
 #include "lib/XmlStreamReader.h"
 
 class QString;
-
 class ColumnStringIO;
 
 //! Aspect that manages a column
diff --git a/alphaplot/src/future/core/datatypes/DateTime2StringFilter.h b/alphaplot/src/future/core/datatypes/DateTime2StringFilter.h
index 11de1e980..62edf2119 100644
--- a/alphaplot/src/future/core/datatypes/DateTime2StringFilter.h
+++ b/alphaplot/src/future/core/datatypes/DateTime2StringFilter.h
@@ -31,7 +31,7 @@
 #define DATE_TIME2STRING_FILTER_H
 
 #include <QDateTime>
-#include <QRegExp>
+#include <QRegularExpression>
 
 #include "core/AbstractSimpleFilter.h"
 
diff --git a/alphaplot/src/future/core/datatypes/String2DateTimeFilter.cpp b/alphaplot/src/future/core/datatypes/String2DateTimeFilter.cpp
index 980c0ba81..0c7251045 100644
--- a/alphaplot/src/future/core/datatypes/String2DateTimeFilter.cpp
+++ b/alphaplot/src/future/core/datatypes/String2DateTimeFilter.cpp
@@ -62,9 +62,9 @@ QDateTime String2DateTimeFilter::dateTimeAt(int row) const {
   // try other format strings built from date_formats and time_formats
   // comma and space are valid separators between date and time
   QStringList strings =
-      input_value.simplified().split(",", QString::SkipEmptyParts);
+      input_value.simplified().split(",", Qt::SkipEmptyParts);
   if (strings.size() == 1)
-    strings = strings.at(0).split(" ", QString::SkipEmptyParts);
+    strings = strings.at(0).split(" ", Qt::SkipEmptyParts);
 
   if (strings.size() < 1)
     return result;  // invalid date/time from first attempt
diff --git a/alphaplot/src/future/core/datatypes/String2DoubleFilter.h b/alphaplot/src/future/core/datatypes/String2DoubleFilter.h
index ead1fd46c..aa390d7a8 100644
--- a/alphaplot/src/future/core/datatypes/String2DoubleFilter.h
+++ b/alphaplot/src/future/core/datatypes/String2DoubleFilter.h
@@ -115,9 +115,9 @@ class String2DoubleFilter : public AbstractSimpleFilter {
     bool ok;
     auto tstr = QString(str);
     if (accept_any_decimal_separator) {
-      QChar decimalSeparator =
+      auto decimalSeparator =
           locale.decimalPoint();  // get the decimal separator for this locale
-      QChar foreignSeparator =
+      auto foreignSeparator =
           decimalSeparator;  // safeguard initialization just in case
                              // there are other decimal separators.
       if ('.' == decimalSeparator) foreignSeparator = ',';
diff --git a/alphaplot/src/future/core/future_Folder.cpp b/alphaplot/src/future/core/future_Folder.cpp
index 305763761..78d3dec62 100644
--- a/alphaplot/src/future/core/future_Folder.cpp
+++ b/alphaplot/src/future/core/future_Folder.cpp
@@ -73,7 +73,7 @@ void Folder::save(QXmlStreamWriter *writer, bool) const {
 }
 
 bool Folder::load(XmlStreamReader *reader) {
-  if (reader->isStartElement() && reader->name() == "folder") {
+  if (reader->isStartElement() && reader->name().compare(QString("folder"))) {
     setComment("");
     removeAllChildAspects();
 
@@ -86,9 +86,9 @@ bool Folder::load(XmlStreamReader *reader) {
       if (reader->isEndElement()) break;
 
       if (reader->isStartElement()) {
-        if (reader->name() == "comment") {
+        if (reader->name().compare(QString("comment"))) {
           if (!readCommentElement(reader)) return false;
-        } else if (reader->name() == "child_aspect") {
+        } else if (reader->name().compare(QString("child_aspect"))) {
           if (!readChildAspectElement(reader)) return false;
         } else  // unknown element
         {
@@ -106,13 +106,13 @@ bool Folder::load(XmlStreamReader *reader) {
 
 bool Folder::readChildAspectElement(XmlStreamReader *reader) {
   bool loaded = false;
-  Q_ASSERT(reader->isStartElement() && reader->name() == "child_aspect");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("child_aspect")));
 
   if (!reader->skipToNextTag()) return false;
-  if (reader->isEndElement() && reader->name() == "child_aspect")
+  if (reader->isEndElement() && reader->name().compare(QString("child_aspect")))
     return true;  // empty element tag
   QString element_name = reader->name().toString();
-  if (element_name == "folder") {
+  if (element_name.compare(QString("folder"))) {
     Folder *folder = new Folder(tr("Folder %1").arg(1));
     if (!folder->load(reader)) {
       delete folder;
@@ -120,7 +120,7 @@ bool Folder::readChildAspectElement(XmlStreamReader *reader) {
     }
     addChild(folder);
     loaded = true;
-  } else if (element_name == "column") {
+  } else if (element_name.compare(QString("column"))) {
     Column *column = new Column(tr("Column %1").arg(1), AlphaPlot::Text);
     if (!column->load(reader)) {
       delete column;
@@ -152,7 +152,7 @@ bool Folder::readChildAspectElement(XmlStreamReader *reader) {
     if (!reader->skipToEndElement()) return false;
   }
   if (!reader->skipToNextTag()) return false;
-  Q_ASSERT(reader->isEndElement() && reader->name() == "child_aspect");
+  Q_ASSERT(reader->isEndElement() && reader->name().compare(QString("child_aspect")));
   return !reader->hasError();
 }
 
diff --git a/alphaplot/src/future/lib/XmlStreamReader.cpp b/alphaplot/src/future/lib/XmlStreamReader.cpp
index 71553929d..260582e24 100644
--- a/alphaplot/src/future/lib/XmlStreamReader.cpp
+++ b/alphaplot/src/future/lib/XmlStreamReader.cpp
@@ -167,7 +167,7 @@ QXmlStreamAttributes XmlStreamReader::readElements(const QString& element,
 
 QPair<QFont, QColor> XmlStreamReader::readFont(bool* ok) {
   QPair<QFont, QColor> pair;
-  if (isStartElement() && name() == "font") {
+  if (isStartElement() && name().compare(QString("font"))) {
     // family
     QString family = readAttributeString("family", ok);
     if (ok)
@@ -183,7 +183,7 @@ QPair<QFont, QColor> XmlStreamReader::readFont(bool* ok) {
     // size
     int weight = readAttributeInt("weight", ok);
     if (ok)
-      pair.first.setWeight(weight);
+      pair.first.setWeight((QFont::Weight)weight);
     else
       raiseWarning("QFont weight property setting error");
     // bold
@@ -225,7 +225,7 @@ QPair<QFont, QColor> XmlStreamReader::readFont(bool* ok) {
 
 QPen XmlStreamReader::readPen(bool* ok) {
   QPen pen;
-  if (isStartElement() && name() == "pen") {
+  if (isStartElement() && name().compare(QString("pen"))) {
     // color
     QString color = readAttributeString("color", ok);
     if (ok)
@@ -265,7 +265,7 @@ QPen XmlStreamReader::readPen(bool* ok) {
 
 QBrush XmlStreamReader::readBrush(bool* ok) {
   QBrush brush;
-  if (isStartElement() && name() == "brush") {
+  if (isStartElement() && name().compare(QString("brush"))) {
     // color
     QString color = readAttributeString("color", ok);
     if (ok)
diff --git a/alphaplot/src/future/matrix/future_Matrix.cpp b/alphaplot/src/future/matrix/future_Matrix.cpp
index 65c576367..e3c5ea4e4 100644
--- a/alphaplot/src/future/matrix/future_Matrix.cpp
+++ b/alphaplot/src/future/matrix/future_Matrix.cpp
@@ -264,7 +264,7 @@ void Matrix::pasteIntoSelection() {
   if (mimeData->hasText()) {
     QString input_str = QString(clipboard->text());
     QList<QStringList> cell_texts;
-    QStringList input_rows(input_str.split(QRegExp("\\n|\\r\\n|\\r")));
+    QStringList input_rows(input_str.split(QRegularExpression("\\n|\\r\\n|\\r")));
     input_row_count = input_rows.count();
     input_col_count = 0;
     for (int i = 0; i < input_row_count; i++) {
@@ -1010,7 +1010,7 @@ void Matrix::save(QXmlStreamWriter *writer, const bool saveastemplate) const {
 }
 
 bool Matrix::load(XmlStreamReader *reader) {
-  if (reader->isStartElement() && reader->name() == "matrix") {
+  if (reader->isStartElement() && reader->name().compare(QString("matrix"))) {
     setDimensions(0, 0);
     setComment("");
     setFormula("");
@@ -1040,19 +1040,19 @@ bool Matrix::load(XmlStreamReader *reader) {
 
       if (reader->isStartElement()) {
         bool ret_val = true;
-        if (reader->name() == "comment")
+        if (reader->name().compare(QString("comment")))
           ret_val = readCommentElement(reader);
-        else if (reader->name() == "formula")
+        else if (reader->name().compare(QString("formula")))
           ret_val = readFormulaElement(reader);
-        else if (reader->name() == "display")
+        else if (reader->name().compare(QString("display")))
           ret_val = readDisplayElement(reader);
-        else if (reader->name() == "coordinates")
+        else if (reader->name().compare(QString("coordinates")))
           ret_val = readCoordinatesElement(reader);
-        else if (reader->name() == "cell")
+        else if (reader->name().compare(QString("cell")))
           ret_val = readCellElement(reader);
-        else if (reader->name() == "row_height")
+        else if (reader->name().compare(QString("row_height")))
           ret_val = readRowHeightElement(reader);
-        else if (reader->name() == "column_width")
+        else if (reader->name().compare(QString("column_width")))
           ret_val = readColumnWidthElement(reader);
         else  // unknown element
         {
@@ -1071,7 +1071,7 @@ bool Matrix::load(XmlStreamReader *reader) {
 }
 
 bool Matrix::readDisplayElement(XmlStreamReader *reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "display");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("display")));
   QXmlStreamAttributes attribs = reader->attributes();
 
   QString str =
@@ -1096,7 +1096,7 @@ bool Matrix::readDisplayElement(XmlStreamReader *reader) {
 }
 
 bool Matrix::readCoordinatesElement(XmlStreamReader *reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "coordinates");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("coordinates")));
 
   bool ok;
   int val;
@@ -1134,13 +1134,13 @@ bool Matrix::readCoordinatesElement(XmlStreamReader *reader) {
 }
 
 bool Matrix::readFormulaElement(XmlStreamReader *reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "formula");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("formula")));
   setFormula(reader->readElementText());
   return true;
 }
 
 bool Matrix::readRowHeightElement(XmlStreamReader *reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "row_height");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("row_height")));
   bool ok;
   int row = reader->readAttributeInt("row", &ok);
   if (!ok) {
@@ -1161,7 +1161,7 @@ bool Matrix::readRowHeightElement(XmlStreamReader *reader) {
 }
 
 bool Matrix::readColumnWidthElement(XmlStreamReader *reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "column_width");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("column_width")));
   bool ok;
   int col = reader->readAttributeInt("column", &ok);
   if (!ok) {
@@ -1182,7 +1182,7 @@ bool Matrix::readColumnWidthElement(XmlStreamReader *reader) {
 }
 
 bool Matrix::readCellElement(XmlStreamReader *reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "cell");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("cell")));
 
   QString str;
   int row, col;
diff --git a/alphaplot/src/future/table/TableModel.h b/alphaplot/src/future/table/TableModel.h
index a123c7c7e..044be9290 100644
--- a/alphaplot/src/future/table/TableModel.h
+++ b/alphaplot/src/future/table/TableModel.h
@@ -35,8 +35,9 @@
 #include <QList>
 #include <QStringList>
 #include "core/AbstractFilter.h"
+#include "core/column/Column.h"
 
-class Column;
+//class Column;
 namespace future {
 class Table;
 }
diff --git a/alphaplot/src/future/table/TableView.cpp b/alphaplot/src/future/table/TableView.cpp
index 4cdab16a4..c121a2e3e 100644
--- a/alphaplot/src/future/table/TableView.cpp
+++ b/alphaplot/src/future/table/TableView.cpp
@@ -1078,7 +1078,7 @@ void TableView::drawSpikinessData(QPainter *painter, QRect &rect,
   double yDeltaDiff = rect.height() / static_cast<double>(yMax - yMin);
 
   // set pen
-  QColor color = palette().color(QPalette::Foreground);
+  QColor color = palette().color(QPalette::WindowText);
   color.setAlpha(40);
   painter->setPen(QPen(color, 0, Qt::SolidLine));
   painter->setBrush(QBrush(color));
diff --git a/alphaplot/src/future/table/TableView.h b/alphaplot/src/future/table/TableView.h
index 6b9b43b80..2481ec447 100644
--- a/alphaplot/src/future/table/TableView.h
+++ b/alphaplot/src/future/table/TableView.h
@@ -51,8 +51,8 @@
 #include "globals.h"
 #include "lib/IntervalAttribute.h"
 #include "ui_controltabs.h"
+#include "core/column/Column.h"
 
-class Column;
 namespace future {
 class Table;
 }
diff --git a/alphaplot/src/future/table/future_Table.cpp b/alphaplot/src/future/table/future_Table.cpp
index 0b9b133cd..530d51a47 100644
--- a/alphaplot/src/future/table/future_Table.cpp
+++ b/alphaplot/src/future/table/future_Table.cpp
@@ -414,11 +414,11 @@ void Table::pasteIntoSelection() {
   if (mimeData->hasText()) {
     QString input_str = clipboard->text().trimmed();
     QList<QStringList> cell_texts;
-    QStringList input_rows(input_str.split(QRegExp("\\n|\\r\\n|\\r")));
+    QStringList input_rows(input_str.split(QRegularExpression("\\n|\\r\\n|\\r")));
     input_row_count = input_rows.count();
     input_col_count = 0;
     for (int i = 0; i < input_row_count; i++) {
-      cell_texts.append(input_rows.at(i).trimmed().split(QRegExp("\\s+")));
+      cell_texts.append(input_rows.at(i).trimmed().split(QRegularExpression("\\s+")));
       if (cell_texts.at(i).count() > input_col_count)
         input_col_count = cell_texts.at(i).count();
     }
@@ -577,7 +577,7 @@ void Table::fillSelectedCellsWithRandomNumbers() {
 
   WAIT_CURSOR;
   beginMacro(tr("%1: fill cells with random values").arg(name()));
-  qsrand(static_cast<uint>(QTime::currentTime().msec()));
+  //qsrand(static_cast<uint>(QTime::currentTime().msec()));
   foreach (Column *col_ptr, d_view->selectedColumns()) {
     int col = columnIndex(col_ptr);
     switch (col_ptr->columnMode()) {
@@ -585,7 +585,7 @@ void Table::fillSelectedCellsWithRandomNumbers() {
         QVector<qreal> results(last - first + 1);
         for (int row = first; row <= last; row++)
           if (d_view->isCellSelected(row, col))
-            results[row - first] = double(qrand()) / double(RAND_MAX);
+            results[row - first] = double(QRandomGenerator::global()->generate()) / double(RAND_MAX);
           else
             results[row - first] = col_ptr->valueAt(row);
         col_ptr->replaceValues(first, results);
@@ -595,7 +595,7 @@ void Table::fillSelectedCellsWithRandomNumbers() {
         QStringList results;
         for (int row = first; row <= last; row++)
           if (d_view->isCellSelected(row, col))
-            results << QString::number(double(qrand()) / double(RAND_MAX));
+            results << QString::number(double(QRandomGenerator::global()->generate()) / double(RAND_MAX));
           else
             results << col_ptr->textAt(row);
         col_ptr->replaceTexts(first, results);
@@ -612,10 +612,10 @@ void Table::fillSelectedCellsWithRandomNumbers() {
           if (d_view->isCellSelected(row, col))
             results << QDateTime(
                 earliestDate.addDays(
-                    (static_cast<double>(qrand())) *
+                    (static_cast<double>(QRandomGenerator::global()->generate())) *
                     (static_cast<double>(earliestDate.daysTo(latestDate))) /
                     (static_cast<double>(RAND_MAX))),
-                midnight.addMSecs((static_cast<qint64>(qrand())) * 1000 * 60 *
+                midnight.addMSecs((static_cast<qint64>(QRandomGenerator::global()->generate())) * 1000 * 60 *
                                   60 * 24 / RAND_MAX));
           else
             results << col_ptr->dateTimeAt(row);
@@ -2215,7 +2215,7 @@ void Table::save(QXmlStreamWriter *writer, const bool saveastemplate) const {
 }
 
 bool Table::load(XmlStreamReader *reader) {
-  if (reader->isStartElement() && reader->name() == "table") {
+  if (reader->isStartElement() && reader->name().compare(QString("table"))) {
     setColumnCount(0);
     setRowCount(0);
     setComment("");
@@ -2240,9 +2240,9 @@ bool Table::load(XmlStreamReader *reader) {
       if (reader->isEndElement()) break;
 
       if (reader->isStartElement()) {
-        if (reader->name() == "comment") {
+        if (reader->name().compare(QString("comment"))) {
           if (!readCommentElement(reader)) return false;
-        } else if (reader->name() == "column") {
+        } else if (reader->name().compare(QString("column"))) {
           Column *column = new Column(tr("Column %1").arg(1), AlphaPlot::Text);
           if (!column->load(reader)) {
             setColumnCount(0);
@@ -2251,7 +2251,7 @@ bool Table::load(XmlStreamReader *reader) {
           QList<Column *> columns;
           columns.append(column);
           appendColumns(columns);
-        } else if (reader->name() == "column_width") {
+        } else if (reader->name().compare(QString("column_width"))) {
           if (!readColumnWidthElement(reader)) return false;
         } else  // unknown element
         {
@@ -2293,7 +2293,7 @@ void Table::adjustActionNames() {
 }
 
 bool Table::readColumnWidthElement(XmlStreamReader *reader) {
-  Q_ASSERT(reader->isStartElement() && reader->name() == "column_width");
+  Q_ASSERT(reader->isStartElement() && reader->name().compare(QString("column_width")));
   bool ok;
   int col = reader->readAttributeInt("column", &ok);
   if (!ok) {
diff --git a/alphaplot/src/future/table/future_Table.h b/alphaplot/src/future/table/future_Table.h
index 6d264db48..c26a94810 100644
--- a/alphaplot/src/future/table/future_Table.h
+++ b/alphaplot/src/future/table/future_Table.h
@@ -41,11 +41,12 @@
 #include <QStringList>
 
 #include "globals.h"
+#include "core/column/Column.h"
 
 class TableView;
 class QUndoStack;
 class QMenu;
-class Column;
+//class Column;
 class QPoint;
 class QAction;
 class AbstractColumn;
diff --git a/alphaplot/src/main.cpp b/alphaplot/src/main.cpp
index 5fe91e575..7a357a098 100644
--- a/alphaplot/src/main.cpp
+++ b/alphaplot/src/main.cpp
@@ -21,7 +21,6 @@
 #include <QApplication>
 #include <QSplashScreen>
 #include <QTimer>
-#include <QtMsgHandler>
 #include <typeinfo>
 
 #include "ApplicationWindow.h"
@@ -29,6 +28,8 @@
 #include "globals.h"
 
 #ifdef Q_OS_WIN
+#define WIN32_LEAN_AND_MEAN 
+#define NOMINMAX
 #include <windows.h>
 #endif  // Q_OS_WIN
 
diff --git a/alphaplot/src/scripting/MuParserScript.cpp b/alphaplot/src/scripting/MuParserScript.cpp
index 0ca979cd0..9de67e8d1 100644
--- a/alphaplot/src/scripting/MuParserScript.cpp
+++ b/alphaplot/src/scripting/MuParserScript.cpp
@@ -38,7 +38,7 @@
 #include "Folder.h"
 #include <math.h>
 #include <QtCore/QByteArray>
-#include <QtCore/QRegExp>
+#include <QtCore/QRegularExpression>
 
 /**
  * \class MuParserScript
@@ -194,9 +194,9 @@ MuParserScript::MuParserScript(ScriptingEnv *environment, const QString &code,
   m_parser.SetVarFactory(variableFactory, this);
 
   // redefine characters for operators to include ";"
-  static const char opChars[] =
+  static const wchar_t opChars[] =
       // standard operator chars as defined in mu::Parser::InitCharSets()
-      "abcdefghijklmnopqrstuvwxyz"
+      L"abcdefghijklmnopqrstuvwxyz"
       "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
       "+-*^/?<>=#!$%&|~'_"
       // our additions
@@ -209,14 +209,14 @@ MuParserScript::MuParserScript(ScriptingEnv *environment, const QString &code,
   // statement separation needs lower precedence than everything else;
   // assignment has precedence
   // -1, everything else defined in mu::Parser has non-negative precedence
-  m_parser.DefineOprt(";", statementSeparator, -2);
+  m_parser.DefineOprt(L";", statementSeparator, -2);
 
   // aliases for _pi and _e
-  m_parser.DefineConst("pi", M_PI);
-  m_parser.DefineConst("Pi", M_PI);
-  m_parser.DefineConst("PI", M_PI);
-  m_parser.DefineConst("e", M_E);
-  m_parser.DefineConst("E", M_E);
+  m_parser.DefineConst(L"pi", M_PI);
+  m_parser.DefineConst(L"Pi", M_PI);
+  m_parser.DefineConst(L"PI", M_PI);
+  m_parser.DefineConst(L"e", M_E);
+  m_parser.DefineConst(L"E", M_E);
 
   // tell parser about mathematical functions
   for (const MuParserScripting::mathFunction *i =
@@ -231,13 +231,13 @@ MuParserScript::MuParserScript(ScriptingEnv *environment, const QString &code,
 
   // tell parser about table/matrix access functions
   if (Context && Context->inherits("Table")) {
-    m_parser.DefineFun("column", tableColumnFunction, false);
-    m_parser.DefineFun("column_", tableColumn_Function, false);
-    m_parser.DefineFun("column__", tableColumn__Function, false);
-    m_parser.DefineFun("cell", tableCellFunction);
-    m_parser.DefineFun("cell_", tableCell_Function);
+    m_parser.DefineFun(L"column", tableColumnFunction, false);
+    m_parser.DefineFun(L"column_", tableColumn_Function, false);
+    m_parser.DefineFun(L"column__", tableColumn__Function, false);
+    m_parser.DefineFun(L"cell", tableCellFunction);
+    m_parser.DefineFun(L"cell_", tableCell_Function);
   } else if (Context && Context->inherits("Matrix"))
-    m_parser.DefineFun("cell", matrixCellFunction);
+    m_parser.DefineFun(L"cell", matrixCellFunction);
 }
 
 /**
@@ -249,9 +249,9 @@ MuParserScript::MuParserScript(ScriptingEnv *environment, const QString &code,
  * memory location
  * is returned to muParser. New variables are initialized with NaN.
  */
-double *MuParserScript::variableFactory(const char *name, void *self) {
+double *MuParserScript::variableFactory(const wchar_t *name, void *self) {
   MuParserScript *me = static_cast<MuParserScript *>(self);
-  return me->m_variables.insert(QByteArray(name), NAN).operator->();
+  return me->m_variables.insert(QByteArray(QString::fromWCharArray(name).toUtf8()), NAN).operator->();
 }
 
 /**
@@ -262,8 +262,8 @@ double *MuParserScript::variableFactory(const char *name, void *self) {
  *
  * \sa m_variables
  */
-bool MuParserScript::setDouble(double value, const char *name) {
-  QByteArray baName(name);
+bool MuParserScript::setDouble(double value, const wchar_t *name) {
+  QByteArray baName(QString::fromWCharArray(name).toUtf8());
   QMap<QByteArray, double>::iterator entry = m_variables.find(baName);
   if (entry == m_variables.end()) {
     // variable is not known yet
@@ -272,7 +272,7 @@ bool MuParserScript::setDouble(double value, const char *name) {
       m_parser.DefineVar(name, entry.operator->());
     } catch (mu::ParserError &e) {
       m_variables.erase(entry);
-      emit_error(QString::fromLocal8Bit(e.GetMsg().c_str()), 0);
+      emit_error(QString::fromWCharArray(e.GetMsg().c_str(),e.GetMsg().length()), 0);
       return false;
     }
   } else
@@ -308,9 +308,9 @@ double MuParserScript::statementSeparator(double a, double b) {
  *
  * \sa tableCellFunction()
  */
-double MuParserScript::tableColumnFunction(const char *columnPath) {
+double MuParserScript::tableColumnFunction(const wchar_t *columnPath) {
   Column *column =
-      s_currentInstance->resolveColumnPath(QString::fromUtf8(columnPath));
+      s_currentInstance->resolveColumnPath(QString::fromWCharArray(columnPath));
   if (!column) return NAN;  // failsafe, shouldn't happen
   int row = qRound(s_currentInstance->m_variables["i"]) - 1;
   if (column->isInvalid(row)) throw new EmptySourceError();
@@ -338,11 +338,11 @@ double MuParserScript::tableColumn_Function(double columnIndex) {
     // improving the error message would break translations
     // TODO: change col() to column() for next minor release
     throw mu::Parser::exception_type(
-        qPrintable(tr("col() works only on tables!")));
+        qUtf16Printable(tr("col() works only on tables!")));
   Column *column = thisTable->d_future_table->column(qRound(columnIndex) - 1);
   if (!column)
     throw mu::Parser::exception_type(
-        qPrintable(tr("There's no column %1 in table %2!")
+        qUtf16Printable(tr("There's no column %1 in table %2!")
                        .arg(qRound(columnIndex))
                        .arg(thisTable->objectName())));
   int row = qRound(s_currentInstance->m_variables["i"]) - 1;
@@ -371,23 +371,23 @@ double MuParserScript::tableColumn_Function(double columnIndex) {
  * tableCellFunction() for how
  * to get a specific cell with the column specified by name.
  */
-double MuParserScript::tableColumn__Function(const char *tableName,
+double MuParserScript::tableColumn__Function(const wchar_t *tableName,
                                              double columnIndex) {
   Table *thisTable = qobject_cast<Table *>(s_currentInstance->Context);
   if (!thisTable)
     // improving the error message would break translations
     // TODO: change tablecol() to column() for next minor release
     throw mu::Parser::exception_type(
-        qPrintable(tr("tablecol() works only on tables!")));
+        qUtf16Printable(tr("tablecol() works only on tables!")));
   Table *targetTable =
-      thisTable->folder()->rootFolder()->table(tableName, true);
+      thisTable->folder()->rootFolder()->table(QString::fromWCharArray(tableName), true);
   if (!targetTable)
     throw mu::Parser::exception_type(
-        qPrintable(tr("Couldn't find a table named %1.").arg(tableName)));
+        qUtf16Printable(tr("Couldn't find a table named %1.").arg(tableName)));
   Column *column = targetTable->d_future_table->column(qRound(columnIndex) - 1);
   if (!column)
     throw mu::Parser::exception_type(
-        qPrintable(tr("There's no column %1 in table %2!")
+        qUtf16Printable(tr("There's no column %1 in table %2!")
                        .arg(qRound(columnIndex))
                        .arg(tableName)));
   int row = qRound(s_currentInstance->m_variables["i"]) - 1;
@@ -404,10 +404,10 @@ double MuParserScript::tableColumn__Function(const char *tableName,
  *
  * \sa tableColumnFunction()
  */
-double MuParserScript::tableCellFunction(const char *columnPath,
+double MuParserScript::tableCellFunction(const wchar_t *columnPath,
                                          double rowIndex) {
   Column *column =
-      s_currentInstance->resolveColumnPath(QString::fromUtf8(columnPath));
+      s_currentInstance->resolveColumnPath(QString::fromWCharArray(columnPath));
   if (!column) return NAN;  // failsafe, shouldn't happen
   int row = qRound(rowIndex) - 1;
   if (column->isInvalid(row)) throw new EmptySourceError();
@@ -430,11 +430,11 @@ double MuParserScript::tableCell_Function(double columnIndex, double rowIndex) {
   Table *thisTable = qobject_cast<Table *>(s_currentInstance->Context);
   if (!thisTable)
     throw mu::Parser::exception_type(
-        qPrintable(tr("cell() works only on tables and matrices!")));
+        qUtf16Printable(tr("cell() works only on tables and matrices!")));
   Column *column = thisTable->d_future_table->column(qRound(columnIndex) - 1);
   if (!column)
     throw mu::Parser::exception_type(
-        qPrintable(tr("There's no column %1 in table %2!")
+        qUtf16Printable(tr("There's no column %1 in table %2!")
                        .arg(qRound(columnIndex))
                        .arg(thisTable->objectName())));
   int row = qRound(rowIndex) - 1;
@@ -452,17 +452,17 @@ double MuParserScript::matrixCellFunction(double rowIndex, double columnIndex) {
   Matrix *thisMatrix = qobject_cast<Matrix *>(s_currentInstance->Context);
   if (!thisMatrix)
     throw mu::Parser::exception_type(
-        qPrintable(tr("cell() works only on tables and matrices!")));
+        qUtf16Printable(tr("cell() works only on tables and matrices!")));
   int row = qRound(rowIndex) - 1;
   int column = qRound(columnIndex) - 1;
   if (row < 0 || row >= thisMatrix->numRows())
     throw mu::Parser::exception_type(
-        qPrintable(tr("There's no row %1 in matrix %2!")
+        qUtf16Printable(tr("There's no row %1 in matrix %2!")
                        .arg(qRound(rowIndex))
                        .arg(thisMatrix->objectName())));
   if (column < 0 || column >= thisMatrix->numCols())
     throw mu::Parser::exception_type(
-        qPrintable(tr("There's no column %1 in matrix %2!")
+        qUtf16Printable(tr("There's no column %1 in matrix %2!")
                        .arg(qRound(columnIndex))
                        .arg(thisMatrix->objectName())));
   return thisMatrix->cell(row, column);
@@ -491,7 +491,7 @@ Column *MuParserScript::resolveColumnPath(const QString &path) {
   // Split path into components.
   // While escape handling would be possible using a regular expression, it
   // would require
-  // lookbehind assertions, which are currently not supported by QRegExp. Thus,
+  // lookbehind assertions, which are currently not supported by QRegularExpression. Thus,
   // we can't simply
   // use QString::split() and have to explicitly loop over the characters in
   // path.
@@ -516,13 +516,13 @@ Column *MuParserScript::resolveColumnPath(const QString &path) {
     // only column name specified, read from this table
     table = qobject_cast<Table *>(Context);
     if (!table)
-      throw mu::Parser::exception_type(qPrintable(tr(
+      throw mu::Parser::exception_type(qUtf16Printable(tr(
           "Accessing table values is not (yet) supported in this context.")));
   } else {
     // look up the table containing the column
     MyWidget *myContext = qobject_cast<MyWidget *>(Context);
     if (!myContext)
-      throw mu::Parser::exception_type(qPrintable(tr(
+      throw mu::Parser::exception_type(qUtf16Printable(tr(
           "Accessing table values is not (yet) supported in this context.")));
     QString tableName = pathComponents.takeLast();
     if (pathComponents.isEmpty())
@@ -541,7 +541,7 @@ Column *MuParserScript::resolveColumnPath(const QString &path) {
       else
         // invalid path
         throw mu::Parser::exception_type(
-            qPrintable(tr("Couldn't find a table named %1.")
+            qUtf16Printable(tr("Couldn't find a table named %1.")
                            .arg(pathComponents.join("/") + "/" + tableName)));
       pathComponents.removeFirst();
       foreach (QString f, pathComponents) {
@@ -551,14 +551,14 @@ Column *MuParserScript::resolveColumnPath(const QString &path) {
           folder = folder->findSubfolder(f);
         if (!folder)
           throw mu::Parser::exception_type(
-              qPrintable(tr("Couldn't find a table named %1.")
+              qUtf16Printable(tr("Couldn't find a table named %1.")
                              .arg(pathComponents.join("/") + "/" + tableName)));
       }
       table = folder->table(tableName);
     }
     if (!table)
       throw mu::Parser::exception_type(
-          qPrintable(tr("Couldn't find a table named %1.")
+          qUtf16Printable(tr("Couldn't find a table named %1.")
                          .arg(pathComponents.join("/") + "/" + tableName)));
   }
 
@@ -566,7 +566,7 @@ Column *MuParserScript::resolveColumnPath(const QString &path) {
   result = table->d_future_table->column(columnName, false);
   if (!result)
     throw mu::Parser::exception_type(
-        qPrintable(tr("There's no column named %1 in table %2!")
+        qUtf16Printable(tr("There's no column named %1 in table %2!")
                        .arg(columnName)
                        .arg(table->d_future_table->path())));
 
@@ -594,9 +594,10 @@ Column *MuParserScript::resolveColumnPath(const QString &path) {
  * argument of the new column() and cell() functions (see resolveColumnPath()).
  */
 bool MuParserScript::translateLegacyFunctions(QString &input) {
-  QRegExp legacyFunction("(\\W||^)(col|tablecol|cell)\\s*\\(");
+  QRegularExpression legacyFunction("(\\W||^)(col|tablecol|cell)\\s*\\(");
 
-  int functionStart = legacyFunction.indexIn(input, 0);
+  auto match = legacyFunction.match(input);
+  int functionStart = match.capturedStart();
   while (functionStart != -1) {
     QStringList arguments;
     int functionEnd = functionStart;  // initialization is a failsafe
@@ -604,7 +605,7 @@ bool MuParserScript::translateLegacyFunctions(QString &input) {
 
     // parse arguments of function
     QString currentArgument;
-    for (int i = functionStart + legacyFunction.matchedLength(),
+    for (int i = functionStart + match.capturedLength(),
              parenthesisLevel = 1;
          parenthesisLevel > 0 && i < input.size(); i++) {
       switch (input.at(i).toLatin1()) {
@@ -649,7 +650,7 @@ bool MuParserScript::translateLegacyFunctions(QString &input) {
 
     // select replacement function call
     Table *table = qobject_cast<Table *>(Context);
-    if (legacyFunction.cap(2) == "col") {
+    if (match.captured(2) == "col") {
       QString columnArgument;
       bool numericColumn = false;
       if (arguments.at(0).startsWith("\"")) {
@@ -680,7 +681,7 @@ bool MuParserScript::translateLegacyFunctions(QString &input) {
       } else
         replacement = QString("column") + (numericColumn ? "_" : "") + "(" +
                       columnArgument + ")";
-    } else if (legacyFunction.cap(2) == "tablecol") {
+    } else if (match.captured(2) == "tablecol") {
       // assert number of arguments == 2
       if (arguments.size() != 2) {
         emit_error(tr("tablecol: wrong number of arguments (need 2, got %1)")
@@ -737,7 +738,7 @@ bool MuParserScript::translateLegacyFunctions(QString &input) {
     }
 
     // do replacement
-    if (legacyFunction.cap(1).isEmpty())
+    if (match.captured(1).isEmpty())
       // matched with ^, not \W (lookbehind assertion would be darn handy...)
       input.replace(functionStart, functionEnd - functionStart + 1,
                     replacement);
@@ -746,8 +747,9 @@ bool MuParserScript::translateLegacyFunctions(QString &input) {
       input.replace(functionStart + 1, functionEnd - functionStart,
                     replacement);
     // search for next match, starting at the end of the replaced text
+    match = legacyFunction.match(input, functionStart + replacement.length());
     functionStart =
-        legacyFunction.indexIn(input, functionStart + replacement.length());
+        match.capturedStart();
   }  // while (functionStart != -1)
   return true;
 }
@@ -788,16 +790,16 @@ bool MuParserScript::compile(bool asFunction) {
     intermediate.remove(commentStart, intermediate.size() - commentStart);
 
   // simplify statement separators
-  intermediate.replace(QRegExp("([;\\n]\\s*)+"), ", ");
+  intermediate.replace(QRegularExpression("([;\\n]\\s*)+"), ", ");
 
   // recursively translate legacy functions col(), tablecol() and cell()
   if (Context && Context->inherits("Table"))
     if (!translateLegacyFunctions(intermediate)) return false;
 
   try {
-    m_parser.SetExpr(qPrintable(intermediate));
+    m_parser.SetExpr(qUtf16Printable(intermediate));
   } catch (mu::ParserError &e) {
-    emit_error(QString::fromLocal8Bit(e.GetMsg().c_str()), 0);
+    emit_error(QString::fromWCharArray(e.GetMsg().c_str(),e.GetMsg().length()), 0);
     return false;
   }
 
@@ -815,7 +817,7 @@ QVariant MuParserScript::eval() {
     // formula tried to access a table cell marked as invalid
     return "";
   } catch (mu::ParserError &e) {
-    emit_error(QString::fromLocal8Bit(e.GetMsg().c_str()), 0);
+    emit_error(QString::fromWCharArray(e.GetMsg().c_str(),e.GetMsg().length()), 0);
     return QVariant();
   }
 }
diff --git a/alphaplot/src/scripting/MuParserScript.h b/alphaplot/src/scripting/MuParserScript.h
index fbcd756bd..2fdc3f72a 100644
--- a/alphaplot/src/scripting/MuParserScript.h
+++ b/alphaplot/src/scripting/MuParserScript.h
@@ -32,7 +32,7 @@
 
 #include "Script.h"
 #include <QtCore/QMap>
-#include <../../3rdparty/muparser/muParser.h>
+#include <muParser.h>
 
 class QByteArray;
 class Column;
@@ -53,19 +53,19 @@ class MuParserScript : public Script {
     Q_UNUSED(name);
     return false;
   }
-  bool setDouble(double value, const char *name);
-  bool setInt(int value, const char *name) {
+  bool setDouble(double value, const wchar_t *name);
+  bool setInt(int value, const wchar_t *name) {
     return setDouble(static_cast<double>(value), name);
   }
 
  private:
-  static double *variableFactory(const char *name, void *self);
+  static double *variableFactory(const wchar_t *name, void *self);
   static double statementSeparator(double a, double b);
-  static double tableColumnFunction(const char *columnPath);
+  static double tableColumnFunction(const wchar_t *columnPath);
   static double tableColumn_Function(double columnIndex);
-  static double tableColumn__Function(const char *tableName,
+  static double tableColumn__Function(const wchar_t *tableName,
                                       double columnIndex);
-  static double tableCellFunction(const char *columnPath, double rowIndex);
+  static double tableCellFunction(const wchar_t *columnPath, double rowIndex);
   static double tableCell_Function(double columnIndex, double rowIndex);
   static double matrixCellFunction(double rowIndex, double columnIndex);
 
diff --git a/alphaplot/src/scripting/MuParserScripting.cpp b/alphaplot/src/scripting/MuParserScripting.cpp
index 68268ba36..ab25d97d0 100644
--- a/alphaplot/src/scripting/MuParserScripting.cpp
+++ b/alphaplot/src/scripting/MuParserScripting.cpp
@@ -45,117 +45,117 @@ const char *MuParserScripting::langName = "muParser";
 // implemented
 // in mu::Parser
 const MuParserScripting::mathFunction MuParserScripting::math_functions[] = {
-    {"abs", 1, NULL, NULL, NULL, QT_TR_NOOP("abs(x):\n Absolute value of x.")},
-    {"acos", 1, NULL, NULL, NULL,
+    {L"abs", 1, NULL, NULL, NULL, QT_TR_NOOP("abs(x):\n Absolute value of x.")},
+    {L"acos", 1, NULL, NULL, NULL,
      QT_TR_NOOP("acos(x):\n Inverse cos function.")},
-    {"acosh", 1, NULL, NULL, NULL,
+    {L"acosh", 1, NULL, NULL, NULL,
      QT_TR_NOOP("acosh(x):\n Hyperbolic inverse cos function.")},
-    {"asin", 1, NULL, NULL, NULL,
+    {L"asin", 1, NULL, NULL, NULL,
      QT_TR_NOOP("asin(x):\n Inverse sin function.")},
-    {"asinh", 1, NULL, NULL, NULL,
+    {L"asinh", 1, NULL, NULL, NULL,
      QT_TR_NOOP("asinh(x):\n Hyperbolic inverse sin function.")},
-    {"atan", 1, NULL, NULL, NULL,
+    {L"atan", 1, NULL, NULL, NULL,
      QT_TR_NOOP("atan(x):\n Inverse tan function.")},
-    {"atanh", 1, NULL, NULL, NULL,
+    {L"atanh", 1, NULL, NULL, NULL,
      QT_TR_NOOP("atanh(x):\n  Hyperbolic inverse tan function.")},
-    {"avg", -1, NULL, NULL, NULL,
+    {L"avg", -1, NULL, NULL, NULL,
      QT_TR_NOOP("avg(x,y,...):\n  Mean value of all arguments.")},
-    {"bessel_j0", 1, bessel_J0, NULL, NULL,
+    {L"bessel_j0", 1, bessel_J0, NULL, NULL,
      QT_TR_NOOP("bessel_j0(x):\n  Regular cylindrical Bessel function of "
                 "zeroth order, J_0(x).")},
-    {"bessel_j1", 1, bessel_J1, NULL, NULL,
+    {L"bessel_j1", 1, bessel_J1, NULL, NULL,
      QT_TR_NOOP("bessel_j1(x):\n  Regular cylindrical Bessel function of first "
                 "order, J_1(x).")},
-    {"bessel_jn", 2, NULL, bessel_Jn, NULL,
+    {L"bessel_jn", 2, NULL, bessel_Jn, NULL,
      QT_TR_NOOP("bessel_jn(double x, int n):\n Regular cylindrical Bessel "
                 "function of order n, J_n(x).")},
-    {"bessel_jn_zero", 2, NULL, bessel_Jn_zero, NULL,
+    {L"bessel_jn_zero", 2, NULL, bessel_Jn_zero, NULL,
      QT_TR_NOOP("bessel_jn_zero(double n, unsigned int s):\n s-th positive "
                 "zero x_s of regular cylindrical Bessel function of order n, "
                 "J_n(x_s)=0")},
-    {"bessel_y0", 1, bessel_Y0, NULL, NULL,
+    {L"bessel_y0", 1, bessel_Y0, NULL, NULL,
      QT_TR_NOOP("bessel_y0(x):\n Irregular cylindrical Bessel function of "
                 "zeroth order, Y_0(x), for x>0.")},
-    {"bessel_y1", 1, bessel_Y1, NULL, NULL,
+    {L"bessel_y1", 1, bessel_Y1, NULL, NULL,
      QT_TR_NOOP("bessel_y1(x):\n Irregular cylindrical Bessel function of "
                 "first order, Y_1(x), for x>0.")},
-    {"bessel_yn", 2, NULL, bessel_Yn, NULL,
+    {L"bessel_yn", 2, NULL, bessel_Yn, NULL,
      QT_TR_NOOP("bessel_yn(double x, int n):\n Irregular cylindrical Bessel "
                 "function of order n, Y_n(x), for x>0.")},
-    {"beta", 2, NULL, beta, NULL,
+    {L"beta", 2, NULL, beta, NULL,
      QT_TR_NOOP("beta(a,b):\n Computes the Beta Function, B(a,b) = "
                 "Gamma(a)*Gamma(b)/Gamma(a+b) for a > 0, b > 0.")},
-    {"ceil", 1, ceil, NULL, NULL,
+    {L"ceil", 1, ceil, NULL, NULL,
      QT_TR_NOOP("ceil(x):\n Round to the next larger integer,\n smallest "
                 "integer larger or equal to x.")},
-    {"cos", 1, NULL, NULL, NULL, QT_TR_NOOP("cos(x):\n Calculate cosine.")},
-    {"cosh", 1, NULL, NULL, NULL,
+    {L"cos", 1, NULL, NULL, NULL, QT_TR_NOOP("cos(x):\n Calculate cosine.")},
+    {L"cosh", 1, NULL, NULL, NULL,
      QT_TR_NOOP("cosh(x):\n Hyperbolic cos function.")},
-    {"erf", 1, erf, NULL, NULL, QT_TR_NOOP("erf(x):\n  The error function.")},
-    {"erfc", 1, erfc, NULL, NULL,
+    {L"erf", 1, erf, NULL, NULL, QT_TR_NOOP("erf(x):\n  The error function.")},
+    {L"erfc", 1, erfc, NULL, NULL,
      QT_TR_NOOP(
          "erfc(x):\n Complementary error function erfc(x) = 1 - erf(x).")},
-    {"erfz", 1, erf_Z, NULL, NULL,
+    {L"erfz", 1, erf_Z, NULL, NULL,
      QT_TR_NOOP("erfz(x):\n The Gaussian probability density function Z(x).")},
-    {"erfq", 1, erf_Q, NULL, NULL,
+    {L"erfq", 1, erf_Q, NULL, NULL,
      QT_TR_NOOP("erfq(x):\n The upper tail of the Gaussian probability "
                 "function Q(x).")},
-    {"exp", 1, NULL, NULL, NULL,
+    {L"exp", 1, NULL, NULL, NULL,
      QT_TR_NOOP("exp(x):\n Exponential function: e raised to the power of x.")},
-    {"floor", 1, floor, NULL, NULL,
+    {L"floor", 1, floor, NULL, NULL,
      QT_TR_NOOP("floor(x):\n Round to the next smaller integer,\n largest "
                 "integer smaller or equal to x.")},
-    {"gamma", 1, gamma, NULL, NULL,
+    {L"gamma", 1, gamma, NULL, NULL,
      QT_TR_NOOP("gamma(x):\n Computes the Gamma function, subject to x not "
                 "being a negative integer.")},
-    {"gammaln", 1, lngamma, NULL, NULL,
+    {L"gammaln", 1, lngamma, NULL, NULL,
      QT_TR_NOOP("gammaln(x):\n Computes the logarithm of the Gamma function, "
                 "subject to x not a being negative integer. For x<0, "
                 "log(|Gamma(x)|) is returned.")},
-    {"hazard", 1, hazard, NULL, NULL,
+    {L"hazard", 1, hazard, NULL, NULL,
      QT_TR_NOOP("hazard(x):\n Computes the hazard function for the normal "
                 "distribution h(x) = erfz(x)/erfq(x).")},
-    {"if", 3, NULL, NULL, NULL,
+    {L"if", 3, NULL, NULL, NULL,
      QT_TR_NOOP("if(e1, e2, e3):\n if e1 then e2 else e3.")},
-    {"ln", 1, NULL, NULL, NULL,
+    {L"ln", 1, NULL, NULL, NULL,
      QT_TR_NOOP("ln(x):\n Calculate natural logarithm log_e.")},
-    {"log", 1, NULL, NULL, NULL,
+    {L"log", 1, NULL, NULL, NULL,
      QT_TR_NOOP("log(x):\n Calculate decimal logarithm log_10.")},
-    {"log10", 1, NULL, NULL, NULL,
+    {L"log10", 1, NULL, NULL, NULL,
      QT_TR_NOOP("log10(x):\n Calculate decimal logarithm log_10.")},
-    {"log2", 1, NULL, NULL, NULL,
+    {L"log2", 1, NULL, NULL, NULL,
      QT_TR_NOOP("log2(x):\n Calculate binary logarithm log_2.")},
-    {"min", -1, NULL, NULL, NULL,
+    {L"min", -1, NULL, NULL, NULL,
      QT_TR_NOOP("min(x,y,...):\n Calculate minimum of all arguments.")},
-    {"max", -1, NULL, NULL, NULL,
+    {L"max", -1, NULL, NULL, NULL,
      QT_TR_NOOP("max(x,y,...):\n Calculate maximum of all arguments.")},
-    {"mod", 2, NULL, mod, NULL,
+    {L"mod", 2, NULL, mod, NULL,
      QT_TR_NOOP(
          "mod(x,y):\n Calculate rest of integer division x/y,\n x modulo y.")},
-    {"pow", 2, NULL, mypow, NULL,
+    {L"pow", 2, NULL, mypow, NULL,
      QT_TR_NOOP("pow(x,y):\n Raise x to the power of y, x^y.")},
-    {"rint", 1, NULL, NULL, NULL,
+    {L"rint", 1, NULL, NULL, NULL,
      QT_TR_NOOP("rint(x):\n Round to nearest integer.")},
-    {"sign", 1, NULL, NULL, NULL,
+    {L"sign", 1, NULL, NULL, NULL,
      QT_TR_NOOP("sign(x):\n Sign function: -1 if x<0; 1 if x>0.")},
-    {"sin", 1, NULL, NULL, NULL, QT_TR_NOOP("sin(x):\n Calculate sine.")},
-    {"sinh", 1, NULL, NULL, NULL,
+    {L"sin", 1, NULL, NULL, NULL, QT_TR_NOOP("sin(x):\n Calculate sine.")},
+    {L"sinh", 1, NULL, NULL, NULL,
      QT_TR_NOOP("sinh(x):\n Hyperbolic sin function.")},
-    {"sqrt", 1, NULL, NULL, NULL,
+    {L"sqrt", 1, NULL, NULL, NULL,
      QT_TR_NOOP("sqrt(x):\n Square root function.")},
-    {"sum", -1, NULL, NULL, NULL,
+    {L"sum", -1, NULL, NULL, NULL,
      QT_TR_NOOP("sum(x,y,...):\n Calculate sum of all arguments.")},
-    {"tan", 1, NULL, NULL, NULL,
+    {L"tan", 1, NULL, NULL, NULL,
      QT_TR_NOOP("tan(x):\n Calculate tangent function.")},
-    {"tanh", 1, NULL, NULL, NULL,
+    {L"tanh", 1, NULL, NULL, NULL,
      QT_TR_NOOP("tanh(x):\n Hyperbolic tan function.")},
-    {"w0", 1, lambert_W0, NULL, NULL,
+    {L"w0", 1, lambert_W0, NULL, NULL,
      QT_TR_NOOP("w0(x):\n Compute the principal branch of Lambert's W "
                 "function, W_0(x).\n W is defined as a solution to the "
                 "equation W(x)*exp(W(x))=x.\n For x<0, there are two "
                 "real-valued branches; this function computes the one where "
                 "W>-1 for x<0 (also see wm1(x)).")},
-    {"wm1", 1, lambert_Wm1, NULL, NULL,
+    {L"wm1", 1, lambert_Wm1, NULL, NULL,
      QT_TR_NOOP("wm1(x):\n Compute the secondary branch of Lambert's W "
                 "function, W_{-1}(x).\n W is defined as a solution to the "
                 "equation W(x)*exp(W(x))=x.\n For x<0, there are two "
@@ -165,12 +165,12 @@ const MuParserScripting::mathFunction MuParserScripting::math_functions[] = {
 
 const QStringList MuParserScripting::mathFunctions() const {
   QStringList l;
-  for (const mathFunction *i = math_functions; i->name; i++) l << i->name;
+  for (const mathFunction *i = math_functions; i->name; i++) l << QString::fromWCharArray(i->name);
   return l;
 }
 
 const QString MuParserScripting::mathFunctionDoc(const QString &name) const {
   for (const mathFunction *i = math_functions; i->name; i++)
-    if (name == i->name) return i->description;
-  return QString::null;
+    if (name == QString::fromWCharArray(i->name)) return i->description;
+  return QString();
 }
diff --git a/alphaplot/src/scripting/MuParserScripting.h b/alphaplot/src/scripting/MuParserScripting.h
index 56f8a8ae6..b5c3bce29 100644
--- a/alphaplot/src/scripting/MuParserScripting.h
+++ b/alphaplot/src/scripting/MuParserScripting.h
@@ -37,7 +37,7 @@
 #include "Script.h"
 #include "MuParserScript.h"
 
-#include <../../3rdparty/muparser/muParser.h>
+#include <muParser.h>
 #include "math.h"
 #include <gsl/gsl_sf.h>
 #include <gsl/gsl_errno.h>
@@ -72,7 +72,7 @@ class MuParserScripting : public ScriptingEnv {
   const QString mathFunctionDoc(const QString &name) const;
 
   struct mathFunction {
-    const char *name;
+    const wchar_t *name;
     int numargs;
     double (*fun1)(double);
     double (*fun2)(double, double);
diff --git a/alphaplot/src/scripting/MyParser.cpp b/alphaplot/src/scripting/MyParser.cpp
index 4a98bd8da..7ac793df7 100644
--- a/alphaplot/src/scripting/MyParser.cpp
+++ b/alphaplot/src/scripting/MyParser.cpp
@@ -28,25 +28,27 @@
  ***************************************************************************/
 #include "MyParser.h"
 
+#include <cmath>
+
 MyParser::MyParser() : Parser() {
-  DefineConst("pi", M_PI);
-  DefineConst("Pi", M_PI);
-  DefineConst("PI", M_PI);
+  DefineConst(L"pi", M_PI);
+  DefineConst(L"Pi", M_PI);
+  DefineConst(L"PI", M_PI);
 
-  DefineFun("bessel_j0", bessel_J0);
-  DefineFun("bessel_j1", bessel_J1);
-  DefineFun("bessel_jn", bessel_Jn);
-  DefineFun("bessel_y0", bessel_Y0);
-  DefineFun("bessel_y1", bessel_Y1);
-  DefineFun("bessel_yn", bessel_Yn);
-  DefineFun("beta", beta);
-  DefineFun("erf", erf);
-  DefineFun("erfc", erfc);
-  DefineFun("erfz", erfz);
-  DefineFun("erfq", erfq);
-  DefineFun("gamma", gamma);
-  DefineFun("gammaln", gammaln);
-  DefineFun("hazard", hazard);
+  DefineFun(L"bessel_j0", &MyParser::bessel_J0);
+  DefineFun(L"bessel_j1", &MyParser::bessel_J1);
+  DefineFun(L"bessel_jn", &MyParser::bessel_Jn);
+  DefineFun(L"bessel_y0", &MyParser::bessel_Y0);
+  DefineFun(L"bessel_y1", &MyParser::bessel_Y1);
+  DefineFun(L"bessel_yn", &MyParser::bessel_Yn);
+  DefineFun(L"beta", &MyParser::beta);
+  DefineFun(L"erf", &MyParser::erf);
+  DefineFun(L"erfc", &MyParser::erfc);
+  DefineFun(L"erfz", &MyParser::erfz);
+  DefineFun(L"erfq", &MyParser::erfq);
+  DefineFun(L"gamma", &MyParser::gamma);
+  DefineFun(L"gammaln", &MyParser::gammaln);
+  DefineFun(L"hazard", &MyParser::hazard);
 }
 
 QStringList MyParser::functionsList() {
diff --git a/alphaplot/src/scripting/MyParser.h b/alphaplot/src/scripting/MyParser.h
index 733844ccc..70e3272b5 100644
--- a/alphaplot/src/scripting/MyParser.h
+++ b/alphaplot/src/scripting/MyParser.h
@@ -29,7 +29,9 @@
 #ifndef MYPARSER_H
 #define MYPARSER_H
 
-#include <../3rdparty/muparser/muParser.h>
+#define _USE_MATH_DEFINES
+
+#include <muParser.h>
 #include <gsl/gsl_math.h>
 #include <gsl/gsl_sf.h>
 
diff --git a/alphaplot/src/scripting/ScriptEdit.cpp b/alphaplot/src/scripting/ScriptEdit.cpp
index 02be62037..f3ffeb519 100644
--- a/alphaplot/src/scripting/ScriptEdit.cpp
+++ b/alphaplot/src/scripting/ScriptEdit.cpp
@@ -41,7 +41,7 @@
 #include <QMessageBox>
 #include <QPrintDialog>
 #include <QPrinter>
-#include <QTextCodec>
+#include <QStringConverter>
 #include <QTextStream>
 
 ScriptEdit::ScriptEdit(ScriptingEnv *env, QWidget *parent, QString name)
@@ -325,15 +325,15 @@ QString ScriptEdit::importASCII(const QString &filename) {
                                      objectName(), filter, 0);
   else
     f = filename;
-  if (f.isEmpty()) return QString::null;
+  if (f.isEmpty()) return QString();
   QFile file(f);
   if (!file.open(QIODevice::ReadOnly)) {
     QMessageBox::critical(this, tr("Error Opening File"),
                           tr("Could not open file \"%1\" for reading.").arg(f));
-    return QString::null;
+    return QString();
   }
   QTextStream s(&file);
-  s.setCodec(QTextCodec::codecForName("UTF-8"));
+  s.setEncoding(*QStringConverter::encodingForName("UTF-8"));
   while (!s.atEnd()) insertPlainText(s.readLine() + "\n");
   file.close();
   return f;
@@ -370,11 +370,11 @@ QString ScriptEdit::exportASCII(const QString &filename) {
           tr("Could not write to file: <br><h4> %1 </h4><p>Please verify that "
              "you have the right to write to this location!")
               .arg(fn));
-      return QString::null;
+      return QString();
     }
 
     QTextStream t(&f);
-    t.setCodec(QTextCodec::codecForName("UTF-8"));
+    t.setEncoding(*QStringConverter::encodingForName("UTF-8"));
     t << toPlainText();
     f.close();
   }
diff --git a/alphaplot/src/scripting/SyntaxHighlighter.cpp b/alphaplot/src/scripting/SyntaxHighlighter.cpp
index 38c2871c0..2d59655f6 100644
--- a/alphaplot/src/scripting/SyntaxHighlighter.cpp
+++ b/alphaplot/src/scripting/SyntaxHighlighter.cpp
@@ -69,29 +69,29 @@ SyntaxHighlighter::SyntaxHighlighter(QTextDocument *parent)
                   << "super";
 
   foreach (const QString &pattern, keywords) {
-    rule.pattern = QRegExp("\\b" + pattern + "\\b");
+    rule.pattern = QRegularExpression("\\b" + pattern + "\\b");
     rule.format = keywordFormat;
     highlightingRules.append(rule);
   }
 
   classFormat.setForeground(Qt::darkMagenta);
-  rule.pattern = QRegExp("\\bMath\\b");
+  rule.pattern = QRegularExpression("\\bMath\\b");
   rule.format = classFormat;
   highlightingRules.append(rule);
 
   QTextCharFormat trueFalseFormat;
   trueFalseFormat.setForeground(QColor(174, 129, 255));
-  rule.pattern = QRegExp("\\b(true|false|this)\\b");
+  rule.pattern = QRegularExpression("\\b(true|false|this)\\b");
   rule.format = trueFalseFormat;
   highlightingRules.append(rule);
 
   quotationFormat.setForeground(Qt::darkGreen);
-  rule.pattern = QRegExp("\".*\"");
+  rule.pattern = QRegularExpression("\".*\"");
   rule.format = quotationFormat;
   highlightingRules.append(rule);
 
   singleQuotationFormat.setForeground(Qt::darkGreen);
-  rule.pattern = QRegExp("'.*'");
+  rule.pattern = QRegularExpression("'.*'");
   rule.format = singleQuotationFormat;
   highlightingRules.append(rule);
 
@@ -106,51 +106,56 @@ SyntaxHighlighter::SyntaxHighlighter(QTextDocument *parent)
         : keywordExcludePatterns.append(QString("|%1").arg(pattern));
   }
 
-  rule.pattern = QRegExp(
+  rule.pattern = QRegularExpression(
       QString("\\b(?!(%1)+[\\s]*[/]?(?=\\())([A-Za-z0-9_]+[\\s]*[/]?(?=\\())")
           .arg(keywordExcludePatterns));
   rule.format = functionFormat;
   highlightingRules.append(rule);
 
   singleLineCommentFormat.setForeground(QColor(128, 128, 128));
-  rule.pattern = QRegExp("//[^\n]*");
+  rule.pattern = QRegularExpression("//[^\n]*");
   rule.format = singleLineCommentFormat;
   highlightingRules.append(rule);
 
   multiLineCommentFormat.setForeground(QColor(128, 128, 128));
 
-  commentStartExpression = QRegExp("/\\*");
-  commentEndExpression = QRegExp("\\*/");
+  commentStartExpression = QRegularExpression("/\\*");
+  commentEndExpression = QRegularExpression("\\*/");
 }
 
 void SyntaxHighlighter::highlightBlock(const QString &text) {
   foreach (const HighlightingRule &rule, highlightingRules) {
-    QRegExp expression(rule.pattern);
-    int index = expression.indexIn(text);
+    QRegularExpression expression(rule.pattern);
+    auto match = expression.match(text);
+    int index = match.capturedStart();
     while (index >= 0) {
-      int length = expression.matchedLength();
+      int length = match.capturedLength();
       setFormat(index, length, rule.format);
-      index = expression.indexIn(text, index + length);
+      match = expression.match(text, index + length);
+      index = match.capturedStart();
     }
   }
   setCurrentBlockState(0);
 
   int startIndex = 0;
-  if (previousBlockState() != 1)
-    startIndex = commentStartExpression.indexIn(text);
+  if (previousBlockState() != 1) {
+    auto match = commentStartExpression.match(text);
+    startIndex = match.capturedStart();
+  }
 
   while (startIndex >= 0) {
-    int endIndex = commentEndExpression.indexIn(text, startIndex);
+    auto match = commentStartExpression.match(text, startIndex);
+    int endIndex = match.capturedStart();
     int commentLength;
     if (endIndex == -1) {
       setCurrentBlockState(1);
       commentLength = text.length() - startIndex;
     } else {
       commentLength =
-          endIndex - startIndex + commentEndExpression.matchedLength();
+          endIndex - startIndex + match.capturedLength();
     }
     setFormat(startIndex, commentLength, multiLineCommentFormat);
-    startIndex =
-        commentStartExpression.indexIn(text, startIndex + commentLength);
+    match = commentStartExpression.match(text, startIndex + commentLength);
+    startIndex = match.capturedStart();
   }
 }
diff --git a/alphaplot/src/scripting/SyntaxHighlighter.h b/alphaplot/src/scripting/SyntaxHighlighter.h
index b92c4edc3..d73dd6d8d 100644
--- a/alphaplot/src/scripting/SyntaxHighlighter.h
+++ b/alphaplot/src/scripting/SyntaxHighlighter.h
@@ -30,6 +30,7 @@
 #define SYNTAXHIGHLIGHTER_H
 
 #include <QSyntaxHighlighter>
+#include <QRegularExpression>
 
 class SyntaxHighlighter : public QSyntaxHighlighter {
   Q_OBJECT
@@ -41,14 +42,14 @@ class SyntaxHighlighter : public QSyntaxHighlighter {
 
  private:
   struct HighlightingRule {
-    QRegExp pattern;
+    QRegularExpression pattern;
     QTextCharFormat format;
   };
 
   QVector<HighlightingRule> highlightingRules;
 
-  QRegExp commentStartExpression;
-  QRegExp commentEndExpression;
+  QRegularExpression commentStartExpression;
+  QRegularExpression commentEndExpression;
 
   QTextCharFormat keywordFormat;
   QTextCharFormat classFormat;
diff --git a/alphaplot/src/ui/ExportDialog.cpp b/alphaplot/src/ui/ExportDialog.cpp
index 9971cf795..8021bf538 100644
--- a/alphaplot/src/ui/ExportDialog.cpp
+++ b/alphaplot/src/ui/ExportDialog.cpp
@@ -34,6 +34,7 @@
 #include <QPushButton>
 #include <QCheckBox>
 #include <QComboBox>
+#include <QRegularExpression>
 
 ExportDialog::ExportDialog(QWidget *parent, Qt::WindowFlags fl)
     : QDialog(parent, fl) {
@@ -140,7 +141,7 @@ void ExportDialog::accept() {
   sep.replace("\\s", " ");
   sep.replace("\\t", "\t");
 
-  if (sep.contains(QRegExp("[0-9.eE+-]"))) {
+  if (sep.contains(QRegularExpression("[0-9.eE+-]"))) {
     QMessageBox::warning(0, tr("Import options error"),
                          tr("The separator must not contain the following "
                             "characters: 0-9eE.+-"));
diff --git a/alphaplot/src/ui/SettingsDialog.cpp b/alphaplot/src/ui/SettingsDialog.cpp
index 32106f348..6191afdb0 100644
--- a/alphaplot/src/ui/SettingsDialog.cpp
+++ b/alphaplot/src/ui/SettingsDialog.cpp
@@ -19,6 +19,7 @@
 #include <QDebug>
 #include <QStandardItem>
 #include <QStandardItemModel>
+#include <QActionGroup>
 
 #include "../core/IconLoader.h"
 #include "../widgets/aSettingsListView.h"
diff --git a/alphaplot/src/widgets/CustomCharacterDialog.cpp b/alphaplot/src/widgets/CustomCharacterDialog.cpp
index 6ed6b7bd6..8401b9b52 100644
--- a/alphaplot/src/widgets/CustomCharacterDialog.cpp
+++ b/alphaplot/src/widgets/CustomCharacterDialog.cpp
@@ -2,6 +2,7 @@
 
 #include <QDebug>
 #include <QValidator>
+#include <QRegularExpression>
 
 #include "ui_CustomCharacterDialog.h"
 
@@ -9,8 +10,8 @@ CustomCharacterDialog::CustomCharacterDialog(QWidget *parent)
     : QDialog(parent), ui(new Ui_CustomCharacterDialog) {
   ui->setupUi(this);
   setWindowTitle("Custom Char");
-  QRegExp rxThreeHexAtTheEnd("(?:[0-9a-fA-F]{5})");
-  QRegExpValidator *validator = new QRegExpValidator(rxThreeHexAtTheEnd, this);
+  QRegularExpression rxThreeHexAtTheEnd("(?:[0-9a-fA-F]{5})");
+  QRegularExpressionValidator *validator = new QRegularExpressionValidator(rxThreeHexAtTheEnd, this);
   ui->lineEdit->setValidator(validator);
   connect(ui->buttonBox, &QDialogButtonBox::accepted, this, [=]() {
     if (!ui->lineEdit->text().trimmed().isEmpty()) {
diff --git a/config.pri b/config.pri
index 6f46619ca..f505d5733 100644
--- a/config.pri
+++ b/config.pri
@@ -95,30 +95,35 @@ contains(PRESET, linux_all_static) {
   ### mostly static linking, for self-contained binaries
   message(Build configuration: Linux all static)
 
-  LIBS         += /usr/lib/libgsl.a /usr/lib/libgslcblas.a
+  # LIBS         += /usr/lib/libgsl.a /usr/lib/libgslcblas.a
 }
 
 contains(PRESET, osx_dist) {
   # Uses HomeBrew supplied versions of the dependencies
   message(Build configuration: OSX Distro)
 
-  INCLUDEPATH  += /usr/local/include
-  QMAKE_LIBDIR += /usr/local/lib
-  LIBS         += -lgsl -lgslcblas
+  # INCLUDEPATH  += /usr/local/include
+  # QMAKE_LIBDIR += /usr/local/lib
+  # LIBS         += -lgsl -lgslcblas
 }
 
-win32: {
-  !mxe {
-    ### Static linking mostly.
-    message(Build configuration: Win32)
-
-    isEmpty(LIBPATH): LIBPATH = ../3rdparty
-
-    INCLUDEPATH  += "$${LIBPATH}/gsl/include"
-    LIBS         += "$${LIBPATH}/gsl/lib/libgsl.a"
-    LIBS         += "$${LIBPATH}/gsl/lib/libgslcblas.a"
-  }
+if(!debug_and_release|build_pass):CONFIG(debug, debug|release) {
+    LIBS += -lgsld -lgslcblasd
+} else {
+    LIBS += -lgsl -lgslcblas
 }
+# win32: {
+#  !mxe {
+#    ### Static linking mostly.
+#    message(Build configuration: Win32)#
+#
+#    isEmpty(LIBPATH): LIBPATH = ../3rdparty#
+
+#    INCLUDEPATH  += "$${LIBPATH}/gsl/include"
+#    LIBS         += "$${LIBPATH}/gsl/lib/libgsl.a"
+#    LIBS         += "$${LIBPATH}/gsl/lib/libgslcblas.a"
+#  }
+#}
 
 mxe {
   ### Mingw cross compilation environment on Linux.
diff --git a/fitPlugins/exp_saturation/exp_saturation.pro b/fitPlugins/exp_saturation/exp_saturation.pro
index ac0d14469..f7b6bd95f 100644
--- a/fitPlugins/exp_saturation/exp_saturation.pro
+++ b/fitPlugins/exp_saturation/exp_saturation.pro
@@ -6,18 +6,22 @@ TARGET = exp_saturation
 TEMPLATE = lib
 CONFIG += dll
 CONFIG -= qt
-CONFIG += release
+# CONFIG += release
 DESTDIR = ../
 
 INSTALLS += target
 unix:  target.path = /usr/lib$${libsuff}/AlphaPlot/plugins
 win32: target.path = ../../output/plugins
 
-win32:INCLUDEPATH += ../../3rdparty/gsl/include
-win32:LIBS        += ../../3rdparty/gsl/lib/libgsl.a
-win32:LIBS        += ../../3rdparty/gsl/lib/libgslcblas.a
+contains(CONFIG, debug) {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/debug/lib
+    LIBS += -lgsld -lgslcblasd
+} else {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/lib
+    LIBS += -lgsl -lgslcblas
+}
+INCLUDEPATH += $$[QT_INSTALL_PREFIX]/include
 
-unix:LIBS += -L/usr/lib$${libsuff} -lgsl -lgslcblas
 #unix:LIBS += /usr/lib/libgsl.a /usr/lib/libgslcblas.a
 
 SOURCES = exp_saturation.c
diff --git a/fitPlugins/explin/explin.pro b/fitPlugins/explin/explin.pro
index 176d5a552..ed9556e78 100644
--- a/fitPlugins/explin/explin.pro
+++ b/fitPlugins/explin/explin.pro
@@ -6,19 +6,22 @@ TARGET = explin
 TEMPLATE = lib
 CONFIG += dll
 CONFIG -= qt
-CONFIG += release
+# CONFIG += release
 DESTDIR = ../
 
 INSTALLS += target
 unix:  target.path = /usr/lib$${libsuff}/AlphaPlot/plugins
 win32: target.path = ../../output/plugins
 
-win32:INCLUDEPATH += ../../3rdparty/gsl/include
-win32:LIBS        += ../../3rdparty/gsl/lib/libgsl.a
-win32:LIBS        += ../../3rdparty/gsl/lib/libgslcblas.a
+contains(CONFIG, debug) {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/debug/lib
+    LIBS += -lgsld -lgslcblasd
+} else {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/lib
+    LIBS += -lgsl -lgslcblas
+}
+INCLUDEPATH += $$[QT_INSTALL_PREFIX]/include
 
-unix:LIBS += -L/usr/lib$${libsuff} -lgsl -lgslcblas
-#unix:LIBS += /usr/lib/libgsl.a /usr/lib/libgslcblas.a
 
 SOURCES = explin.c
 
diff --git a/fitPlugins/fitRational0/fitRational0.pro b/fitPlugins/fitRational0/fitRational0.pro
index b0adbffdd..bc9684a14 100644
--- a/fitPlugins/fitRational0/fitRational0.pro
+++ b/fitPlugins/fitRational0/fitRational0.pro
@@ -7,7 +7,7 @@ TEMPLATE          = lib
 
 CONFIG           += thread
 CONFIG           += warn_on 
-CONFIG           += release
+# CONFIG           += release
 CONFIG           += dll 
 
 DESTDIR           = ../
@@ -16,11 +16,14 @@ INSTALLS += target
 unix:target.path=/usr/lib$${libsuff}/AlphaPlot/plugins
 win32: target.path = ../../output/plugins
 
-win32:INCLUDEPATH += ../../3rdparty/gsl/include
-win32:LIBS        += ../../3rdparty/gsl/lib/libgsl.a
-win32:LIBS        += ../../3rdparty/gsl/lib/libgslcblas.a
+contains(CONFIG, debug) {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/debug/lib
+    LIBS += -lgsld -lgslcblasd
+} else {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/lib
+    LIBS += -lgsl -lgslcblas
+}
+INCLUDEPATH += $$[QT_INSTALL_PREFIX]/include
 
-unix:LIBS += -L/usr/lib$${libsuff} -lgsl -lgslcblas
-#unix:LIBS += /usr/lib/libgsl.a /usr/lib/libgslcblas.a
 
 SOURCES += fitRational0.cpp
diff --git a/fitPlugins/fitRational1/fitRational1.pro b/fitPlugins/fitRational1/fitRational1.pro
index 190c2eece..9a1be1085 100644
--- a/fitPlugins/fitRational1/fitRational1.pro
+++ b/fitPlugins/fitRational1/fitRational1.pro
@@ -7,7 +7,7 @@ TEMPLATE          = lib
 
 CONFIG           += thread
 CONFIG           += warn_on 
-CONFIG           += release
+# CONFIG           += release
 CONFIG           += dll 
 
 DESTDIR           = ../
@@ -17,11 +17,14 @@ INSTALLS += target
 unix:target.path=/usr/lib$${libsuff}/AlphaPlot/plugins
 win32: target.path = ../../output/plugins
 
-win32:INCLUDEPATH += ../../3rdparty/gsl/include
-win32:LIBS        += ../../3rdparty/gsl/lib/libgsl.a
-win32:LIBS        += ../../3rdparty/gsl/lib/libgslcblas.a
+contains(CONFIG, debug) {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/debug/lib
+    LIBS += -lgsld -lgslcblasd
+} else {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/lib
+    LIBS += -lgsl -lgslcblas
+}
+INCLUDEPATH += $$[QT_INSTALL_PREFIX]/include
 
-unix:LIBS += -L/usr/lib$${libsuff} -lgsl -lgslcblas
-#unix:LIBS += /usr/lib/libgsl.a /usr/lib/libgslcblas.a
 
 SOURCES += fitRational1.cpp
diff --git a/fitPlugins/planck_wavelength/planck_wavelength.pro b/fitPlugins/planck_wavelength/planck_wavelength.pro
index d4e59b7e9..e46fbf0ed 100644
--- a/fitPlugins/planck_wavelength/planck_wavelength.pro
+++ b/fitPlugins/planck_wavelength/planck_wavelength.pro
@@ -6,19 +6,22 @@ TARGET = planck_wavelength
 TEMPLATE = lib
 CONFIG += dll
 CONFIG -= qt
-CONFIG += release
+# CONFIG += release
 DESTDIR = ../
 
 INSTALLS += target
 unix:  target.path = /usr/lib$${libsuff}/AlphaPlot/plugins
 win32: target.path = ../../output/plugins
 
-win32:INCLUDEPATH += ../../3rdparty/gsl/include
-win32:LIBS        += ../../3rdparty/gsl/lib/libgsl.a
-win32:LIBS        += ../../3rdparty/gsl/lib/libgslcblas.a
+contains(CONFIG, debug) {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/debug/lib
+    LIBS += -lgsld -lgslcblasd
+} else {
+    LIBS += -L$$[QT_INSTALL_PREFIX]/lib
+    LIBS += -lgsl -lgslcblas
+}
+INCLUDEPATH += $$[QT_INSTALL_PREFIX]/include
 
-unix:LIBS += -L/usr/lib$${libsuff} -lgsl -lgslcblas
-#unix:LIBS += /usr/lib/libgsl.a /usr/lib/libgslcblas.a
 
 SOURCES = planck_wavelength.c
 
